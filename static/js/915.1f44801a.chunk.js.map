{"version":3,"file":"static/js/915.1f44801a.chunk.js","mappings":"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","sources":["components/LogoTitleBlock/LogoTitleBlock.styled.js","components/LogoTitleBlock/LogoTitleBlock.jsx","components/RegisterAndLogin/RegisterAndLogin.styled.js","components/SubmitBlockAutorization/SubmitBlockAutorization.styled.js","components/SubmitBlockAutorization/SubmitBlockRegister.jsx","components/RegisterAndLogin/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const LogoTitleConteiner = styled.div`\nmargin-bottom: 40px;\n`\n\nexport const LogoConteiner = styled.div`\nmargin-bottom: 108px;\n`\n\nexport const Title = styled.h2`\n  font-size: 64px;\n  font-weight: 700;  \n  line-height: 0.94;\n`;\n\nexport const TitleSpan = styled.span`\n  color: ${color.whiteTranslucent};\n`;\n","import Logo from \"components/Logo/Logo\";\nimport { LogoConteiner, LogoTitleConteiner, Title, TitleSpan } from \"./LogoTitleBlock.styled\";\n\nexport default function LogoTitleBlock() {\n  return (\n    <LogoTitleConteiner>\n      <LogoConteiner>\n        <Logo />\n      </LogoConteiner>\n      <Title>Expand your mind, reading <TitleSpan>a book</TitleSpan></Title>\n    </LogoTitleConteiner>\n  );\n};\n","import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik';\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 16px;\n  justify-content: center ;\n  padding: 32px;\n`\nexport const FormBlock = styled.div`\n  width:600px;\n  height: 736px; \n  background: ${color.blackLight};\n  border-radius: 30px;\n  padding: 40px 64px;\n`\n\n///////////////////////////////////////////////////////////\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 308px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n  border-radius: 12px;\n  margin-bottom: 14px;\n  padding: 16px 14px 16px 65px;\n  padding-left: ${(props) => (props.email ? '53px' : '65px')};\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n`;\n\nexport const FormFieldPassvordConteiner = styled.div`\n  position: relative;  \n`;\n\nexport const FormFieldPassvord = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n  border-radius: 12px;\n  padding:  16px 14px 16px 86px;\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 17px;\n  right: 17px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\n//////////////////////////////////////////////////////////////////////\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -20px; \n  padding:  5px 10px 10px;\n`;\n\nexport const ErrorMessagePassword = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -5px; \n  padding:  5px 10px 10px;\n`;\n","import color from 'common/GlobalColers'\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components'\n\nexport const SubmitBlock = styled.div`\n  /* margin-top: auto; */\n`;\n\nexport const FormBtn = styled.button`\n  border-radius: 30px;\n  color: ${color.blackLight};\n  background: ${color.darkGgeen};\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n  margin-right: 20px;\n  padding: 16px 54px;\n\n  transition: color 0.3s linear, background 0.3s linear; \n\n&:hover,\n&:focus {\n  color: ${color.whitePrimary};\n  background: ${color.blackLight};\n  box-shadow: 0 0 0 2px ${color.whiteLightTranslucent};\n}\n\n`;\n\nexport const LinkTo = styled(NavLink)`\n  position: relative;\n  color: ${color.gryeLight}; \n  font-weight: 500;\n\n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -3px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n  \n`;\n","import { FormBtn, LinkTo, SubmitBlock } from \"./SubmitBlockAutorization.styled\";\n\nexport default function SubmitBlockRegister() {\n  return (    \n    <SubmitBlock>\n      <FormBtn type=\"submit\">Registration</FormBtn>\n      <LinkTo to=\"/login\" >\n        Already have an account?\n      </LinkTo>\n    </SubmitBlock>\n  );\n}\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport sprite from '../../img/sprite.svg';\nimport { Container, ErrorMessagePassword, ErrorMessageStyled, EyeSvg, FormBlock, FormField, FormFieldConteiner, FormFieldLabel, FormFieldPassvord, FormFieldPassvordConteiner, FormFields} from \"./RegisterAndLogin.styled\";\n\nimport ImgAutorization from 'components/ImgAuthorization/ImgAuthorization';\nimport LogoTitleBlock from 'components/LogoTitleBlock/LogoTitleBlock';\nimport SubmitBlockRegister from 'components/SubmitBlockAutorization/SubmitBlockRegister';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { toast } from 'react-toastify';\n\nimport { useNavigate } from 'react-router-dom';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  name: Yup.string().required('Required').min(2, \"The name must have at least 2 letters\"),\n  email: Yup.string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);\n  // const [emailError, setEmailError] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  \n  const handleSubmit = async (values) => {\n    try {\n      await dispatch(register(values)).unwrap();\n      navigate('/recommended');\n    } catch (error) {\n      if (error === \"Request failed with status code 409\") {\n        toast.error(\"User with this email already exists.\");\n      } else {\n        toast.error(\"Registration failed. Please try again later.\");\n      }\n    }\n  }\n  return (\n    <Container>\n      <FormBlock>        \n        <LogoTitleBlock />\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ errors, touched }) => (\n            <Form>\n              <FormFields>  \n                <div>  \n\n                  <FormFieldConteiner>\n                    <FormFieldLabel htmlFor=\"name\">Name:</FormFieldLabel>\n                    <FormField id=\"name\" name=\"name\" type=\"name\" placeholder=\"Nik Ovson\" error={errors.name && touched.name ? \"true\" : \"false\" } />\n                    <ErrorMessageStyled name=\"name\" component='div' />\n                  </FormFieldConteiner>\n          \n          \n                  <FormFieldConteiner>\n                    <FormFieldLabel htmlFor=\"email\">Mail:</FormFieldLabel>\n                    <FormField id=\"email\" name=\"email\" type=\"email\" placeholder=\"nik@google.com\" error={errors.email && touched.email ? \"true\" : \"false\" } email=\"true\" />\n                    <ErrorMessageStyled name=\"email\" component='div' />\n                  </FormFieldConteiner>\n                  {/* {emailError && <EmailErrorMessage >{emailError}</EmailErrorMessage> } */}\n          \n                  <FormFieldPassvordConteiner>\n                    <FormFieldLabel htmlFor=\"password\">Password:</FormFieldLabel>\n                    <FormFieldPassvord id=\"password\" name=\"password\" type={showPassword ? \"text\" : \"password\"} placeholder=\"********\" error={errors.password && touched.password ? \"true\" : \"false\"}  />\n          \n\n          \n                    {showPassword ? (\n                    <EyeSvg\n                      width={20}\n                      height={20}\n                     onClick={togglePasswordVisibility}\n                    >\n                      <use href={`${sprite}#icon-eye`} />\n                    </EyeSvg>\n                      ) : (\n                    <EyeSvg\n                      width={20}\n                      height={20}\n                      onClick={togglePasswordVisibility}\n                    >\n                      <use href={`${sprite}#icon-eye-off`} />\n                    </EyeSvg>\n                    )}\n\n                   <ErrorMessagePassword name=\"password\" component='div' />\n                    {errors.password && touched.password && <EyeSvg\n                      width={20}\n                      height={20}\n                    >\n                      <use href={`${sprite}#icon-pajamas_error`} />\n                    </EyeSvg> }\n\n                    {!errors.password && touched.password && <EyeSvg\n                      width={20}\n                      height={20}\n                    >\n                      <use href={`${sprite}#icon-check-ok`} />\n                    </EyeSvg> }\n\n\n\n                  </FormFieldPassvordConteiner>\n                </div>     \n   \n                <SubmitBlockRegister />\n              </FormFields>                    \n            </Form>\n          )}\n        </Formik>\n      </FormBlock>\n      <ImgAutorization />\n    </Container>\n  );\n}\n","import Register from \"components/RegisterAndLogin/Register\";\n\nexport default function LoginPage() {  \n  return (\n    <Register />\n  );\n}"],"names":["LogoTitleConteiner","styled","_templateObject","_taggedTemplateLiteral","LogoConteiner","_templateObject2","Title","_templateObject3","TitleSpan","_templateObject4","color","LogoTitleBlock","_jsxs","children","_jsx","Logo","Container","FormBlock","FormFields","FormFieldConteiner","FormFieldLabel","_templateObject5","FormField","Field","_templateObject6","props","error","email","FormFieldPassvordConteiner","_templateObject7","FormFieldPassvord","_templateObject8","EyeSvg","_templateObject9","ErrorMessageStyled","ErrorMessage","_templateObject10","ErrorMessagePassword","_templateObject11","SubmitBlock","FormBtn","LinkTo","NavLink","SubmitBlockRegister","type","to","initialValues","name","password","schema","Yup","required","min","matches","Register","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","register","unwrap","t0","toast","stop","_x","apply","arguments","Formik","validationSchema","onSubmit","_ref2","errors","touched","Form","htmlFor","id","placeholder","component","width","height","onClick","href","concat","sprite","ImgAutorization","LoginPage"],"sourceRoot":""}