{"version":3,"file":"static/js/716.9c19f4eb.chunk.js","mappings":"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","sources":["components/LibraryDashoard/LibraryDashoard.styled.js","components/MyLibraryBooks/MyLibraryBooks.styled.js","components/EmptyLibraryScreensaver/EmptyLibraryScreensaver.styled.js","components/EmptyLibraryScreensaver/EmptyLibraryScreensaver.jsx","components/MyLibraryBooks/MyLibraryBooks.jsx","components/ModalAddBookSuccessfully/ModalAddBookSuccessfully.styled.js","components/ModalAddBookSuccessfully/ModalAddBookSuccessfully.jsx","components/LibraryDashoard/LibraryDashoard.jsx","components/Library/Library..jsx","pages/LibraryPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const MainBlockLibraryDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n`\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\n// export const FilterTitle = styled.h3`\n// font-size: 14px;\n// font-weight: 500;\n//   margin-bottom: 8px;\n//   margin-left: 14px;\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -5px; \n  padding:  5px 10px 10px;\n`;\n\n//////////////////////////////////////////////\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 259px;\n  border-radius: 12px;\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n`\nexport const StartWorkoutTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n\n  margin-bottom: 20px;\n`\n/////   \n\nexport const Arguments = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`\nexport const CardRecomended = styled.li`\n  width: 71px;\n  height: 141px;  \n`\n\nexport const CardImg = styled.img`\n  width: 71px;\n  height: 107px;\n  border-radius: 8px;  \n\n  margin-bottom: 8px;\n`\n\nexport const CardTitle = styled.h4`\n  font-size: 10px;\n  font-weight: 700;\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  margin-bottom: 2px;\n`\n\nexport const CardAutor = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n//////////////////////////////////////////////////////////////\n\n\nexport const LinkToHome = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${color.gryeLight}; \n\n  margin: auto 0;\n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\n\n\nexport const LinkTextToHome = styled.p`\n  position: relative; \n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\n\n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n// export const MyLibraryBlock = styled.div`\n//   width: 847px;\n//   height: 651px;\n//   border-radius: 30px;\n\n//   background: ${color.blackLight};\n//    padding: 40px 40px 28px 40px;\n//  `\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\n// export const MyLibraryTitle = styled.h1`\n//   font-size: 28px;\n//   font-weight: 700;\n//   line-height: 1.14;\n// `\n\n///////////////////////////////////////////////////////////////\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n\n  width: 153px;\n  height: 46px;\n  border-radius: 12px; \n  border: 1px solid ${color.charcoalGray};\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 14px;\n\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 120%; \n  left: 0;\n  color: ${color.gryeLight};\n  background-color: ${color.gryeBlack};\n  border-top: none;\n  display: none;\n\n  list-style: none;\n  padding: 14px;\n  margin: 0;\n\n  width: 100%;\n  border-radius: 12px;\n  display: ${(props) => (props.open ? 'block' : 'none')};\n`;\n\nexport const DropdownItem = styled.li`\n  cursor: pointer;  \n\n  &:not(:last-child) {\n    margin-bottom: 7px;\n  }\n  &:hover {\n    color: ${color.whitePrimary};\n  }\n\n`;\n\n\nexport const BooksTen = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n\n  height: 523px;\n  overflow: hidden;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n\nexport const EmptyLibraryBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  /* width: 247px; */\n  margin-top: 147px;\n`\nexport const EmptyLibraryPicture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* flex-direction: column; */\n  width: 130px;\n  height: 130px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin-bottom: 20px;\n`\n\nexport const EmptyLibraryText = styled.p`\n  text-align: center;\n  width: 274px;\n`\n\nexport const EmptyLibrarySpan = styled.span`\n  color: ${color.gryeLight};\n`","import imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport { EmptyLibraryBlock, EmptyLibraryPicture, EmptyLibrarySpan, EmptyLibraryText } from './EmptyLibraryScreensaver.styled';\n\nexport default function EmptyLibraryScreensaver() {\n  return (\n    <EmptyLibraryBlock>\n      <EmptyLibraryPicture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={70} />\n      </EmptyLibraryPicture> \n      <EmptyLibraryText>To start training, add <EmptyLibrarySpan>some of your books</EmptyLibrarySpan> or from the recommended ones</EmptyLibraryText>\n    </EmptyLibraryBlock>\n  );\n}","import sprite from '../../img/sprite.svg';\nimport { useEffect, useRef, useState } from \"react\";\nimport { BooksTen, Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg, HeaderAndPaginationBlock } from './MyLibraryBooks.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ownBooks } from '../../redux/books/operations';\nimport { selectOwnBooks } from '../../redux/books/selector';\nimport CardBook from 'components/CardBook/CardBook';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport DetailedInformationBook from 'components/DetailedInformationBook/DetailedInformationBook';\nimport UnivesalMainConteainer from 'components/UniversalMainContainer/UniversalMainContainer';\nimport { MainBlockTitle } from 'components/UniversalMainContainer/UniversalMainContainer.styled';\nimport EmptyLibraryScreensaver from 'components/EmptyLibraryScreensaver/EmptyLibraryScreensaver';\n\nconst options = [\"Unread\", \"In progress\", \"Done\", \"All books\" ]\n\nexport default function MyLibraryBooks() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false);\n\n  const [selectedBooks, setSelectedBooks] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const selecctRef = useRef(null);\n\n  const ownLibrary = useSelector(selectOwnBooks);\n  // console.log(ownLibrary)\n  const dispatch = useDispatch();\n  useEffect(()=> {\n    dispatch(ownBooks())\n  }, [dispatch]);\n\n  \n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  useEffect(() => {\n    \n    const handleClickOutside = (event) => {\n        if (selecctRef.current && !selecctRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n        document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n    // console.log(\"selectedBooks\")\n  };\n\n\n  return (\n    <UnivesalMainConteainer>\n        <HeaderAndPaginationBlock>\n          <MainBlockTitle>My library</MainBlockTitle>\n\n          <Dropdown onClick={toggleDropdown} ref={selecctRef}>\n            {!isOpen ? (<DropdownSvg width={16} height={16} >\n              <use href={`${sprite}#icon-chevron-down`}  />\n            </DropdownSvg>) : (\n            <DropdownSvg width={16} height={16} >\n              <use href={`${sprite}#icon-chevron-upp`}  />\n            </DropdownSvg>)}\n            <DropdownButton >{selectedBooks || \"All books\"}</DropdownButton>\n            <DropdownList open={isOpen}>\n              {options.map((book) => (\n                <DropdownItem key={book} value={book} onClick={() => setSelectedBooks(book)}>\n                  {book}\n                </DropdownItem>\n              ))}\n            </DropdownList>                   \n          </Dropdown>\n        </HeaderAndPaginationBlock>\n\n\n\n        {ownLibrary.length === 0 ? ( \n          <EmptyLibraryScreensaver />\n        ) : (\n          <BooksTen>\n            {Array.isArray(ownLibrary) && ownLibrary.map((book) => (  \n              <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} currentPage=\" MyLibrary\"  />\n            ))}\n          </BooksTen> \n        )}\n\n\n\n\n\n\n        <PortalModal active={modalOpen} setActive={setModalOpen}>\n          <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Start reading\" />\n        </PortalModal>\n      </UnivesalMainConteainer>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 342px;\n  height: 290px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 50px ;\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const Img = styled.picture`\n  width: 68px;\n  height: 70px; \n  margin-bottom: 32px;\n`\n\nexport const Title = styled.h3`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 14px;\n`\nexport const Text = styled.p`\n  text-align: center;\n  color: ${color.gryeLight};\n`\nexport const TextSpan = styled.span`  \n  color: ${color.whitePrimary};\n`","import sprite from '../../img/sprite.svg';\nimport { ClosingSymbol, Conteiner, Img, Text, TextSpan, Title } from './ModalAddBookSuccessfully.styled';\nimport like2x from '../../img/stackBooksAndLike/like-desc@2x.png';\nimport like from '../../img/stackBooksAndLike/like-desc.png';\n\nexport default function ModalAddBookSuccessfully({ closeModals}) {\n\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n      <Img>\n        <source srcSet={like2x} media=\"(min-resolution: 192dpi)\" />\n        <img src={like} alt='add book' />\n      </Img>  \n      <Title>Good job</Title>\n      <Text>Your book is now in <TextSpan>the library!</TextSpan> The joy knows no bounds and now you can start your training</Text>\n\n    </Conteiner>\n  );\n}\n  ","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, CardAutor, CardImg, CardRecomended, CardTitle, ErrorMessageStyled, Filters, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTextToHome, LinkToHome, MainBlockLibraryDashboard, StartWorkoutBlock, StartWorkoutTitle } from './LibraryDashoard.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBookData } from '../../redux/books/selector';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle } from 'components/Dashboard/Dashboard.styled';\nimport { addNewBook } from '../../redux/books/operations';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport ModalAddBookSuccessfully from 'components/ModalAddBookSuccessfully/ModalAddBookSuccessfully';\nimport { useState } from 'react';\n\nconst initialValues = {\n  title: '',\n  author: '',\n  page: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string().required('Required'),\n  author: Yup.string().required('Required'),\n  page: Yup.string().required('Required').matches(/^[0-9]+$/, 'Must be only digits')\n  .transform((value, originalValue) => originalValue.replace(/\\s/g, '')),\n});\n\nexport default function LibraryDashboard() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const results = useSelector(selectBookData);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e, { resetForm }) => {  \n    const title= e.title\n    const author= e.author\n    const page= parseInt(e.page)\n\n    if(page) {\n      dispatch(addNewBook({ title, author, totalPages: page }));\n      setModalOpen(true)\n      resetForm();  // Сбрасываем форму после успешного сабмита\n    }\n  }\n  return (\n    <Dashboard>\n    <MainBlockLibraryDashboard>      \n      <Filters>\n        <FilterTitle>Create your library:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({  errors, touched, resetForm  }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"I See You Are...\" error={errors.title && touched.title ? \"true\" : \"false\" } />     \n                  <ErrorMessageStyled name=\"title\" component='div' />           \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Hilarion Pavlyuk\" paddindleft=\"95px\"  error={errors.author && touched.author ? \"true\" : \"false\" } />    \n                  <ErrorMessageStyled name=\"author\" component='div' />            \n                </FormFieldConteiner> \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"page\">Number of pages:</FormFieldLabel>\n                  <FormField id=\"page\" name=\"page\" type=\"page\" placeholder=\"664\" paddindleft=\"135px\" error={errors.page && touched.page ? \"true\" : \"false\" } />             \n                  <ErrorMessageStyled name=\"page\" component='div' />   \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"Add book\" width=\"131px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Recommended books</StartWorkoutTitle>\n\n\n\n        <Arguments >\n          {results?.slice(0, 3).map((book) => (\n            <CardRecomended key={book._id}>\n              <CardImg src={book.imageUrl} alt=\"book title\"  />\n              <CardTitle>{book.title}</CardTitle>\n              <CardAutor>{book.author}</CardAutor>\n            </CardRecomended>\n          ))}     \n        </Arguments>\n\n\n\n        <LinkToHome to=\"/recommended\">\n          <LinkTextToHome>Home </LinkTextToHome>            \n          <svg width={24} height={24}>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </svg>          \n        </LinkToHome>\n      </StartWorkoutBlock>\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <ModalAddBookSuccessfully  closeModals={() => setModalOpen()} />\n      </PortalModal>\n    </MainBlockLibraryDashboard>\n    </Dashboard>\n  );\n}\n  ","import MyLibraryBooks from 'components/MyLibraryBooks/MyLibraryBooks';\nimport LibraryDashboard from \"components/LibraryDashoard/LibraryDashoard\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\n\nexport default function Library() {\n  return (\n    <UnivesalGeneralBlock >\n      \n      <LibraryDashboard />\n   \n      <MyLibraryBooks />\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Library from \"components/Library/Library.\";\n\nexport default function LibraryPage() {\n  return (\n    <Library />\n  );\n}\n  "],"names":["MainBlockLibraryDashboard","styled","_templateObject","_taggedTemplateLiteral","Filters","_templateObject2","FormFields","_templateObject3","FormFieldConteiner","_templateObject4","FormFieldLabel","_templateObject5","color","FormField","Field","_templateObject6","props","paddindleft","error","ErrorMessageStyled","ErrorMessage","_templateObject7","StartWorkoutBlock","_templateObject8","StartWorkoutTitle","_templateObject9","Arguments","_templateObject10","CardRecomended","_templateObject11","CardImg","_templateObject12","CardTitle","_templateObject13","CardAutor","_templateObject14","LinkToHome","NavLink","_templateObject15","LinkTextToHome","_templateObject16","HeaderAndPaginationBlock","Dropdown","DropdownSvg","DropdownButton","DropdownList","open","DropdownItem","BooksTen","EmptyLibraryBlock","EmptyLibraryPicture","EmptyLibraryText","EmptyLibrarySpan","EmptyLibraryScreensaver","_jsxs","children","_jsx","srcSet","imgBooksDesc2x","media","src","imgBooksDesc","alt","width","options","MyLibraryBooks","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","bookData","setBookData","_useState5","_useState6","selectedBooks","setSelectedBooks","_useState7","_useState8","isOpen","setIsOpen","selecctRef","useRef","ownLibrary","useSelector","selectOwnBooks","dispatch","useDispatch","useEffect","ownBooks","openLoginModal","book","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","UnivesalMainConteainer","MainBlockTitle","onClick","ref","height","href","concat","sprite","map","value","length","Array","isArray","CardBook","currentPage","_id","PortalModal","active","setActive","DetailedInformationBook","closeModals","btnLabel","Conteiner","ClosingSymbol","Img","Title","Text","TextSpan","ModalAddBookSuccessfully","_ref","like2x","initialValues","title","author","page","schema","Yup","required","matches","transform","originalValue","replace","LibraryDashboard","results","selectBookData","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","e","resetForm","parseInt","addNewBook","totalPages","_ref2","errors","touched","Form","htmlFor","id","name","type","placeholder","component","CustomButton","label","slice","imageUrl","to","Library","UnivesalGeneralBlock","LibraryPage"],"sourceRoot":""}