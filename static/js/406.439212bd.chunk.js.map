{"version":3,"file":"static/js/406.439212bd.chunk.js","mappings":"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","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/PortalModal/PortalModal.styled.js","components/PortalModal/PortalModal.jsx","components/Recomended/Recomended.styled.js","components/RecomendedDashboard/RecomendedDashboard.styled.js","components/RecomendedDashboard/RecomendedDashboard.jsx","components/Recomended/Recomended.jsx","pages/RecomendedPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n\n  background: transparent;\n  \n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n\n  border-radius: 8px; \n  margin-bottom: 8px;\n  background: ${color.gryeBlack};\n`\n\nexport const BookDataBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const TitleAutorBlock = styled.div`\n  max-width: ${({ page }) => ( page === 'true' ? '89px' : '137px')};\n`\n\nexport const BookTitle = styled.h3`\n\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n  white-space: nowrap;\n`\n///////////////////////////////////////////////////////////\nexport const DellBtn = styled.button`\n  background: transparent;\n`","import { BookAutor, BookCard, BookDataBlock, BookImg, BookTitle, DellBtn, TitleAutorBlock } from \"./CardBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { deleteBook } from \"../../redux/books/operations\";\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function CardBook({book, openLoginModal, currentPage=false}) {\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    // console.log(book._id)\n    dispatch(deleteBook(book._id));\n  };\n\n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n  const imageUrl = book.imageUrl || getImageUrl();\n  return (\n    <BookCard>\n      <BookImg src={imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n      <BookDataBlock>\n        <TitleAutorBlock page={currentPage === \" MyLibrary\" ? 'true' : 'false' }>\n          <BookTitle>{book.title}</BookTitle>\n          <BookAutor>{book.author}</BookAutor>\n        </TitleAutorBlock>\n        \n        {currentPage === \" MyLibrary\" && (\n          <DellBtn onClick={handleDeleteClick} >        \n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg> \n          </DellBtn>\n        )}\n\n      </BookDataBlock>\n    </BookCard>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 500px;\n  height: 483px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 50px ;\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const CoverBook = styled.img`\n  width: 153px;\n  height: 233px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const TitleBook = styled.h2`\n  max-width: 400px;\n  font-size: 20px;\n  margin-bottom: 2px;\n\n     /* Ограничиваем текст одной строкой */\n     white-space: nowrap;\n     overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AuthorBook = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 32px;\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { addBookById } from \"../../redux/books/operations\";\n// import { selectOwnBooks } from \"../../redux/books/selector\";\nimport { useNavigate } from 'react-router-dom';\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function DetailedInformationBook({ closeModals, bookData, btnLabel }) {\n  // const ownLibrary = useSelector(selectOwnBooks); \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // console.log(ownLibrary)\n\n  const handleButtonClick =  () => {   \n    if(btnLabel === \"Add to library\") dispatch(addBookById(bookData._id));  \n    if(btnLabel === \"Start reading\") navigate(`/reading/${bookData._id}`);\n\n    closeModals();\n  }; \n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n\n  const imageUrl = bookData.imageUrl || getImageUrl();\n\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <CoverBook src={imageUrl} alt=\"cover\" />\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label={btnLabel} onClick={handleButtonClick} width=\"162px\" height=\"46px\" />\n    </Conteiner>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Modal = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;    \n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${color.dimmedBackground};    \n    overflow: auto;\n    z-index:5;\n\n    transform: scale(0);\n    &.active {\n        transform: scale(1);\n    }\n`;","import ReactDOM from 'react-dom';\nimport React, { useEffect } from 'react';\nimport { Modal } from './PortalModal.styled';\n\nexport default function PortalModal({ active, setActive, children }) {\n  useEffect(() => {\n    const closeModal = (e) => {\n      if (e.key === 'Escape') {\n        setActive(false);\n      }\n    };\n\n    const handleBodyScroll = (disableScroll) => {\n      if (disableScroll) {        \n        document.body.classList.add('no-scroll');\n      } else {        \n        document.body.classList.remove('no-scroll');\n      }\n    };\n\n    if (active) {        \n      document.addEventListener('keydown', closeModal);\n      handleBodyScroll(true);\n    } else {        \n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    };\n  }, [active, setActive]);\n\n  return ReactDOM.createPortal(\n    <Modal className={active ? 'active' : ''} onClick={() => setActive(false)}>\n      <div onClick={(e) => e.stopPropagation()}>{children}</div>\n    </Modal>,\n    document.getElementById('modal')\n  );\n};\n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n// export const RecomendedBlock = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: 16px;\n\n//   padding:  16px 0;\n// `\n\n//////////////////////////////////////////\n\n\n// export const RecommendedBooksBlock = styled.div`\n//   width: 847px;\n//   height: 651px;\n//   border-radius: 30px;\n\n//   background: ${color.blackLight};\n//   padding: 40px 40px 28px 40px;\n// `\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\n// export const RecommendedTitle = styled.h1`\n//   font-size: 28px;\n//   font-weight: 700;\n//   line-height: 1.14;\n// `\nexport const PaginationBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n\n  background: transparent;\n  border-radius: 50%; \n  border: 1px solid ${color.whiteLightTranslucent};\n\n  &:last-child {\n    margin-right: 0; \n  }\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${(props) => (props.stoke === \"true\" ? color.whiteLightTranslucent : color.whitePrimary)};\n`\n\n///////////////////////////////////////////////////////////////////////////\n\nexport const BooksTen = styled.ul`\n  /* width: 137px;\n  height: 248px; */\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n`\n\n// export const BookCard = styled.li`\n//   width: 137px;\n//   height: 248px;\n//   /* margin-righ+t: 8px; */\n\n//   background: transparent;\n//   /* border-radius: 50%;  */\n//   /* border: 1px solid ${color.whiteLightTranslucent}; */\n\n//   &:last-child {\n//     margin-right: 0; \n//   }\n// `\n// export const BookImg = styled.img`\n//   width: 137px;\n//   height: 208px;\n\n//   border-radius: 8px; \n//   margin-bottom: 8px;\n// `\n\n// export const BookTitle = styled.h3`\n//   font-size: 14px ;\n//   font-weight: 700;\n//   margin-bottom: 2px;\n\n//    /* Ограничиваем текст одной строкой */\n//    white-space: nowrap;\n\n//      /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n// `\n\n// export const BookAutor = styled.p`\n//   font-size: 10px ;\n//   color: ${color.gryeLight};\n// `","import color from 'common/GlobalColers'\nimport { Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const FilterTitle = styled.h3`\nfont-size: 14px;\nfont-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n`;\n\n\n\n\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 272px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport const StartWorkoutTitle = styled.p`\n  font-size: 20px;\nfont-weight: 700;\nline-height: 1;\n\nmargin-bottom: 40px;\n`\nexport const Arguments = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: ${(props) => props.maginbottom || 'auto'};\n`\nexport const SeriaNumber = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  font-size: 20px;\n  font-weight: 700;  \n  color: ${color.blackLight};\n  background: ${color.whitePrimary};\n  \n`\nexport const TextOne = styled.p`\n  width: 190px;  \n`\nexport const TextTwo = styled.p`\n  width: 200px;  \n`\n\nexport const TextSpan = styled.span`\n color: ${color.gryeLight};\n  \n`\n\nexport const LinkToLibrary = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;  color: ${color.gryeLight}; \n  \n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\nexport const LinkTextToLibrary = styled.p`\n  position: relative; \n\n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\nexport const QuoteBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 313px;\n  height: 83px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 14px 20PX;\n`\n// export const BlackBlock = styled.div`\n//   width: 40px;\n//   height: 40px;\n//   background: ${color.black};\n// `\n\nexport const Quote = styled.p`\n  width: 219px;\n  color: ${color.gryeLight};\n \n`\n\nexport const QuoteSpan = styled.span`  \n  color: ${color.whitePrimary};\n \n`\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, Filters, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTextToLibrary, LinkToLibrary, Quote, QuoteBlock, QuoteSpan, SeriaNumber, StartWorkoutBlock, StartWorkoutTitle, TextOne, TextSpan, TextTwo } from './RecomendedDashboard.styled';\n\nimport imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle } from 'components/Dashboard/Dashboard.styled';\nimport { fetchBooks } from '../../redux/books/operations';\nimport { useDispatch } from 'react-redux';\n\nconst initialValues = {\n  title: '',\n  author: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string(),\n  author: Yup.string(),\n});\n\nexport default function RecomendedDashboard() {\n  const dispatch = useDispatch();\n  const handleSubmit = (e) => {  \n    const title= e.title\n    const author= e.author\n\n    dispatch(fetchBooks({ title, author  }))\n  }\n  return (\n    <Dashboard>\n      \n      <Filters>\n        <FilterTitle>Filters:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ touched }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"Enter text\" />                \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Enter text\" paddindleft=\"95px\" />                \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"To apply\" onClick={handleSubmit} width=\"122px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Start your workout</StartWorkoutTitle>\n        <Arguments maginbottom=\"20px\" >\n          <SeriaNumber>1</SeriaNumber>\n          <TextOne>Create a personal library: <TextSpan>add the books you intend to read to it.</TextSpan></TextOne>\n        </Arguments>\n        <Arguments maginbottom=\"26px\">\n          <SeriaNumber>2</SeriaNumber>\n          <TextTwo>Create your first workout: <TextSpan>define a goal, choose a period, start training.</TextSpan></TextTwo>\n        </Arguments>\n\n        <LinkToLibrary to=\"/library\">\n          <LinkTextToLibrary>My library </LinkTextToLibrary>\n            \n          <svg width={24} height={24}>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </svg>          \n        </LinkToLibrary>\n      </StartWorkoutBlock>\n\n      <QuoteBlock>\n        \n      <picture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={40} />\n      </picture>  \n        \n        <Quote>\"Books are <QuoteSpan>windows</QuoteSpan> to the world, and reading is a journey into the unknown.\"</Quote>\n      </QuoteBlock>\n\n    </Dashboard>\n  );\n}\n  ","import { BooksTen, HeaderAndPaginationBlock, PaginationBtn,PaginationSvg} from \"./Recomended.styled\"\nimport sprite from '../../img/sprite.svg';\nimport RecomendedDashboard from \"components/RecomendedDashboard/RecomendedDashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchBooks } from \"../../redux/books/operations\";\nimport { selectBookData, selectTotalPage } from \"../../redux/books/selector\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport DetailedInformationBook from \"components/DetailedInformationBook/DetailedInformationBook\";\nimport CardBook from \"components/CardBook/CardBook\";\nimport UnivesalMainConteainer from \"components/UniversalMainContainer/UniversalMainContainer\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\nimport { MainBlockTitle } from \"components/UniversalMainContainer/UniversalMainContainer.styled\";\n\nexport default function Recomended() {\n  const dispatch = useDispatch();\n  const results = useSelector(selectBookData)\n  const totalPages = useSelector(selectTotalPage);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false); \n  const [page, setPage] = useState(1);\n  // const ownLibrary = useSelector(selectOwnBooks); \n\n  useEffect(()=> {\n    dispatch(fetchBooks({ page, limit: 10  }))\n  }, [dispatch, page]);\n\n  const handlePageChange = (newPage) => { \n    if (newPage >= 1 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n  // console.log(ownLibrary)\n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  return (\n    <UnivesalGeneralBlock >\n      \n        <RecomendedDashboard />\n      \n\n      <UnivesalMainConteainer >\n        <HeaderAndPaginationBlock>\n          <MainBlockTitle>Recommended</MainBlockTitle>\n          <div>\n            <PaginationBtn onClick={() => handlePageChange(page - 1)} >\n              <PaginationSvg stoke={page === 1 ? \"true\" : ''}>\n                <use href={`${sprite}#icon-chevron-left`} />\n              </PaginationSvg>\n            </PaginationBtn>\n            <PaginationBtn onClick={() => handlePageChange(page + 1)}>\n              <PaginationSvg stoke={page === totalPages ? \"true\" : ''} >\n                <use href={`${sprite}#icon-chevron-right`} />\n              </PaginationSvg>\n            </PaginationBtn>\n          </div>\n        </HeaderAndPaginationBlock>\n\n\n\n        <BooksTen>\n          {results?.map((book) => (\n            <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} />\n          ))}\n        </BooksTen>   \n\n      </UnivesalMainConteainer>\n\n\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Add to library\"/>\n      </PortalModal>\n\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Recomended from \"components/Recomended/Recomended\";\n\nexport default function RecomendedPage() {\n  return (\n    <Recomended />\n  );\n}\n  "],"names":["BookCard","styled","_templateObject","_taggedTemplateLiteral","BookImg","_templateObject2","color","BookDataBlock","_templateObject3","TitleAutorBlock","_templateObject4","_ref","page","BookTitle","_templateObject5","BookAutor","_templateObject6","DellBtn","_templateObject7","CardBook","book","openLoginModal","_ref$currentPage","currentPage","dispatch","useDispatch","imageUrl","Image","src","notFoundImg","window","devicePixelRatio","notFoundImg2x","_jsxs","children","_jsx","alt","onClick","title","author","deleteBook","_id","width","height","href","concat","sprite","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","btnLabel","navigate","useNavigate","totalPages","CustomButton","label","addBookById","Modal","PortalModal","active","setActive","useEffect","closeModal","e","key","handleBodyScroll","disableScroll","document","body","classList","add","remove","addEventListener","removeEventListener","ReactDOM","className","stopPropagation","getElementById","HeaderAndPaginationBlock","PaginationBtn","PaginationSvg","props","stoke","BooksTen","Filters","FormFields","FormFieldConteiner","FormFieldLabel","FormField","Field","paddindleft","StartWorkoutBlock","StartWorkoutTitle","_templateObject8","Arguments","_templateObject9","maginbottom","SeriaNumber","_templateObject10","TextOne","_templateObject11","TextTwo","_templateObject12","TextSpan","_templateObject13","LinkToLibrary","NavLink","_templateObject14","LinkTextToLibrary","_templateObject15","QuoteBlock","_templateObject16","Quote","_templateObject17","QuoteSpan","_templateObject18","initialValues","schema","Yup","RecomendedDashboard","handleSubmit","fetchBooks","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","touched","Form","htmlFor","id","name","type","placeholder","to","srcSet","imgBooksDesc2x","media","imgBooksDesc","Recomended","results","useSelector","selectBookData","selectTotalPage","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","setPage","limit","handlePageChange","newPage","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlockTitle","map","RecomendedPage"],"sourceRoot":""}