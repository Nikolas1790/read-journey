{"version":3,"file":"static/js/924.cba1c05a.chunk.js","mappings":"6LAEe,SAASA,EAASC,GAAgB,IAAbC,EAAQD,EAARC,SAClC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,CAAAF,SACZA,GAGP,C,mHCLaE,EAAiBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4HAKxBC,EAAAA,EAAAA,YAIHC,EAAcJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+F,oGCTvBI,E,QAAQN,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qUASPC,EAAAA,EAAAA,kB,SCRT,SAASI,EAAWX,GAAmC,IAAhCY,EAAMZ,EAANY,OAAQC,EAASb,EAATa,UAAWZ,EAAQD,EAARC,SA8BvD,OA7BAa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,SAACC,GACJ,WAAVA,EAAEC,KACJJ,GAAU,EAEd,EAEMK,EAAmB,SAACC,GACpBA,EACFC,SAASC,KAAKC,UAAUC,IAAI,aAE5BH,SAASC,KAAKC,UAAUE,OAAO,YAEnC,EAUA,OARIZ,GACFQ,SAASK,iBAAiB,UAAWV,GACrCG,GAAiB,KAEjBE,SAASM,oBAAoB,UAAWX,GACxCG,GAAiB,IAGZ,WACLE,SAASM,oBAAoB,UAAWX,GACxCG,GAAiB,EACnB,CACF,GAAG,CAACN,EAAQC,IAELc,EAAAA,cACLzB,EAAAA,EAAAA,KAACQ,EAAK,CAACkB,UAAWhB,EAAS,SAAW,GAAIiB,QAAS,kBAAMhB,GAAU,EAAM,EAACZ,UACxEC,EAAAA,EAAAA,KAAA,OAAK2B,QAAS,SAACb,GAAC,OAAKA,EAAEc,iBAAiB,EAAC7B,SAAEA,MAE7CmB,SAASW,eAAe,SAE5B,C,sECtCaC,E,QAAe5B,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sH,SCAvB,SAAS2B,EAAoBjC,GAAgB,IAAbC,EAAQD,EAARC,SAC7C,OACEC,EAAAA,EAAAA,KAAC8B,EAAY,CAAA/B,SACVA,GAGP,C,6ECNe,SAASiC,EAAsBlC,GAAgB,IAAbC,EAAQD,EAARC,SAC/C,OACEC,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CAAAlC,SACPA,GAGP,C,kHCLakC,EAAY/B,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2HAKnBC,EAAAA,EAAAA,YAIH6B,EAAiBhC,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wE,wJCZhC,IAAM+B,EAAiB,SAACC,GAAK,OAAKA,EAAMC,KAAKC,IAAK,EAE5CC,EAAkB,SAACH,GAAK,OAAKA,EAAMC,KAAKG,UAAW,EAEnDC,EAAiB,SAACL,GAAK,OAAKA,EAAMC,KAAKK,OAAQ,EAE/CC,EAAwB,SAACP,GAAK,OAAKA,EAAMC,KAAKO,WAAY,EAE1DC,EAAiB,SAACT,GAAK,OAAKA,EAAMC,KAAKS,QAAS,C","sources":["components/Dashboard/Dashboard.jsx","components/Dashboard/Dashboard.styled.js","components/PortalModal/PortalModal.styled.js","components/PortalModal/PortalModal.jsx","components/UniversalGeneralBlock/UniversalGeneralBlock.styled.js","components/UniversalGeneralBlock/UniversalGeneralBlock.jsx","components/UniversalMainContainer/UniversalMainContainer.jsx","components/UniversalMainContainer/UniversalMainContainer.styled.js","redux/books/selector.js"],"sourcesContent":["import { DashboardBlock} from './Dashboard.styled';\n\nexport default function Dashboard({ children }) {\n  return (\n    <DashboardBlock>\n      {children}\n    </DashboardBlock>\n  );\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const DashboardBlock = styled.div`\n  width: 353px;\n  height: 651px;\n  border-radius: 30px;\n\n  background: ${color.blackLight};\n  padding: 40px 20px 20px 20px;\n;`\n\nexport const FilterTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n`","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Modal = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;    \n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${color.dimmedBackground};    \n    overflow: auto;\n    z-index:5;\n\n    transform: scale(0);\n    &.active {\n        transform: scale(1);\n    }\n`;","import ReactDOM from 'react-dom';\nimport React, { useEffect } from 'react';\nimport { Modal } from './PortalModal.styled';\n\nexport default function PortalModal({ active, setActive, children }) {\n  useEffect(() => {\n    const closeModal = (e) => {\n      if (e.key === 'Escape') {\n        setActive(false);\n      }\n    };\n\n    const handleBodyScroll = (disableScroll) => {\n      if (disableScroll) {        \n        document.body.classList.add('no-scroll');\n      } else {        \n        document.body.classList.remove('no-scroll');\n      }\n    };\n\n    if (active) {        \n      document.addEventListener('keydown', closeModal);\n      handleBodyScroll(true);\n    } else {        \n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    };\n  }, [active, setActive]);\n\n  return ReactDOM.createPortal(\n    <Modal className={active ? 'active' : ''} onClick={() => setActive(false)}>\n      <div onClick={(e) => e.stopPropagation()}>{children}</div>\n    </Modal>,\n    document.getElementById('modal')\n  );\n};\n","import styled from 'styled-components'\n\nexport const GeneralBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  padding:  16px 0;\n;`","import { GeneralBlock } from \"./UniversalGeneralBlock.styled\";\n\nexport default function UnivesalGeneralBlock({ children }) {\n  return (\n    <GeneralBlock>\n      {children}\n    </GeneralBlock>\n  );\n}","import { MainBlock } from \"./UniversalMainContainer.styled\";\n\nexport default function UnivesalMainConteainer({ children }) {\n  return (\n    <MainBlock>\n      {children}\n    </MainBlock>\n  );\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const MainBlock = styled.div`\n  width: 847px;\n  height: 651px;\n  border-radius: 30px;\n\n  background: ${color.blackLight};\n  padding: 40px 40px 28px 40px;\n`\n\nexport const MainBlockTitle = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.14;\n`","export const selectBookData = (state) => state.book.data;\n\nexport const selectTotalPage = (state) => state.book.totalPages;\n\nexport const selectOwnBooks = (state) => state.book.myBooks;\n\nexport const selectInfoCurrentBook = (state) => state.book.allInfoBook;\n\nexport const selectReadBook = (state) => state.book.readBook;\n"],"names":["Dashboard","_ref","children","_jsx","DashboardBlock","styled","_templateObject","_taggedTemplateLiteral","color","FilterTitle","_templateObject2","Modal","PortalModal","active","setActive","useEffect","closeModal","e","key","handleBodyScroll","disableScroll","document","body","classList","add","remove","addEventListener","removeEventListener","ReactDOM","className","onClick","stopPropagation","getElementById","GeneralBlock","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlock","MainBlockTitle","selectBookData","state","book","data","selectTotalPage","totalPages","selectOwnBooks","myBooks","selectInfoCurrentBook","allInfoBook","selectReadBook","readBook"],"sourceRoot":""}