{"version":3,"file":"static/js/351.c224925c.chunk.js","mappings":"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","sources":["components/LibraryDashoard/LibraryDashoard.styled.js","components/Reading/Reading.styled.js","components/ReadingDashboard/ReadingDashboard.styled.js","img/ico-sprite.svg","components/DashboardProgress/DashboardProgress.styled.js","components/DashboardProgress/DashboardProgress.jsx","components/ReadingDashboard/ReadingDashboard.jsx","components/Reading/Reading.jsx","pages/ReadingPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const MainBlockLibraryDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n`\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\n// export const FilterTitle = styled.h3`\n// font-size: 14px;\n// font-weight: 500;\n//   margin-bottom: 8px;\n//   margin-left: 14px;\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -5px; \n  padding:  5px 10px 10px;\n`;\n\n//////////////////////////////////////////////\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 259px;\n  border-radius: 12px;\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n`\nexport const StartWorkoutTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n\n  margin-bottom: 20px;\n`\n/////   \n\nexport const Arguments = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`\nexport const CardRecomended = styled.li`\n  width: 71px;\n  height: 141px;  \n`\n\nexport const CardImg = styled.img`\n  width: 71px;\n  height: 107px;\n  border-radius: 8px;  \n\n  margin-bottom: 8px;\n`\n\nexport const CardTitle = styled.h4`\n  font-size: 10px;\n  font-weight: 700;\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  margin-bottom: 2px;\n`\n\nexport const CardAutor = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n//////////////////////////////////////////////////////////////\n\n\nexport const LinkToHome = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${color.gryeLight}; \n\n  margin: auto 0;\n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\n\n\nexport const LinkTextToHome = styled.p`\n  position: relative; \n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\n\n","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const BasicInfBook = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 44px;\n`\n\nexport const BasicImg = styled.img`\n  width: 224px;\n  height: 340px;\n  border-radius: 8px;\n  margin-bottom: 25px;\n`\n\nexport const TitleBook = styled.h2`\n  font-size: 20px;\n  margin-bottom: 4px;\n\n`;\n\nexport const AuthorBook = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 25px;\n`;","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n\nexport const Forma = styled.div`\n  margin-bottom: 40px;\n`\n\n// export const StarPicture = styled.picture`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 100px;\n//   height: 100px;\n//   border-radius: 50%;\n//   background: ${color.blackWhite};\n//   margin: 0 auto;\n// `\n\n/////////////////////////////////////////////////////////\n\n\n// export const ProgressTitle = styled.h4`\n//   font-size: 20px;\n//   font-weight: 700;\n//   margin-bottom: 14px;\n// `\n\n// export const ProgressText = styled.p`\n//   color: ${color.gryeLight};\n//   margin-bottom: 60px;\n// `\n\nexport const DiaryTitle = styled.h4`\n  font-size: 20px;\n  font-weight: 700;\n`\n////////////////////////////////////////////////////////////////////////////////////\n\nexport const DiaryHeaderConteiner = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\nexport const DiarySvgConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n\n`\n\nexport const BtnInfReading = styled.button`\n  background: transparent;\n  \n` \n\nexport const BtnInfSvg = styled.svg`\n  /* background: transparent; */\n  /* color: red !important; */\n  /* background: yellow; */\n  fill: red ;\n  stroke: green ;\n` \nexport const Bt = styled.use`\n  /* color: red !important; */\n  /* background: yellow; */\n  /* fill: red ; */\n  /* stroke: green ; */\n` \n\n////////////////////////////////////////////////////////////////////////\nexport const DiaryInfConteiner = styled.ul`\n  width: 313px;\n  height: 373px;  \n  background: ${color.gryeBlack};\n  border-radius: 12px;\n  padding: 20px;\n\n  /* height: 523px; */\n  overflow: hidden;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nexport const DayHeaderConteiner = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 28px; \n`\n\nexport const SquareConteiner = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  height: 20px;  \n  background: ${color.whitePrimary};\n  border-radius: 4px;\n  margin-right: 10px;\n`\nexport const SquareInteriorConteiner = styled.div`\n  width: 12px;\n  height: 12px;  \n  background: ${color.blackBackground};\n  border-radius: 2px;\n\n`\n\n// export const LineConteiner = styled.div`\n//   position: absolute;\n//   top: 20px;\n//   width: 4px;\n//   height: 100%;\n//   background: ${color.green};\n//   border-radius: 4px;\n// `\n\n\n\n\n\n\n\n\n\n\n\nexport const DayHeaderData = styled.h5`\n  font-size: 16px;\n  font-weight: 700;\n  margin-right: 86px;\n`\nexport const DayTotalPages = styled.p`\n  color: ${color.gryeLight};\n`\n\nexport const ResultsBlock = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 27px;\n\n`\n\nexport const MinutesPercentBlock = styled.div`\n  margin-left: 30px;\n`\nexport const Percent = styled.p`\n  font-size: 20px;\n  line-height: 1;\n  margin-bottom: 8px;\n`\nexport const Text = styled.p`\n  font-size: 12px;\n  color: ${color.gryeLight};\n`\n\nexport const IconsBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 7px;\n`\n\nexport const DellBtn = styled.button`\n background: transparent;\n transition: color 0.3s ease; /* Добавляем плавный переход */\n\n&:hover {\n  fill: red;\n  stroke: red;\n  color: red; /* Цвет при наведении */\n}\n\n&:focus {\n  outline: none; /* Убираем стандартную обводку фокуса */\n  color: blue; /* Цвет при фокусе */\n}\n`\n\nexport const PageHour = styled.p`\n  max-width: 59px;\n  text-align: center;\n  font-size: 12px;\n  color: ${color.gryeLight};\n`\n\n","var _symbol, _symbol2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcoSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pie-chart\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3.2,\n    d: \"M22.933 18.667c.369 0 .554 0 .704.082a.708.708 0 0 1 .293.324c.067.157.05.324.016.659a10.672 10.672 0 0 1-12.694 9.397 10.66 10.66 0 0 1-8.381-8.381 10.666 10.666 0 0 1 9.397-12.694c.334-.034.502-.05.659.016.13.055.257.17.324.293.082.15.082.334.082.704V17.6c0 .373 0 .56.073.703a.665.665 0 0 0 .291.291c.143.073.329.073.703.073h8.533zM18.667 3.733c0-.369 0-.554.082-.704a.713.713 0 0 1 .324-.293c.157-.067.324-.05.659-.016a10.665 10.665 0 0 1 9.548 9.549c.033.334.05.502-.016.659a.704.704 0 0 1-.293.324c-.15.082-.334.082-.704.082h-8.533c-.373 0-.56 0-.703-.073a.665.665 0 0 1-.291-.291c-.073-.143-.073-.329-.073-.703V3.734z\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-hourglass\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 3.2,\n    d: \"m16 16-5.697-4.748c-.846-.705-1.27-1.058-1.574-1.49a3.978 3.978 0 0 1-.591-1.263c-.137-.511-.137-1.061-.137-2.163V2.667M16 16l5.697-4.748c.847-.705 1.27-1.058 1.574-1.49.27-.383.47-.811.592-1.263C24 7.988 24 7.438 24 6.336V2.667M16 16l-5.697 4.748c-.846.705-1.27 1.058-1.574 1.491-.27.383-.47.81-.591 1.263-.137.51-.137 1.061-.137 2.163v3.669M16 16l5.697 4.748c.847.705 1.27 1.058 1.574 1.491.27.383.47.81.592 1.263.137.51.137 1.061.137 2.163v3.669M5.333 2.667h21.333M5.333 29.333h21.333\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#686868\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.286,\n    d: \"M4 8h24\",\n    style: {\n      stroke: \"var(--color1, #686868)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#686868\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.286,\n    d: \"M25.333 8v18.667a2.668 2.668 0 0 1-2.667 2.667H9.333a2.668 2.668 0 0 1-2.667-2.667V8m4.001 0V5.334a2.666 2.666 0 0 1 2.667-2.667h5.333a2.668 2.668 0 0 1 2.667 2.667V8\",\n    style: {\n      stroke: \"var(--color1, #686868)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#686868\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2.286,\n    d: \"M13.333 14.667v8m5.334-8v8\",\n    style: {\n      stroke: \"var(--color1, #686868)\"\n    }\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-block\",\n    viewBox: \"0 0 76 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#30b94d\",\n    d: \"M76.241 1.28.721 12.059V32h75.52V1.28z\",\n    opacity: 0.2,\n    style: {\n      fill: \"var(--color2, #30b94d)\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#30b94d\",\n    d: \"M74.364.204 1.076 12.053a1.28 1.28 0 0 0-1.059 1.468l.204 1.264a1.28 1.28 0 0 0 1.468 1.059L74.977 3.995a1.28 1.28 0 0 0 1.059-1.468l-.204-1.264A1.28 1.28 0 0 0 74.364.204z\",\n    style: {\n      fill: \"var(--color2, #30b94d)\"\n    }\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcoSprite);\nexport default __webpack_public_path__ + \"static/media/ico-sprite.bb665e0854bf44759de511d651a864c1.svg\";\nexport { ForwardRef as ReactComponent };","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StarPicture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin: 0 auto;\n`\n\nexport const ProgressTitle = styled.h4`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 14px;\n`\n\nexport const ProgressText = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 60px;\n`\n\n\n","import { ProgressText, ProgressTitle, StarPicture } from './DashboardProgress.styled';\nimport star from '../../img/star/star.png';\nimport star2x from '../../img/star/srar@2x.png';\n\nexport default function DashboardProgress() {\n  return (\n    <div>\n      <ProgressTitle>Progress</ProgressTitle>\n      <ProgressText>Here you will see when and how much you read. To record, click on the red button above.</ProgressText>\n      <div>\n        <StarPicture>\n          <source srcSet={star2x} media=\"(min-resolution: 192dpi)\" />        \n          <img src={star} alt=\"stack books\" width={50} />\n        </StarPicture> \n      </div>\n    </div>\n  );\n}\n  ","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { ErrorMessageStyled, FormField, FormFieldConteiner, FormFieldLabel, FormFields} from '../LibraryDashoard/LibraryDashoard.styled';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle } from 'components/Dashboard/Dashboard.styled';\nimport {  BtnInfReading, BtnInfSvg, DayHeaderConteiner, DayHeaderData, DayTotalPages, DellBtn, DiaryHeaderConteiner, DiaryInfConteiner, DiarySvgConteiner, DiaryTitle, Forma, IconsBlock, MinutesPercentBlock, PageHour, Percent, ResultsBlock, SquareConteiner, SquareInteriorConteiner, Text } from './ReadingDashboard.styled';\nimport sprite from '../../img/ico-sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bookReadingInf, readingDell, readingStart, readingStop } from '../../redux/books/operations';\nimport { useEffect, useState } from 'react';\nimport DashboardProgress from 'components/DashboardProgress/DashboardProgress';\nimport { selectInfoCurrentBook, selectReadBook } from '../../redux/books/selector';\nimport Loader from 'components/Loader/Loader';\n\nconst initialValues = {\n  page: '',\n};\n\nconst schema = Yup.object({\n  page: Yup.string().required('Required').matches(/^[0-9]+$/, 'Must be only digits')\n  .transform((value, originalValue) => originalValue.replace(/\\s/g, '')),\n});\n\nexport default function ReadingDashboard(selectedBook) {\n  const dailyReadings = {};\n  const [read, setRead] = useState(false);\n  const dispatch = useDispatch();\n  const InfoAboutBook =useSelector(selectInfoCurrentBook);\n\n  const ReadBook =useSelector(selectReadBook);  \n    useEffect(() =>{\n      if(selectedBook.selectedBook) dispatch(bookReadingInf(selectedBook.selectedBook))\n    }, [ selectedBook.selectedBook, read, dispatch, ReadBook]);\n\n\n  \n  // console.log(InfoAboutBook)\n  // Переберите массив прогресса и распределите данные по датам\n  if(InfoAboutBook && InfoAboutBook.progress && InfoAboutBook.progress.length > 0 ){\n    InfoAboutBook?.progress.forEach(entry => {\n      const date = new Date(entry.finishReading).toLocaleDateString();\n  \n      if (!dailyReadings[date]) {\n        dailyReadings[date] = [];\n      }  \n      const startReadingTime = new Date(entry.startReading).getTime();\n      const finishReadingTime = new Date(entry.finishReading).getTime();\n      const readingDurationMinutes = (finishReadingTime - startReadingTime) / (1000 * 60);\n\n       dailyReadings[date].push({\n        id: entry._id,\n        startPage: entry.startPage,\n        finishPage: entry.finishPage,\n        totalPage: InfoAboutBook.totalPages,\n        readingDuration: Math.round(readingDurationMinutes),\n        totalRead: entry.finishPage-entry.startPage,\n        percent: parseFloat(((100 * (entry.finishPage - entry.startPage)) / InfoAboutBook.totalPages).toFixed(1)),\n      });\n    });\n  }\n// console.log(InfoAboutBook)\n\n// console.log(dailyReadings)\n\n  const handleSubmit = (e) => {   \n    // console.log(e)\n    const requestData = {\n      id: selectedBook.selectedBook,\n      page: e.page \n    }; \n\n    if (e.page) {\n      if(!read){\n        dispatch(readingStart(requestData))\n        setRead(true)\n      }\n      if(read){\n        dispatch(readingStop(requestData))\n        setRead(false)\n      }\n    };\n  }\n\n  const handleDellTrash = (e) => {   \n    const res = {\n      bookId: InfoAboutBook._id,\n      readingId: e,\n    }\n    // console.log(e)\n    dispatch(readingDell(res))\n  }\n  return (  \n    <Dashboard> \n      <Forma>\n        <FilterTitle>Start page:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({  errors,touched }) => (\n            <Form>\n              <FormFields>  \n                 <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"page\">Pages number:</FormFieldLabel>\n                  <FormField id=\"page\" name=\"page\" type=\"page\" placeholder=\"0\" paddindleft=\"111px\" error={errors.page && touched.page ? \"true\" : \"false\" } />  \n                    {/* {console.log(errors)}            */}\n                  <ErrorMessageStyled name=\"page\" component='div' />   \n\n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label={read ? \"To stop\" : \"To start\"} onClick={handleSubmit} width=\"114px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Forma>\n      <div>\n      { !read && InfoAboutBook?.progress?.length === 0 && <DashboardProgress />}\n\n      { InfoAboutBook?.progress?.length > 0 &&  <div>\n          <DiaryHeaderConteiner>\n            <DiaryTitle>Diary</DiaryTitle>\n          \n            <DiarySvgConteiner>\n              <BtnInfReading >\n                <BtnInfSvg width={20} height={20}  >\n                  <use href={`${sprite}#icon-hourglass`} />\n                </BtnInfSvg> \n              </BtnInfReading>\n              <BtnInfReading>\n                <svg width={20} height={20}>\n                  <use href={`${sprite}#icon-pie-chart`} />\n                </svg>  \n              </BtnInfReading>\n            </DiarySvgConteiner>\n          </DiaryHeaderConteiner>\n\n\n\n\n          \n           <DiaryInfConteiner>\n            {Object.entries(dailyReadings).map(([date, dailyReadingArray]) => {\n              // Проверка, что date не равно 'Invalid Date'\n\n              if (date !== 'Invalid Date') {\n                // Вычисляем общее количество прочитанных страниц за день\n                const totalReadForDay = dailyReadingArray.reduce((total, dailyReading) => total + dailyReading.totalRead, 0);\n  \n                return (\n                  <li key={date}>\n                    <DayHeaderConteiner>\n                      <SquareConteiner>\n                        <SquareInteriorConteiner />\n                        {/* <LineConteiner /> */}\n                      </SquareConteiner>\n                      <DayHeaderData>{date}</DayHeaderData>\n                      <DayTotalPages>{totalReadForDay} pages</DayTotalPages>\n                    </DayHeaderConteiner>\n                    <ul>\n                      {dailyReadingArray.map(dailyReading => (\n                        <ResultsBlock key={dailyReading.id}>\n                          <MinutesPercentBlock>\n                            <Percent>{dailyReading.percent}%</Percent>\n                            <Text>{dailyReading.readingDuration} minutes</Text>\n                          </MinutesPercentBlock>\n                      \n                          <div>\n                            <IconsBlock>\n                              <svg width={59} height={25}>\n                                <use href={`${sprite}#icon-block`} />\n                              </svg> \n                              <DellBtn onClick={() =>handleDellTrash(dailyReading.id)}>\n                                <svg width={14} height={14}>\n                                  <use href={`${sprite}#icon-trash`} />\n                                </svg> \n                              </DellBtn>\n                            </IconsBlock>\n                            <PageHour>{dailyReading.totalRead} pages per hour</PageHour>\n                          </div>\n                        </ResultsBlock>\n                      ))}\n                    </ul>\n                  </li>\n                );\n              } else {\n                // Вернуть null или что-то другое, если 'Invalid Date'\n                return <Loader  key=\"1\"/>;\n              }\n            })}\n          </DiaryInfConteiner>\n\n\n\n\n        </div>\n}\n      </div>\n    </Dashboard> \n  );\n}\n  ","import UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\nimport UnivesalMainConteainer from \"components/UniversalMainContainer/UniversalMainContainer\";\nimport { MainBlockTitle } from \"components/UniversalMainContainer/UniversalMainContainer.styled\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { selectOwnBooks } from \"../../redux/books/selector\";\nimport { AuthorBook, BasicImg, BasicInfBook, TitleBook } from \"./Reading.styled\";\nimport sprite from '../../img/sprite.svg';\nimport ReadingDashboard from \"components/ReadingDashboard/ReadingDashboard\";\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function Reading() {\n  const { bookId } = useParams();\n  const books = useSelector(selectOwnBooks);\n\n  const selectedBook = books.find(book => book._id === bookId);\n\n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n  const imageUrl = selectedBook.imageUrl || getImageUrl();\n  return (\n    <UnivesalGeneralBlock >\n      \n      <ReadingDashboard  selectedBook={selectedBook._id}/>     \n\n\n      <UnivesalMainConteainer>\n        <MainBlockTitle>My reading</MainBlockTitle>\n        <BasicInfBook>\n          <BasicImg src={imageUrl} alt='title'/>\n          <TitleBook>{selectedBook.title}</TitleBook>\n          <AuthorBook>{selectedBook.author}</AuthorBook>\n\n          <svg width={50} height={50}>\n            <use href={`${sprite}#icon-block-pause`} />\n          </svg> \n\n        </BasicInfBook>\n      </UnivesalMainConteainer>\n\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Reading from \"components/Reading/Reading\";\n\nexport default function ReadingPage() {\n  return (\n    <Reading />\n  );\n}\n  "],"names":["MainBlockLibraryDashboard","styled","_templateObject","_taggedTemplateLiteral","Filters","_templateObject2","FormFields","_templateObject3","FormFieldConteiner","_templateObject4","FormFieldLabel","_templateObject5","color","FormField","Field","_templateObject6","props","paddindleft","error","ErrorMessageStyled","ErrorMessage","_templateObject7","StartWorkoutBlock","_templateObject8","StartWorkoutTitle","_templateObject9","Arguments","_templateObject10","CardRecomended","_templateObject11","CardImg","_templateObject12","CardTitle","_templateObject13","CardAutor","_templateObject14","LinkToHome","NavLink","_templateObject15","LinkTextToHome","_templateObject16","BasicInfBook","BasicImg","TitleBook","AuthorBook","Forma","DiaryTitle","DiaryHeaderConteiner","DiarySvgConteiner","BtnInfReading","BtnInfSvg","DiaryInfConteiner","DayHeaderConteiner","SquareConteiner","SquareInteriorConteiner","DayHeaderData","DayTotalPages","ResultsBlock","MinutesPercentBlock","Percent","Text","_templateObject17","IconsBlock","_templateObject18","DellBtn","_templateObject19","PageHour","_templateObject20","StarPicture","ProgressTitle","ProgressText","DashboardProgress","_jsxs","children","_jsx","srcSet","star2x","media","src","alt","width","initialValues","page","schema","Yup","required","matches","transform","value","originalValue","replace","ReadingDashboard","selectedBook","_InfoAboutBook$progre","_InfoAboutBook$progre2","dailyReadings","_useState","useState","_useState2","_slicedToArray","read","setRead","dispatch","useDispatch","InfoAboutBook","useSelector","selectInfoCurrentBook","ReadBook","selectReadBook","useEffect","bookReadingInf","progress","length","forEach","entry","date","Date","finishReading","toLocaleDateString","startReadingTime","startReading","getTime","readingDurationMinutes","push","id","_id","startPage","finishPage","totalPage","totalPages","readingDuration","Math","round","totalRead","percent","parseFloat","toFixed","handleSubmit","e","requestData","readingStart","readingStop","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","_ref","errors","touched","Form","htmlFor","name","type","placeholder","component","CustomButton","label","onClick","height","href","concat","sprite","Object","entries","map","_ref2","_ref3","dailyReadingArray","totalReadForDay","reduce","total","dailyReading","res","bookId","readingId","readingDell","handleDellTrash","Loader","Reading","useParams","selectOwnBooks","find","book","imageUrl","Image","notFoundImg","window","devicePixelRatio","notFoundImg2x","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlockTitle","title","author","ReadingPage"],"sourceRoot":""}