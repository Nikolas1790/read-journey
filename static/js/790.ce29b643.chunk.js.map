{"version":3,"file":"static/js/790.ce29b643.chunk.js","mappings":"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","sources":["components/ImgAuthorization/ImgAuthorization.styled.js","components/ImgAuthorization/ImgAuthorization.jsx","components/LogoTitleBlock/LogoTitleBlock.styled.js","components/LogoTitleBlock/LogoTitleBlock.jsx","components/RegisterAndLogin/RegisterAndLogin.styled.js","components/SubmitBlockAutorization/SubmitBlockAutorization.styled.js","components/SubmitBlockAutorization/SubmitBlockLogin.jsx","components/RegisterAndLogin/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const Img = styled.img`\n  display: block;\n  border-radius: 30px;\n  \n  @media (min-width: 768px) {\n    display: none;\n  }\n\n  @media (min-width: 1440px) {\n    display: block;\n    max-width: 100%;\n    height: 736px;     \n  }\n`\n","import desctopImg from '../../img/fon/desctop-block.jpg';\nimport desctopImg2x from '../../img/fon/desctop-block@2x.jpg';\nimport mobileImg from '../../img/fon/mob-block.jpg';\nimport mobileImg2x from '../../img/fon/mob-block@2x.jpg';\nimport { Img } from './ImgAuthorization.styled';\n\nexport default function ImgAutorization() {\n  return (    \n      <picture>\n        <source srcSet={`${mobileImg} 1x, ${mobileImg2x} 2x`} media=\"(max-width: 767px)\" />\n        <source srcSet={`${desctopImg} 1x, ${desctopImg2x} 2x`} media=\"(min-width: 1440px)\" />\n        <Img src={desctopImg} alt=\"register img\" />\n      </picture>  \n  );\n}\n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const LogoTitleConteiner = styled.div`\n  margin-bottom: 20px;\n  @media (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n` \nexport const LogoConteiner = styled.div`\n  margin-bottom: 40px;\n  @media (min-width: 768px) {\n    margin-bottom: 108px;\n  }\n`\n\nexport const Title = styled.h2`\n  /* width: 444px; */\n  font-size: 32px;\n  font-weight: 700;  \n  line-height: 1;\n\n  @media (min-width: 768px) {\n    width: 444px;\n    font-size: 64px;\n    /* font-weight: 700;   */\n    line-height: 0.94;\n  }\n`;\n\nexport const TitleSpan = styled.span`\n  color: ${color.whiteTranslucent};\n`;","import Logo from \"components/Logo/Logo\";\nimport { LogoConteiner, LogoTitleConteiner, Title, TitleSpan } from \"./LogoTitleBlock.styled\";\n\nexport default function LogoTitleBlock() {\n  return (\n    <LogoTitleConteiner>\n      <LogoConteiner>\n        <Logo />\n      </LogoConteiner>\n      <Title>Expand your mind, reading <TitleSpan>a book</TitleSpan></Title>\n    </LogoTitleConteiner>\n  );\n};\n","import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik';\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center ;\n  flex-direction: column;\n  padding: 20px;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n    flex-direction: row;\n    justify-content: center ;\n    padding: 32px;\n  }\n`\nexport const FormBlock = styled.div`\n  width:335px;\n  height: 411px; \n  background: ${color.blackLight};\n  border-radius: 30px;\n  padding: 20px 20px 40px 20px;\n\n  @media (min-width: 768px) {\n    width:704px;\n    height: 960px; \n    padding: 40px 64px;\n  }\n  @media (min-width: 1440px) {\n    width:600px;\n    height: 736px; \n  }\n`\n\n///////////////////////////////////////////////////////////\nexport const FormConteiner = styled.div`\n  display:flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;  \n  height: 210px;\n\n  @media (min-width: 768px) {\n    height: 308px;\n  }\n\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n  width: 295x;\n  @media (min-width: 768px) {\n    width: 472px;\n  }\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 13px;\n  left: 14px;\n  color: ${color.gryeLight};\n  @media (min-width: 768px) {\n    top: 16px;\n  }\n`;\n\nexport const FormField = styled(Field)`\n  /* width: 100%; */\n  width: 295px;\n\n  height: 44px;\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n  border-radius: 12px;\n  padding: 14px;\n  padding-left: ${(props) => props.paddingleft || '65px'};\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n\n  @media (min-width: 768px) {\n    width: 472px;\n    height: 50px;\n    padding: 16px 14px 16px 65px;\n  }\n\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 13px;\n  right: 13px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n\n  @media (min-width: 768px) {\n    top: 17px;\n    right: 17px;\n  }\n`;\n\n//////////////////////////////////////////////////////////////////////\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  font-size: 10px;\n  color: red;\n  padding: 4px 0px 0px 14px;\n`;\nexport const SecureMessage = styled.p`\n  font-size: 10px;\n  color: ${color.green};\n  padding: 4px 0px 0px 14px;\n`;","import color from 'common/GlobalColers'\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components'\n\nexport const SubmitBlock = styled.div`\n  /* margin-top: auto; */\n`;\n\nexport const FormBtn = styled.button`\n  border-radius: 30px;\n  color: ${color.blackLight};\n  background: ${color.darkGgeen};\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1;\n  margin-right: 14px;\n  /* padding: 12px 29px; */\n  padding:${(props) => (props.log === 'login' ? \"12px 45px\" : \"12px 29px\")};\n  transition: color 0.3s linear, background 0.3s linear; \n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    background: ${color.blackLight};\n    box-shadow: 0 0 0 2px ${color.whiteLightTranslucent};\n  }\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    margin-right: 20px;\n    padding: 16px 54px;\n  }\n`;\n\nexport const LinkTo = styled(NavLink)`\n  position: relative;  \n  font-weight: 500;\n  font-size: 12px;\n  letter-spacing: -0.2px;\n  color: ${color.gryeLight}; \n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -3px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }  \n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n\n`;","import { FormBtn, LinkTo, SubmitBlock } from \"./SubmitBlockAutorization.styled\";\n\nexport default function SubmitBlockLogin() {\n  return (    \n    <SubmitBlock>\n      <FormBtn type=\"submit\" log='login'>Log In</FormBtn>\n      <LinkTo to=\"/register\" >\n        Don't have an account?  \n      </LinkTo>\n    </SubmitBlock>\n  );\n}\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport sprite from '../../img/sprite.svg';\nimport { Container, ErrorMessageStyled, EyeSvg, FormBlock, FormConteiner, FormField, FormFieldConteiner, FormFieldLabel, FormFields, SecureMessage } from \"./RegisterAndLogin.styled\";\nimport ImgAutorization from 'components/ImgAuthorization/ImgAuthorization';\nimport LogoTitleBlock from 'components/LogoTitleBlock/LogoTitleBlock';\nimport SubmitBlockLogin from 'components/SubmitBlockAutorization/SubmitBlockLogin';\nimport { logIn } from '../../redux/auth/operationsAuth';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  email: Yup.string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Login() {  \n  const [showPassword, setShowPassword] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const handleSubmit = async (values) => {\n    try {\n      await dispatch(logIn(values)).unwrap();\n      navigate('/recommended');\n    } catch (error) {\n      toast.error(\"Please check the Mail and Password.\");\n    }\n  }\n  return (\n    <Container>\n      <FormBlock>        \n        <LogoTitleBlock />\n\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ errors, touched }) => (\n            <Form>\n              <FormFields>  \n                <FormConteiner>           \n                  <FormFieldConteiner>\n                        <FormFieldLabel htmlFor=\"email\">Mail:</FormFieldLabel>\n                        <FormField \n                          id=\"email\"\n                          name=\"email\" \n                          type=\"email\" \n                          placeholder=\"nik@google.com\" \n                          error={errors.email && touched.email ? \"true\" : \"false\" } \n                          paddingleft=\"53px\"\n                          style={{\n                            borderColor: touched.email && errors.email ? \"red\" : \n                                         touched.email && !errors.email ? \"green\" : \"defaultColor\",\n                          }}\n                        />\n                      {touched.email && (\n                        errors.email ? (\n                          <EyeSvg width={20} height={20}>\n                            <use href={`${sprite}#icon-pajamas_error`} />\n                          </EyeSvg>\n                        ) : (\n                          <EyeSvg width={20} height={20}>\n                            <use href={`${sprite}#icon-check-ok`} />\n                          </EyeSvg>\n                        )\n                      )}\n                        {touched.email && !errors.email && <SecureMessage>Email is secure</SecureMessage>}\n                        <ErrorMessageStyled name=\"email\" component='div' />\n                  </FormFieldConteiner>\n          \n                  <FormFieldConteiner>\n                    <FormFieldLabel htmlFor=\"password\">Password:</FormFieldLabel>\n                    <FormField\n                     id=\"password\" \n                     name=\"password\" \n                     type={showPassword ? \"text\" : \"password\"} \n                     placeholder=\"********\" error={errors.password && touched.password ? \"true\" : \"false\"} \n                     paddingleft=\"86px\"\n                     style={{\n                      borderColor: touched.password && errors.password ? \"red\" : \n                                   touched.password && !errors.password ? \"green\" : \"defaultColor\",\n                    }}\n                   />\n          \n                    {errors.password && touched.password ? (\n                      <EyeSvg width={20} height={20}>\n                        <use href={`${sprite}#icon-pajamas_error`} />\n                      </EyeSvg>\n                    ) : !errors.password && touched.password ? (\n                      <EyeSvg width={20} height={20}>\n                        <use href={`${sprite}#icon-check-ok`} />\n                      </EyeSvg>\n                    ) : showPassword ? (\n                      <EyeSvg width={20} height={20} onMouseDown={(e) => {\n                        e.preventDefault(); // Предотвратить смену фокуса\n                        togglePasswordVisibility();\n                      }}>\n                        <use href={`${sprite}#icon-eye`} />\n                      </EyeSvg>\n                    ) : (\n                      <EyeSvg width={20} height={20} onMouseDown={(e) => {\n                        e.preventDefault(); // Предотвратить смену фокуса\n                        togglePasswordVisibility();\n                      }}>\n                        <use href={`${sprite}#icon-eye-off`} />\n                      </EyeSvg>\n                    )}\n\n                     {touched.password && !errors.password && <SecureMessage>Password is secure</SecureMessage>}\n                    <ErrorMessageStyled name=\"password\" component='div' />\n\n                  </FormFieldConteiner>\n                </FormConteiner>     \n\n                <SubmitBlockLogin />                    \n              </FormFields>                    \n            </Form>\n          )}\n        </Formik>\n      </FormBlock>\n      <ImgAutorization />\n    </Container>\n  );\n}\n","import Login from \"components/RegisterAndLogin/Login\";\n\nexport default function LoginPage() {\n  return (\n    <Login />\n  );\n}\n  "],"names":["Img","styled","_templateObject","_taggedTemplateLiteral","ImgAutorization","_jsxs","children","_jsx","srcSet","concat","mobileImg","mobileImg2x","media","desctopImg","desctopImg2x","src","alt","LogoTitleConteiner","LogoConteiner","_templateObject2","Title","_templateObject3","TitleSpan","_templateObject4","color","LogoTitleBlock","Logo","Container","FormBlock","FormConteiner","FormFields","FormFieldConteiner","_templateObject5","FormFieldLabel","_templateObject6","FormField","Field","_templateObject7","props","error","paddingleft","EyeSvg","_templateObject8","ErrorMessageStyled","ErrorMessage","_templateObject9","SecureMessage","_templateObject10","SubmitBlock","FormBtn","log","LinkTo","NavLink","SubmitBlockLogin","type","to","initialValues","email","password","schema","Yup","matches","required","min","Login","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","logIn","unwrap","t0","toast","stop","_x","apply","arguments","Formik","validationSchema","onSubmit","_ref2","errors","touched","Form","htmlFor","id","name","placeholder","style","borderColor","width","height","href","sprite","component","onMouseDown","e","preventDefault","LoginPage"],"sourceRoot":""}