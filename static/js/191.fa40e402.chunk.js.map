{"version":3,"file":"static/js/191.fa40e402.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","components/Recomended/Recomended.styled.js","components/RecomendedDashboard/RecomendedDashboard.styled.js","components/RecomendedDashboard/RecomendedDashboard.jsx","redux/books/selector.js","components/PortalModal/PortalModal.styled.js","components/PortalModal/PortalModal.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/Recomended/Recomended.jsx","pages/RecomendedPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const DashboardBlock = styled.div`\n  width: 353px;\n  height: 651px;\n  border-radius: 30px;\n\n  background: ${color.blackLight};\n  padding: 40px 20px 20px 20px;\n;`","import { DashboardBlock} from './Dashboard.styled';\n\nexport default function Dashboard({ children }) {\n  return (\n    <DashboardBlock>\n      {children}\n    </DashboardBlock>\n  );\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const RecomendedBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  padding:  16px 0;\n`\n\n//////////////////////////////////////////\n\n\nexport const RecommendedBooksBlock = styled.div`\n  width: 847px;\n  height: 651px;\n  border-radius: 30px;\n\n  background: ${color.blackLight};\n  padding: 40px 40px 28px 40px;\n`\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nexport const RecommendedTitle = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.14;\n`\nexport const PaginationBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n\n  background: transparent;\n  border-radius: 50%; \n  border: 1px solid ${color.whiteLightTranslucent};\n\n  &:last-child {\n    margin-right: 0; \n  }\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${(props) => (props.stoke === \"true\" ? color.whiteLightTranslucent : color.whitePrimary)};\n`\n\n///////////////////////////////////////////////////////////////////////////\n\nexport const BooksTen = styled.ul`\n  /* width: 137px;\n  height: 248px; */\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n`\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n  /* margin-righ+t: 8px; */\n\n  background: transparent;\n  /* border-radius: 50%;  */\n  /* border: 1px solid ${color.whiteLightTranslucent}; */\n\n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n\n  border-radius: 8px; \n  margin-bottom: 8px;\n`\n\nexport const BookTitle = styled.h3`\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n     /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n`","import color from 'common/GlobalColers'\nimport { Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const FilterTitle = styled.h3`\nfont-size: 14px;\nfont-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n`;\n\n\n\n\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 272px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport const StartWorkoutTitle = styled.p`\n  font-size: 20px;\nfont-weight: 700;\nline-height: 1;\n\nmargin-bottom: 40px;\n`\nexport const Arguments = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: ${(props) => props.maginbottom || 'auto'};\n`\nexport const SeriaNumber = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  font-size: 20px;\n  font-weight: 700;  \n  color: ${color.blackLight};\n  background: ${color.whitePrimary};\n  \n`\nexport const TextOne = styled.p`\n  width: 190px;  \n`\nexport const TextTwo = styled.p`\n  width: 200px;  \n`\n\nexport const TextSpan = styled.span`\n color: ${color.gryeLight};\n  \n`\n\nexport const LinkToLibrary = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;  color: ${color.gryeLight}; \n  \n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\nexport const LinkTextToLibrary = styled.p`\n  position: relative; \n\n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -3px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\nexport const QuoteBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 313px;\n  height: 83px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 14px 20PX;\n`\n// export const BlackBlock = styled.div`\n//   width: 40px;\n//   height: 40px;\n//   background: ${color.black};\n// `\n\nexport const Quote = styled.p`\n  width: 219px;\n  color: ${color.gryeLight};\n \n`\n\nexport const QuoteSpan = styled.span`  \n  color: ${color.whitePrimary};\n \n`\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, FilterTitle, Filters, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTextToLibrary, LinkToLibrary, Quote, QuoteBlock, QuoteSpan, SeriaNumber, StartWorkoutBlock, StartWorkoutTitle, TextOne, TextSpan, TextTwo } from './RecomendedDashboard.styled';\n\nimport imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\n\nconst initialValues = {\n  title: '',\n  author: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string(),\n  author: Yup.string(),\n});\n\nexport default function RecomendedDashboard() {\n  const handleSubmit = () => {    \n    console.log(\"submit\")\n  }\n  return (\n    <>\n      \n      <Filters>\n        <FilterTitle>Filters:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ touched }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"Enter text\" />                \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Enter text\" paddindleft=\"95px\" />                \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"To apply\" onClick={handleSubmit} width=\"122px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Start your workout</StartWorkoutTitle>\n        <Arguments maginbottom=\"20px\" >\n          <SeriaNumber>1</SeriaNumber>\n          <TextOne>Create a personal library: <TextSpan>add the books you intend to read to it.</TextSpan></TextOne>\n        </Arguments>\n        <Arguments maginbottom=\"26px\">\n          <SeriaNumber>2</SeriaNumber>\n          <TextTwo>Create your first workout: <TextSpan>define a goal, choose a period, start training.</TextSpan></TextTwo>\n        </Arguments>\n\n        <LinkToLibrary to=\"/library\">\n          <LinkTextToLibrary>My library </LinkTextToLibrary>\n            \n          <svg width={24} height={24}>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </svg>          \n        </LinkToLibrary>\n      </StartWorkoutBlock>\n\n      <QuoteBlock>\n        \n      <picture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={40} />\n      </picture>  \n        \n        <Quote>\"Books are <QuoteSpan>windows</QuoteSpan> to the world, and reading is a journey into the unknown.\"</Quote>\n      </QuoteBlock>\n\n    </>\n  );\n}\n  ","export const selectBookData = (state) => state.book.data;\n\nexport const selectTotalPage = (state) => state.book.totalPages;\n\n// export const selectCurrentPage = (state) => state.book.currentPage;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Modal = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;    \n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${color.dimmedBackground};    \n    overflow: auto;\n    z-index:5;\n\n    transform: scale(0);\n    &.active {\n        transform: scale(1);\n    }\n`;","import ReactDOM from 'react-dom';\nimport React, { useEffect } from 'react';\nimport { Modal } from './PortalModal.styled';\n\nexport default function PortalModal({ active, setActive, children }) {\n  useEffect(() => {\n    const closeModal = (e) => {\n      if (e.key === 'Escape') {\n        setActive(false);\n      }\n    };\n\n    const handleBodyScroll = (disableScroll) => {\n      if (disableScroll) {        \n        document.body.classList.add('no-scroll');\n      } else {        \n        document.body.classList.remove('no-scroll');\n      }\n    };\n\n    if (active) {        \n      document.addEventListener('keydown', closeModal);\n      handleBodyScroll(true);\n    } else {        \n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    };\n  }, [active, setActive]);\n\n  return ReactDOM.createPortal(\n    <Modal className={active ? 'active' : ''} onClick={() => setActive(false)}>\n      <div onClick={(e) => e.stopPropagation()}>{children}</div>\n    </Modal>,\n    document.getElementById('modal')\n  );\n};\n","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 500px;\n  height: 483px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 50px ;\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const CoverBook = styled.img`\n  width: 153px;\n  height: 233px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const TitleBook = styled.h2`\n  max-width: 400px;\n  font-size: 20px;\n  margin-bottom: 2px;\n\n     /* Ограничиваем текст одной строкой */\n     white-space: nowrap;\n     overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AuthorBook = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 32px;\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\n\nexport default function DetailedInformationBook({ closeModals, bookData }) {\n  const handleButtonClick = async () => {\n    console.log(bookData)\n    // try {\n    //   await dispatch(logOut()).unwrap();\n    //   navigate('/register');\n    // } catch (error) {\n    //   toast.error(\"Log out failed. Something went wrong.\");\n    // }\n  }; \n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <CoverBook src={bookData.imageUrl} alt=\"cover\" />\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label=\"Add to library\" onClick={handleButtonClick} width=\"162px\" height=\"46px\" />\n    </Conteiner>\n  );\n}\n  ","import { BookAutor, BookCard, BookImg, BookTitle, BooksTen, HeaderAndPaginationBlock, PaginationBtn,PaginationSvg,RecomendedBlock, RecommendedBooksBlock, RecommendedTitle} from \"./Recomended.styled\"\nimport sprite from '../../img/sprite.svg';\nimport RecomendedDashboard from \"components/RecomendedDashboard/RecomendedDashboard\";\nimport Dashboard from \"components/Dashboard/Dashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchBooks } from \"../../redux/books/operations\";\nimport { selectBookData, selectTotalPage } from \"../../redux/books/selector\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport DetailedInformationBook from \"components/DetailedInformationBook/DetailedInformationBook\";\n\nexport default function Recomended() {\n  const dispatch = useDispatch();\n  const results = useSelector(selectBookData)\n  const totalPages = useSelector(selectTotalPage);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false);\n \n  const [page, setPage] = useState(1);\n\n  useEffect(()=> {\n    dispatch(fetchBooks({ page, limit: 10  }))\n  }, [dispatch, page]);\n\n  const handlePageChange = (newPage) => { \n    if (newPage >= 1 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n\n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  return (\n    <RecomendedBlock>\n      <Dashboard>\n        <RecomendedDashboard/>\n      </Dashboard>\n\n      <RecommendedBooksBlock>\n        <HeaderAndPaginationBlock>\n          <RecommendedTitle>Recommended</RecommendedTitle>\n          <div>\n            <PaginationBtn onClick={() => handlePageChange(page - 1)} >\n              <PaginationSvg stoke={page === 1 ? \"true\" : ''}>\n                <use href={`${sprite}#icon-chevron-left`} />\n              </PaginationSvg>\n            </PaginationBtn>\n            <PaginationBtn onClick={() => handlePageChange(page + 1)}>\n              <PaginationSvg stoke={page === totalPages ? \"true\" : ''} >\n                <use href={`${sprite}#icon-chevron-right`} />\n              </PaginationSvg>\n            </PaginationBtn>\n          </div>\n        </HeaderAndPaginationBlock>\n\n\n\n        <BooksTen>\n          {results?.map((book) => (\n            <BookCard key={book._id}>\n              <BookImg src={book.imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n              <BookTitle>{book.title}</BookTitle>\n              <BookAutor>{book.author}</BookAutor>\n            </BookCard>\n          ))}\n        </BooksTen>   \n\n      </RecommendedBooksBlock>\n\n\n\n\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} />\n      </PortalModal>\n\n    </RecomendedBlock>\n  );\n}\n  ","import Recomended from \"components/Recomended/Recomended\";\n\nexport default function RecomendedPage() {\n  return (\n    <Recomended />\n  );\n}\n  "],"names":["DashboardBlock","styled","_templateObject","_taggedTemplateLiteral","color","Dashboard","_ref","children","_jsx","RecomendedBlock","RecommendedBooksBlock","_templateObject2","HeaderAndPaginationBlock","_templateObject3","RecommendedTitle","_templateObject4","PaginationBtn","_templateObject5","PaginationSvg","_templateObject6","props","stoke","BooksTen","_templateObject7","BookCard","_templateObject8","BookImg","_templateObject9","BookTitle","_templateObject10","BookAutor","_templateObject11","Filters","FilterTitle","FormFields","FormFieldConteiner","FormFieldLabel","FormField","Field","paddindleft","StartWorkoutBlock","StartWorkoutTitle","Arguments","maginbottom","SeriaNumber","TextOne","TextTwo","_templateObject12","TextSpan","_templateObject13","LinkToLibrary","NavLink","_templateObject14","LinkTextToLibrary","_templateObject15","QuoteBlock","_templateObject16","Quote","_templateObject17","QuoteSpan","_templateObject18","initialValues","title","author","schema","Yup","RecomendedDashboard","handleSubmit","console","log","_jsxs","_Fragment","Formik","validationSchema","onSubmit","touched","Form","htmlFor","id","name","type","placeholder","CustomButton","label","onClick","width","to","height","href","concat","sprite","srcSet","imgBooksDesc2x","media","src","alt","selectBookData","state","book","data","selectTotalPage","totalPages","Modal","PortalModal","active","setActive","useEffect","closeModal","e","key","handleBodyScroll","disableScroll","document","body","classList","add","remove","addEventListener","removeEventListener","ReactDOM","className","stopPropagation","getElementById","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","handleButtonClick","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","stop","apply","arguments","imageUrl","Recomended","dispatch","useDispatch","results","useSelector","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","page","setPage","fetchBooks","limit","handlePageChange","newPage","map","openLoginModal","_id","RecomendedPage"],"sourceRoot":""}