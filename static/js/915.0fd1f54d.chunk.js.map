{"version":3,"file":"static/js/915.0fd1f54d.chunk.js","mappings":"sNAGaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6HAUpBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8FAQpBG,EAAgBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uFAK1BK,EAAkBP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6BAC1B,SAAAO,GAAO,MAAkB,SAAlBA,EAAJC,KAA+B,OAAS,OAAO,IAGpDC,EAAYX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2rBAcrBW,EAAYb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,6CAEtBa,EAAAA,EAAAA,WAGEC,EAAUhB,EAAAA,GAAAA,OAAaiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,sC,mBC7CrB,SAASgB,EAAQT,GAA6C,IAA3CU,EAAIV,EAAJU,KAAMC,EAAcX,EAAdW,eAAcC,EAAAZ,EAAEa,YAAAA,OAAW,IAAAD,GAAMA,EAEvE,OACEE,EAAAA,EAAAA,MAACxB,EAAQ,CAAAyB,SAAA,EACPC,EAAAA,EAAAA,KAACtB,EAAO,CAACuB,IAAKP,EAAKQ,SAAUC,IAAI,aAAcC,QAAS,kBAAMT,EAAeD,EAAK,KAClFI,EAAAA,EAAAA,MAAClB,EAAa,CAAAmB,SAAA,EACZD,EAAAA,EAAAA,MAAChB,EAAe,CAACG,KAAsB,eAAhBY,EAA+B,OAAS,QAASE,SAAA,EACtEC,EAAAA,EAAAA,KAACd,EAAS,CAAAa,SAAEL,EAAKW,SACjBL,EAAAA,EAAAA,KAACZ,EAAS,CAAAW,SAAEL,EAAKY,YAGF,eAAhBT,IACCG,EAAAA,EAAAA,KAACT,EAAO,CAAAQ,UACNC,EAAAA,EAAAA,KAAA,OAAKO,MAAO,GAAIC,OAAQ,GAAGT,UACzBC,EAAAA,EAAAA,KAAA,OAAKS,KAAI,GAAAC,OAAKC,EAAAA,EAAM,yBAQlC,C,gFCvBaC,E,QAAiBrC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4HAKxBa,EAAAA,EAAAA,Y,SCND,SAASuB,EAAS7B,GAAgB,IAAbe,EAAQf,EAARe,SAClC,OACEC,EAAAA,EAAAA,KAACY,EAAc,CAAAb,SACZA,GAGP,C,0ICLae,EAAYvC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mOAQnBa,EAAAA,EAAAA,YAKHyB,EAAgBxC,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gLAO9Ba,EAAAA,EAAAA,cAIC0B,EAAYzC,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4FAOtBwC,EAAY1C,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yVAWrByC,EAAa3C,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+CACvBa,EAAAA,EAAAA,WAIE6B,EAAY5C,EAAAA,GAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,sD,uCC5ClB,SAAS2C,EAAuBpC,GAAuC,IAApCqC,EAAWrC,EAAXqC,YAAaC,EAAQtC,EAARsC,SAAUC,EAAQvC,EAARuC,SACjEC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxBC,QAAQC,IAAIb,EAASc,KACrBZ,GAASa,EAAAA,EAAAA,IAAYf,EAASc,MAM9B,wBAAAL,EAAAO,OAAA,GAAAR,EAAA,KACD,kBATsB,OAAAH,EAAAY,MAAA,KAAAC,UAAA,KAUvB,OACE1C,EAAAA,EAAAA,MAACgB,EAAS,CAAAf,SAAA,EACRC,EAAAA,EAAAA,KAACe,EAAa,CAACX,QAASiB,EAAYtB,UAClCC,EAAAA,EAAAA,KAAA,OAAKO,MAAO,GAAIC,OAAQ,GAAGT,UACzBC,EAAAA,EAAAA,KAAA,OAAKS,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAIxBX,EAAAA,EAAAA,KAACgB,EAAS,CAACf,IAAKqB,EAASpB,SAAUC,IAAI,WACvCH,EAAAA,EAAAA,KAACiB,EAAS,CAAAlB,SAAEuB,EAASjB,SACrBL,EAAAA,EAAAA,KAACkB,EAAU,CAAAnB,SAAEuB,EAAShB,UACtBR,EAAAA,EAAAA,MAACqB,EAAS,CAAApB,SAAA,CAAEuB,EAASmB,WAAW,aAChCzC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAY,CAACC,MAAOpB,EAAUnB,QAASsB,EAAmBnB,MAAM,QAAQC,OAAO,WAGtF,C,oGC/BaoC,E,QAAQrE,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qUASPa,EAAAA,EAAAA,kB,SCRT,SAASuD,EAAW7D,GAAmC,IAAhC8D,EAAM9D,EAAN8D,OAAQC,EAAS/D,EAAT+D,UAAWhD,EAAQf,EAARe,SA8BvD,OA7BAiD,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,SAACC,GACJ,WAAVA,EAAEC,KACJJ,GAAU,EAEd,EAEMK,EAAmB,SAACC,GACpBA,EACFC,SAASC,KAAKC,UAAUC,IAAI,aAE5BH,SAASC,KAAKC,UAAUE,OAAO,YAEnC,EAUA,OARIZ,GACFQ,SAASK,iBAAiB,UAAWV,GACrCG,GAAiB,KAEjBE,SAASM,oBAAoB,UAAWX,GACxCG,GAAiB,IAGZ,WACLE,SAASM,oBAAoB,UAAWX,GACxCG,GAAiB,EACnB,CACF,GAAG,CAACN,EAAQC,IAELc,EAAAA,cACL7D,EAAAA,EAAAA,KAAC4C,EAAK,CAACkB,UAAWhB,EAAS,SAAW,GAAI1C,QAAS,kBAAM2C,GAAU,EAAM,EAAChD,UACxEC,EAAAA,EAAAA,KAAA,OAAKI,QAAS,SAAC8C,GAAC,OAAKA,EAAEa,iBAAiB,EAAChE,SAAEA,MAE7CuD,SAASU,eAAe,SAE5B,C,kKCrCaC,EAAkB1F,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qHAY5ByF,EAAwB3F,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2HAK/Ba,EAAAA,EAAAA,YAIH6E,EAA2B5F,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uFAMrC2F,EAAmB7F,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yEAK5B4F,EAAgB9F,EAAAA,GAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,gMAOpBa,EAAAA,EAAAA,uBAOTgF,EAAgB/F,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,2DAG3B,SAAC8F,GAAK,MAAsB,SAAhBA,EAAMC,MAAmBlF,EAAAA,EAAAA,sBAA8BA,EAAAA,EAAAA,YAAkB,IAKpFmF,EAAWlG,EAAAA,GAAAA,GAASiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,4G,iDCnDpBiG,EAAUnG,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIpBkG,EAAcpG,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4FAOvBmG,EAAarG,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mIASvBoG,EAAqBtG,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gCAI/BqG,EAAiBvG,EAAAA,GAAAA,MAAYY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2EAI/Ba,EAAAA,EAAAA,WAGEyF,GAAYxG,EAAAA,EAAAA,IAAOyG,EAAAA,GAAPzG,CAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,mMAQ3Ba,EAAAA,EAAAA,aACKA,EAAAA,EAAAA,WACE,SAACiF,GAAK,OAAKA,EAAMU,aAAe,MAAM,IAO3CC,EAAoB3G,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,sIAK3Ba,EAAAA,EAAAA,WAKH6F,EAAoB5G,EAAAA,GAAAA,EAAQ6G,IAAAA,GAAA3G,EAAAA,EAAAA,GAAA,0FAO5B4G,EAAY9G,EAAAA,GAAAA,IAAU+G,IAAAA,GAAA7G,EAAAA,EAAAA,GAAA,iEAGhB,SAAC8F,GAAK,OAAKA,EAAMgB,aAAe,MAAM,IAE5CC,EAAcjH,EAAAA,GAAAA,IAAUkH,IAAAA,GAAAhH,EAAAA,EAAAA,GAAA,yNAS1Ba,EAAAA,EAAAA,WACKA,EAAAA,EAAAA,cAGHoG,GAAUnH,EAAAA,GAAAA,EAAQoH,IAAAA,GAAAlH,EAAAA,EAAAA,GAAA,6BAGlBmH,GAAUrH,EAAAA,GAAAA,EAAQsH,IAAAA,GAAApH,EAAAA,EAAAA,GAAA,6BAIlBqH,GAAWvH,EAAAA,GAAAA,KAAWwH,IAAAA,GAAAtH,EAAAA,EAAAA,GAAA,2BACzBa,EAAAA,EAAAA,WAIG0G,IAAgBzH,EAAAA,EAAAA,IAAO0H,EAAAA,GAAP1H,CAAe2H,IAAAA,GAAAzH,EAAAA,EAAAA,GAAA,yKAGAa,EAAAA,EAAAA,WAQ/B6G,GAAoB5H,EAAAA,GAAAA,EAAQ6H,IAAAA,GAAA3H,EAAAA,EAAAA,GAAA,kXAYvBa,EAAAA,EAAAA,UAMLA,EAAAA,EAAAA,aAGOA,EAAAA,EAAAA,cAMP+G,GAAa9H,EAAAA,GAAAA,IAAU+H,IAAAA,GAAA7H,EAAAA,EAAAA,GAAA,0KAQpBa,EAAAA,EAAAA,WAUHiH,GAAQhI,EAAAA,GAAAA,EAAQiI,IAAAA,GAAA/H,EAAAA,EAAAA,GAAA,4CAElBa,EAAAA,EAAAA,WAIEmH,GAAYlI,EAAAA,GAAAA,KAAWmI,IAAAA,GAAAjI,EAAAA,EAAAA,GAAA,6BACzBa,EAAAA,EAAAA,c,sEC3JLqH,GAAgB,CACpBtG,MAAO,GACPC,OAAQ,IAGJsG,GAASC,EAAAA,GAAW,CACxBxG,MAAOwG,EAAAA,KACPvG,OAAQuG,EAAAA,OAGK,SAASC,KACtB,IAAMC,EAAe,WACnB7E,QAAQC,IAAI,SACd,EACA,OACErC,EAAAA,GAAAA,MAAAkH,GAAAA,SAAA,CAAAjH,SAAA,EAEED,EAAAA,GAAAA,MAAC4E,EAAO,CAAA3E,SAAA,EACNC,EAAAA,GAAAA,KAAC2E,EAAW,CAAA5E,SAAC,cACbC,EAAAA,GAAAA,KAACiH,EAAAA,GAAM,CAAEN,cAAiBA,GAAeO,iBAAkBN,GAAQO,SAAUJ,EAAahH,SAEvF,SAAAf,GAAUA,EAAPoI,QAAO,OACTtH,EAAAA,GAAAA,MAACuH,EAAAA,GAAI,CAAAtH,SAAA,EACHD,EAAAA,GAAAA,MAAC8E,EAAU,CAAA7E,SAAA,EACTD,EAAAA,GAAAA,MAAC+E,EAAkB,CAAA9E,SAAA,EACjBC,EAAAA,GAAAA,KAAC8E,EAAc,CAACwC,QAAQ,QAAOvH,SAAC,iBAChCC,EAAAA,GAAAA,KAAC+E,EAAS,CAACwC,GAAG,QAAQC,KAAK,QAAQC,KAAK,QAAQC,YAAY,mBAE9D5H,EAAAA,GAAAA,MAAC+E,EAAkB,CAAA9E,SAAA,EACjBC,EAAAA,GAAAA,KAAC8E,EAAc,CAACwC,QAAQ,SAAQvH,SAAC,iBACjCC,EAAAA,GAAAA,KAAC+E,EAAS,CAACwC,GAAG,SAASC,KAAK,SAASC,KAAK,SAASC,YAAY,aAAazC,YAAY,gBAG5FjF,EAAAA,GAAAA,KAAC0C,EAAAA,EAAY,CAACC,MAAM,WAAWvC,QAAS2G,EAAcxG,MAAM,YACvD,QAKbT,EAAAA,GAAAA,MAACoF,EAAiB,CAAAnF,SAAA,EAChBC,EAAAA,GAAAA,KAACmF,EAAiB,CAAApF,SAAC,wBACnBD,EAAAA,GAAAA,MAACuF,EAAS,CAACE,YAAY,OAAMxF,SAAA,EAC3BC,EAAAA,GAAAA,KAACwF,EAAW,CAAAzF,SAAC,OACbD,EAAAA,GAAAA,MAAC4F,GAAO,CAAA3F,SAAA,CAAC,+BAA2BC,EAAAA,GAAAA,KAAC8F,GAAQ,CAAA/F,SAAC,mDAEhDD,EAAAA,GAAAA,MAACuF,EAAS,CAACE,YAAY,OAAMxF,SAAA,EAC3BC,EAAAA,GAAAA,KAACwF,EAAW,CAAAzF,SAAC,OACbD,EAAAA,GAAAA,MAAC8F,GAAO,CAAA7F,SAAA,CAAC,+BAA2BC,EAAAA,GAAAA,KAAC8F,GAAQ,CAAA/F,SAAC,2DAGhDD,EAAAA,GAAAA,MAACkG,GAAa,CAAC2B,GAAG,WAAU5H,SAAA,EAC1BC,EAAAA,GAAAA,KAACmG,GAAiB,CAAApG,SAAC,iBAEnBC,EAAAA,GAAAA,KAAA,OAAKO,MAAO,GAAIC,OAAQ,GAAGT,UACzBC,EAAAA,GAAAA,KAAA,OAAKS,KAAI,GAAAC,OAAKC,EAAAA,EAAM,gCAK1Bb,EAAAA,GAAAA,MAACuG,GAAU,CAAAtG,SAAA,EAEXD,EAAAA,GAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,GAAAA,KAAA,UAAQ4H,OAAQC,GAAgBC,MAAM,8BACtC9H,EAAAA,GAAAA,KAAA,OAAKC,I,isTAAmBE,IAAI,cAAcI,MAAO,SAGjDT,EAAAA,GAAAA,MAACyG,GAAK,CAAAxG,SAAA,CAAC,eAAWC,EAAAA,GAAAA,KAACyG,GAAS,CAAA1G,SAAC,YAAmB,qEAKxD,C,4FCpEe,SAASgI,KACtB,IAAMvG,GAAWC,EAAAA,GAAAA,MACXuG,GAAUC,EAAAA,GAAAA,IAAYC,GAAAA,IACtBzF,GAAawF,EAAAA,GAAAA,IAAYE,GAAAA,IAC/BC,GAAkCC,EAAAA,GAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAgCL,EAAAA,GAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCpH,EAAQqH,EAAA,GAAEC,EAAWD,EAAA,GAE5BE,GAAwBR,EAAAA,GAAAA,UAAS,GAAES,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA5B5J,EAAI6J,EAAA,GAAEC,EAAOD,EAAA,IAEpB9F,EAAAA,GAAAA,YAAU,WACRxB,GAASwH,EAAAA,GAAAA,IAAW,CAAE/J,KAAAA,EAAMgK,MAAO,KACrC,GAAG,CAACzH,EAAUvC,IAEd,IAAMiK,EAAmB,SAACC,GACpBA,GAAW,GAAKA,GAAW1G,GAC7BsG,EAAQI,EAEZ,EAEMxJ,EAAiB,SAACD,GACtB+I,GAAa,GACbG,EAAYlJ,EACd,EACA,OACEI,EAAAA,GAAAA,MAACmE,EAAe,CAAAlE,SAAA,EACdC,EAAAA,GAAAA,KAACa,GAAAA,EAAS,CAAAd,UACRC,EAAAA,GAAAA,KAAC8G,GAAmB,OAGtBhH,EAAAA,GAAAA,MAACoE,EAAqB,CAAAnE,SAAA,EACpBD,EAAAA,GAAAA,MAACqE,EAAwB,CAAApE,SAAA,EACvBC,EAAAA,GAAAA,KAACoE,EAAgB,CAAArE,SAAC,iBAClBD,EAAAA,GAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,GAAAA,KAACqE,EAAa,CAACjE,QAAS,kBAAM8I,EAAiBjK,EAAO,EAAE,EAACc,UACvDC,EAAAA,GAAAA,KAACsE,EAAa,CAACE,MAAgB,IAATvF,EAAa,OAAS,GAAGc,UAC7CC,EAAAA,GAAAA,KAAA,OAAKS,KAAI,GAAAC,OAAKC,EAAAA,EAAM,6BAGxBX,EAAAA,GAAAA,KAACqE,EAAa,CAACjE,QAAS,kBAAM8I,EAAiBjK,EAAO,EAAE,EAACc,UACvDC,EAAAA,GAAAA,KAACsE,EAAa,CAACE,MAAOvF,IAASwD,EAAa,OAAS,GAAG1C,UACtDC,EAAAA,GAAAA,KAAA,OAAKS,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oCAQ5BX,EAAAA,GAAAA,KAACyE,EAAQ,CAAA1E,SACC,OAAPiI,QAAO,IAAPA,OAAO,EAAPA,EAASoB,KAAI,SAAC1J,GAAI,OAMjBM,EAAAA,GAAAA,KAACP,GAAAA,EAAQ,CAAiBC,KAAMA,EAAMC,eAAgBA,GAAtCD,EAAK0C,IAAmD,UAU9EpC,EAAAA,GAAAA,KAAC6C,GAAAA,EAAW,CAACC,OAAQ0F,EAAWzF,UAAW0F,EAAa1I,UACtDC,EAAAA,GAAAA,KAACoB,GAAAA,EAAuB,CAACE,SAAUA,EAAUD,YAAa,kBAAMoH,GAAc,EAAElH,SAAS,uBAKjG,CCjFe,SAAS8H,KACtB,OACErJ,EAAAA,GAAAA,KAAC+H,GAAU,GAEf,C,wGCNO,IAAMG,EAAiB,SAACoB,GAAK,OAAKA,EAAM5J,KAAK6J,IAAK,EAE5CpB,EAAkB,SAACmB,GAAK,OAAKA,EAAM5J,KAAK+C,UAAW,EAEnD+G,EAAiB,SAACF,GAAK,OAAKA,EAAM5J,KAAK+J,QAAS,C","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/PortalModal/PortalModal.styled.js","components/PortalModal/PortalModal.jsx","components/Recomended/Recomended.styled.js","components/RecomendedDashboard/RecomendedDashboard.styled.js","components/RecomendedDashboard/RecomendedDashboard.jsx","components/Recomended/Recomended.jsx","pages/RecomendedPage.jsx","redux/books/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n\n  background: transparent;\n  \n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n\n  border-radius: 8px; \n  margin-bottom: 8px;\n`\n\nexport const BookDataBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const TitleAutorBlock = styled.div`\n  max-width: ${({ page }) => ( page === 'true' ? '89px' : '137px')};\n`\n\nexport const BookTitle = styled.h3`\n\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n`\n///////////////////////////////////////////////////////////\nexport const DellBtn = styled.button`\n  background: transparent;\n`","import { BookAutor, BookCard, BookDataBlock, BookImg, BookTitle, DellBtn, TitleAutorBlock } from \"./CardBook.styled\";\nimport sprite from '../../img/sprite.svg';\n\n\nexport default function CardBook({book, openLoginModal, currentPage=false}) {\n// console.log( currentPage)\n  return (\n    <BookCard>\n      <BookImg src={book.imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n      <BookDataBlock>\n        <TitleAutorBlock page={currentPage === \" MyLibrary\" ? 'true' : 'false' }>\n          <BookTitle>{book.title}</BookTitle>\n          <BookAutor>{book.author}</BookAutor>\n        </TitleAutorBlock>\n        \n        {currentPage === \" MyLibrary\" && (\n          <DellBtn>        \n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg> \n          </DellBtn>\n        )}\n\n      </BookDataBlock>\n    </BookCard>\n  );\n}\n  ","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const DashboardBlock = styled.div`\n  width: 353px;\n  height: 651px;\n  border-radius: 30px;\n\n  background: ${color.blackLight};\n  padding: 40px 20px 20px 20px;\n;`","import { DashboardBlock} from './Dashboard.styled';\n\nexport default function Dashboard({ children }) {\n  return (\n    <DashboardBlock>\n      {children}\n    </DashboardBlock>\n  );\n}","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 500px;\n  height: 483px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 50px ;\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const CoverBook = styled.img`\n  width: 153px;\n  height: 233px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const TitleBook = styled.h2`\n  max-width: 400px;\n  font-size: 20px;\n  margin-bottom: 2px;\n\n     /* Ограничиваем текст одной строкой */\n     white-space: nowrap;\n     overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AuthorBook = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 32px;\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { addBookById } from \"../../redux/books/operations\";\n\nexport default function DetailedInformationBook({ closeModals, bookData, btnLabel }) {\n  const dispatch = useDispatch();\n\n  const handleButtonClick = async () => {    \n    console.log(bookData._id)\n    dispatch(addBookById(bookData._id))\n    // try {\n    //   await dispatch(logOut()).unwrap();\n    //   navigate('/register');\n    // } catch (error) {\n    //   toast.error(\"Log out failed. Something went wrong.\");\n    // }\n  }; \n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <CoverBook src={bookData.imageUrl} alt=\"cover\" />\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label={btnLabel} onClick={handleButtonClick} width=\"162px\" height=\"46px\" />\n    </Conteiner>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Modal = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;    \n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${color.dimmedBackground};    \n    overflow: auto;\n    z-index:5;\n\n    transform: scale(0);\n    &.active {\n        transform: scale(1);\n    }\n`;","import ReactDOM from 'react-dom';\nimport React, { useEffect } from 'react';\nimport { Modal } from './PortalModal.styled';\n\nexport default function PortalModal({ active, setActive, children }) {\n  useEffect(() => {\n    const closeModal = (e) => {\n      if (e.key === 'Escape') {\n        setActive(false);\n      }\n    };\n\n    const handleBodyScroll = (disableScroll) => {\n      if (disableScroll) {        \n        document.body.classList.add('no-scroll');\n      } else {        \n        document.body.classList.remove('no-scroll');\n      }\n    };\n\n    if (active) {        \n      document.addEventListener('keydown', closeModal);\n      handleBodyScroll(true);\n    } else {        \n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    };\n  }, [active, setActive]);\n\n  return ReactDOM.createPortal(\n    <Modal className={active ? 'active' : ''} onClick={() => setActive(false)}>\n      <div onClick={(e) => e.stopPropagation()}>{children}</div>\n    </Modal>,\n    document.getElementById('modal')\n  );\n};\n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const RecomendedBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  padding:  16px 0;\n`\n\n//////////////////////////////////////////\n\n\nexport const RecommendedBooksBlock = styled.div`\n  width: 847px;\n  height: 651px;\n  border-radius: 30px;\n\n  background: ${color.blackLight};\n  padding: 40px 40px 28px 40px;\n`\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nexport const RecommendedTitle = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.14;\n`\nexport const PaginationBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n\n  background: transparent;\n  border-radius: 50%; \n  border: 1px solid ${color.whiteLightTranslucent};\n\n  &:last-child {\n    margin-right: 0; \n  }\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${(props) => (props.stoke === \"true\" ? color.whiteLightTranslucent : color.whitePrimary)};\n`\n\n///////////////////////////////////////////////////////////////////////////\n\nexport const BooksTen = styled.ul`\n  /* width: 137px;\n  height: 248px; */\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n`\n\n// export const BookCard = styled.li`\n//   width: 137px;\n//   height: 248px;\n//   /* margin-righ+t: 8px; */\n\n//   background: transparent;\n//   /* border-radius: 50%;  */\n//   /* border: 1px solid ${color.whiteLightTranslucent}; */\n\n//   &:last-child {\n//     margin-right: 0; \n//   }\n// `\n// export const BookImg = styled.img`\n//   width: 137px;\n//   height: 208px;\n\n//   border-radius: 8px; \n//   margin-bottom: 8px;\n// `\n\n// export const BookTitle = styled.h3`\n//   font-size: 14px ;\n//   font-weight: 700;\n//   margin-bottom: 2px;\n\n//    /* Ограничиваем текст одной строкой */\n//    white-space: nowrap;\n\n//      /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n// `\n\n// export const BookAutor = styled.p`\n//   font-size: 10px ;\n//   color: ${color.gryeLight};\n// `","import color from 'common/GlobalColers'\nimport { Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const FilterTitle = styled.h3`\nfont-size: 14px;\nfont-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n`;\n\n\n\n\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 272px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport const StartWorkoutTitle = styled.p`\n  font-size: 20px;\nfont-weight: 700;\nline-height: 1;\n\nmargin-bottom: 40px;\n`\nexport const Arguments = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: ${(props) => props.maginbottom || 'auto'};\n`\nexport const SeriaNumber = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  font-size: 20px;\n  font-weight: 700;  \n  color: ${color.blackLight};\n  background: ${color.whitePrimary};\n  \n`\nexport const TextOne = styled.p`\n  width: 190px;  \n`\nexport const TextTwo = styled.p`\n  width: 200px;  \n`\n\nexport const TextSpan = styled.span`\n color: ${color.gryeLight};\n  \n`\n\nexport const LinkToLibrary = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;  color: ${color.gryeLight}; \n  \n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\nexport const LinkTextToLibrary = styled.p`\n  position: relative; \n\n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\nexport const QuoteBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 313px;\n  height: 83px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 14px 20PX;\n`\n// export const BlackBlock = styled.div`\n//   width: 40px;\n//   height: 40px;\n//   background: ${color.black};\n// `\n\nexport const Quote = styled.p`\n  width: 219px;\n  color: ${color.gryeLight};\n \n`\n\nexport const QuoteSpan = styled.span`  \n  color: ${color.whitePrimary};\n \n`\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, FilterTitle, Filters, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTextToLibrary, LinkToLibrary, Quote, QuoteBlock, QuoteSpan, SeriaNumber, StartWorkoutBlock, StartWorkoutTitle, TextOne, TextSpan, TextTwo } from './RecomendedDashboard.styled';\n\nimport imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\n\nconst initialValues = {\n  title: '',\n  author: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string(),\n  author: Yup.string(),\n});\n\nexport default function RecomendedDashboard() {\n  const handleSubmit = () => {    \n    console.log(\"submit\")\n  }\n  return (\n    <>\n      \n      <Filters>\n        <FilterTitle>Filters:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ touched }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"Enter text\" />                \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Enter text\" paddindleft=\"95px\" />                \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"To apply\" onClick={handleSubmit} width=\"122px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Start your workout</StartWorkoutTitle>\n        <Arguments maginbottom=\"20px\" >\n          <SeriaNumber>1</SeriaNumber>\n          <TextOne>Create a personal library: <TextSpan>add the books you intend to read to it.</TextSpan></TextOne>\n        </Arguments>\n        <Arguments maginbottom=\"26px\">\n          <SeriaNumber>2</SeriaNumber>\n          <TextTwo>Create your first workout: <TextSpan>define a goal, choose a period, start training.</TextSpan></TextTwo>\n        </Arguments>\n\n        <LinkToLibrary to=\"/library\">\n          <LinkTextToLibrary>My library </LinkTextToLibrary>\n            \n          <svg width={24} height={24}>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </svg>          \n        </LinkToLibrary>\n      </StartWorkoutBlock>\n\n      <QuoteBlock>\n        \n      <picture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={40} />\n      </picture>  \n        \n        <Quote>\"Books are <QuoteSpan>windows</QuoteSpan> to the world, and reading is a journey into the unknown.\"</Quote>\n      </QuoteBlock>\n\n    </>\n  );\n}\n  ","import { BooksTen, HeaderAndPaginationBlock, PaginationBtn,PaginationSvg,RecomendedBlock, RecommendedBooksBlock, RecommendedTitle} from \"./Recomended.styled\"\nimport sprite from '../../img/sprite.svg';\nimport RecomendedDashboard from \"components/RecomendedDashboard/RecomendedDashboard\";\nimport Dashboard from \"components/Dashboard/Dashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchBooks } from \"../../redux/books/operations\";\nimport { selectBookData, selectTotalPage } from \"../../redux/books/selector\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport DetailedInformationBook from \"components/DetailedInformationBook/DetailedInformationBook\";\nimport CardBook from \"components/CardBook/CardBook\";\n\nexport default function Recomended() {\n  const dispatch = useDispatch();\n  const results = useSelector(selectBookData)\n  const totalPages = useSelector(selectTotalPage);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false);\n \n  const [page, setPage] = useState(1);\n\n  useEffect(()=> {\n    dispatch(fetchBooks({ page, limit: 10  }))\n  }, [dispatch, page]);\n\n  const handlePageChange = (newPage) => { \n    if (newPage >= 1 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n\n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  return (\n    <RecomendedBlock>\n      <Dashboard>\n        <RecomendedDashboard/>\n      </Dashboard>\n\n      <RecommendedBooksBlock>\n        <HeaderAndPaginationBlock>\n          <RecommendedTitle>Recommended</RecommendedTitle>\n          <div>\n            <PaginationBtn onClick={() => handlePageChange(page - 1)} >\n              <PaginationSvg stoke={page === 1 ? \"true\" : ''}>\n                <use href={`${sprite}#icon-chevron-left`} />\n              </PaginationSvg>\n            </PaginationBtn>\n            <PaginationBtn onClick={() => handlePageChange(page + 1)}>\n              <PaginationSvg stoke={page === totalPages ? \"true\" : ''} >\n                <use href={`${sprite}#icon-chevron-right`} />\n              </PaginationSvg>\n            </PaginationBtn>\n          </div>\n        </HeaderAndPaginationBlock>\n\n\n\n        <BooksTen>\n          {results?.map((book) => (\n            // <BookCard key={book._id}>\n            //   <BookImg src={book.imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n            //   <BookTitle>{book.title}</BookTitle>\n            //   <BookAutor>{book.author}</BookAutor>\n            // </BookCard>\n            <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} />\n          ))}\n        </BooksTen>   \n\n      </RecommendedBooksBlock>\n\n\n\n\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Add to library\"/>\n      </PortalModal>\n\n    </RecomendedBlock>\n  );\n}\n  ","import Recomended from \"components/Recomended/Recomended\";\n\nexport default function RecomendedPage() {\n  return (\n    <Recomended />\n  );\n}\n  ","export const selectBookData = (state) => state.book.data;\n\nexport const selectTotalPage = (state) => state.book.totalPages;\n\nexport const selectOwnBooks = (state) => state.book.ownBooks;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n"],"names":["BookCard","styled","_templateObject","_taggedTemplateLiteral","BookImg","_templateObject2","BookDataBlock","_templateObject3","TitleAutorBlock","_templateObject4","_ref","page","BookTitle","_templateObject5","BookAutor","_templateObject6","color","DellBtn","_templateObject7","CardBook","book","openLoginModal","_ref$currentPage","currentPage","_jsxs","children","_jsx","src","imageUrl","alt","onClick","title","author","width","height","href","concat","sprite","DashboardBlock","Dashboard","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","btnLabel","dispatch","useDispatch","handleButtonClick","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","console","log","_id","addBookById","stop","apply","arguments","totalPages","CustomButton","label","Modal","PortalModal","active","setActive","useEffect","closeModal","e","key","handleBodyScroll","disableScroll","document","body","classList","add","remove","addEventListener","removeEventListener","ReactDOM","className","stopPropagation","getElementById","RecomendedBlock","RecommendedBooksBlock","HeaderAndPaginationBlock","RecommendedTitle","PaginationBtn","PaginationSvg","props","stoke","BooksTen","Filters","FilterTitle","FormFields","FormFieldConteiner","FormFieldLabel","FormField","Field","paddindleft","StartWorkoutBlock","StartWorkoutTitle","_templateObject8","Arguments","_templateObject9","maginbottom","SeriaNumber","_templateObject10","TextOne","_templateObject11","TextTwo","_templateObject12","TextSpan","_templateObject13","LinkToLibrary","NavLink","_templateObject14","LinkTextToLibrary","_templateObject15","QuoteBlock","_templateObject16","Quote","_templateObject17","QuoteSpan","_templateObject18","initialValues","schema","Yup","RecomendedDashboard","handleSubmit","_Fragment","Formik","validationSchema","onSubmit","touched","Form","htmlFor","id","name","type","placeholder","to","srcSet","imgBooksDesc2x","media","Recomended","results","useSelector","selectBookData","selectTotalPage","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","setPage","fetchBooks","limit","handlePageChange","newPage","map","RecomendedPage","state","data","selectOwnBooks","ownBooks"],"sourceRoot":""}