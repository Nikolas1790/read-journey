{"version":3,"file":"static/js/406.5de0f4ff.chunk.js","mappings":"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","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/Recomended/Recomended.styled.js","components/RecomendedDashboard/RecomendedDashboard.styled.js","components/RecomendedDashboard/RecomendedDashboard.jsx","components/Recomended/Recomended.jsx","pages/RecomendedPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n  background: transparent;\n  \n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n\n  border-radius: 8px; \n  margin-bottom: 8px;\n  background: ${color.gryeBlack};\n`\n\nexport const BookDataBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const TitleAutorBlock = styled.div`\n  max-width: ${({ page }) => ( page === 'true' ? '89px' : '137px')};\n`\n\nexport const BookTitle = styled.h3`\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n  white-space: nowrap;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n///////////////////////////////////////////////////////////\nexport const DellBtn = styled.button`\n  background: transparent;\n`","import { BookAutor, BookCard, BookDataBlock, BookImg, BookTitle, DellBtn, TitleAutorBlock } from \"./CardBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { deleteBook } from \"../../redux/books/operations\";\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function CardBook({book, openLoginModal, currentPage=false}) {\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    // console.log(book._id)\n    dispatch(deleteBook(book._id));\n  };\n\n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n  const imageUrl = book.imageUrl || getImageUrl();\n  return (\n    <BookCard>\n      <BookImg src={imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n      <BookDataBlock>\n        <TitleAutorBlock page={currentPage === \" MyLibrary\" ? 'true' : 'false' }>\n          <BookTitle>{book.title}</BookTitle>\n          <BookAutor>{book.author}</BookAutor>\n        </TitleAutorBlock>\n        \n        {currentPage === \" MyLibrary\" && (\n          <DellBtn onClick={handleDeleteClick} >        \n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg> \n          </DellBtn>\n        )}\n\n      </BookDataBlock>\n    </BookCard>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 500px;\n  height: 483px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 50px ;\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const CoverBook = styled.img`\n  width: 153px;\n  height: 233px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const TitleBook = styled.h2`\n  max-width: 400px;\n  font-size: 20px;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AuthorBook = styled.p`\n  max-width: 400px;\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 32px;\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addBookById, ownBooks } from \"../../redux/books/operations\";\nimport { useNavigate } from 'react-router-dom';\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\nimport { useEffect } from \"react\";\nimport { selectOwnBooks } from \"../../redux/books/selector\";\nimport { toast } from \"react-toastify\";\n\nexport default function DetailedInformationBook({ closeModals, bookData, btnLabel }) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const ownLibrary = useSelector(selectOwnBooks);\n  \n  useEffect(()=> {\n    dispatch(ownBooks())    \n  }, [dispatch]);\n  \n  const handleButtonClick =  () => {  \n    if(btnLabel === \"Add to library\") {\n      const bookExists = ownLibrary.find(item => item.title === bookData.title);\n\n      // Если find возвращает undefined, значит, книга не найдена в библиотеке, и мы можем добавить ее\n      if (bookExists === undefined) {\n        toast.success(\"Книга не найдена в библиотеке. Добавляем...\")\n        dispatch(addBookById(bookData._id));\n      } else {\n        toast.error('Книга уже есть в библиотеке.')\n      }\n    };  \n\n    if(btnLabel === \"Start reading\") navigate(`/reading/${bookData._id}`);\n\n    closeModals();\n  }; \n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n\n  const imageUrl = bookData.imageUrl || getImageUrl();\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <CoverBook src={imageUrl} alt=\"cover\" />\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label={btnLabel} onClick={handleButtonClick} width=\"162px\" height=\"46px\" />\n    </Conteiner>\n  );\n}\n  ","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nexport const PaginationBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n  background: transparent;\n  border-radius: 50%; \n  border: 1px solid ${color.whiteLightTranslucent};\n\n  &:last-child {\n    margin-right: 0; \n  }\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${(props) => (props.stoke === \"true\" ? color.whiteLightTranslucent : color.whitePrimary)};\n`\n\n///////////////////////////////////////////////////////////////////////////\nexport const BooksTen = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n`","import color from 'common/GlobalColers'\nimport { Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const FilterTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n`\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const ButtonConteiner = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n`;\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 272px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport const StartWorkoutTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n\n  margin-bottom: 40px;\n`\nexport const Arguments = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: ${(props) => props.maginbottom || 'auto'};\n`\nexport const SeriaNumber = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  font-size: 20px;\n  font-weight: 700;  \n  color: ${color.blackLight};\n  background: ${color.whitePrimary};  \n`\nexport const TextOne = styled.p`\n  width: 190px;  \n`\nexport const TextTwo = styled.p`\n  width: 200px;  \n`\n\nexport const TextSpan = styled.span`\n color: ${color.gryeLight};  \n`\n\nexport const LinkToLibrary = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;  color: ${color.gryeLight};   \n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\nexport const LinkTextToLibrary = styled.p`\n  position: relative; \n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\nexport const QuoteBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 313px;\n  height: 83px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n  padding: 14px 20PX;\n`\nexport const Quote = styled.p`\n  width: 219px;\n  color: ${color.gryeLight}; \n`\n\nexport const QuoteSpan = styled.span`  \n  color: ${color.whitePrimary}; \n`","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, ButtonConteiner, Filters, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTextToLibrary, LinkToLibrary, Quote, QuoteBlock, QuoteSpan, SeriaNumber, StartWorkoutBlock, StartWorkoutTitle, TextOne, TextSpan, TextTwo } from './RecomendedDashboard.styled';\nimport imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle } from 'components/Dashboard/Dashboard.styled';\nimport { fetchBooks } from '../../redux/books/operations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nconst initialValues = {\n  title: '',\n  author: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string(),\n  author: Yup.string(),\n});\n\nexport default function RecomendedDashboard() {\n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {  \n    const title= e.title\n    const author= e.author\n    setIsRestButtonVisible(true);\n    dispatch(fetchBooks({ title, author  }))\n    e.target.blur();\n  }\n\n  const handleReset = (resetForm) => {\n    setIsRestButtonVisible(false);\n    resetForm();\n    dispatch(fetchBooks({ page: 1, limit: 10  }))\n  };\n  return (\n    <Dashboard>\n      \n      <Filters>\n        <FilterTitle>Filters:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ resetForm }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"Enter text\" />                \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Enter text\" paddindleft=\"95px\" />                \n                </FormFieldConteiner>            \n              </FormFields>  \n              <ButtonConteiner>\n                <CustomButton label=\"To apply\" onClick={handleSubmit} width=\"122px\" />\n                {isRestButtonVisible && (\n                  <CustomButton label=\"Rest\" onClick={() => handleReset(resetForm)} width=\"98px\" />\n                )}\n              </ButtonConteiner>     \n                           \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Start your workout</StartWorkoutTitle>\n        <Arguments maginbottom=\"20px\" >\n          <SeriaNumber>1</SeriaNumber>\n          <TextOne>Create a personal library: <TextSpan>add the books you intend to read to it.</TextSpan></TextOne>\n        </Arguments>\n        <Arguments maginbottom=\"26px\">\n          <SeriaNumber>2</SeriaNumber>\n          <TextTwo>Create your first workout: <TextSpan>define a goal, choose a period, start training.</TextSpan></TextTwo>\n        </Arguments>\n\n        <LinkToLibrary to=\"/library\">\n          <LinkTextToLibrary>My library </LinkTextToLibrary>\n            \n          <svg width={24} height={24}>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </svg>          \n        </LinkToLibrary>\n      </StartWorkoutBlock>\n\n      <QuoteBlock>        \n      <picture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={40} />\n      </picture>          \n        <Quote>\"Books are <QuoteSpan>windows</QuoteSpan> to the world, and reading is a journey into the unknown.\"</Quote>\n      </QuoteBlock>\n    </Dashboard>\n  );\n}  ","import { BooksTen, HeaderAndPaginationBlock, PaginationBtn,PaginationSvg} from \"./Recomended.styled\"\nimport sprite from '../../img/sprite.svg';\nimport RecomendedDashboard from \"components/RecomendedDashboard/RecomendedDashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchBooks } from \"../../redux/books/operations\";\nimport { selectBookData, selectTotalPage } from \"../../redux/books/selector\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport DetailedInformationBook from \"components/DetailedInformationBook/DetailedInformationBook\";\nimport CardBook from \"components/CardBook/CardBook\";\nimport UnivesalMainConteainer from \"components/UniversalMainContainer/UniversalMainContainer\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\nimport { MainBlockTitle } from \"components/UniversalMainContainer/UniversalMainContainer.styled\";\n\nexport default function Recomended() {\n  const dispatch = useDispatch();\n  const results = useSelector(selectBookData)\n  const totalPages = useSelector(selectTotalPage);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false); \n  const [page, setPage] = useState(1);\n\n  useEffect(()=> {\n    dispatch(fetchBooks({ page, limit: 10  }))\n  }, [dispatch, page]);\n\n  const handlePageChange = (newPage) => { \n    if (newPage >= 1 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n  \n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  return (\n    <UnivesalGeneralBlock >      \n      <RecomendedDashboard />      \n\n      <UnivesalMainConteainer >\n        <HeaderAndPaginationBlock>\n          <MainBlockTitle>Recommended</MainBlockTitle>\n          <div>\n            <PaginationBtn onClick={() => handlePageChange(page - 1)} >\n              <PaginationSvg stoke={page === 1 ? \"true\" : ''}>\n                <use href={`${sprite}#icon-chevron-left`} />\n              </PaginationSvg>\n            </PaginationBtn>\n            <PaginationBtn onClick={() => handlePageChange(page + 1)}>\n              <PaginationSvg stoke={page === totalPages ? \"true\" : ''} >\n                <use href={`${sprite}#icon-chevron-right`} />\n              </PaginationSvg>\n            </PaginationBtn>\n          </div>\n        </HeaderAndPaginationBlock>\n\n        <BooksTen>\n          {results?.map((book) => (\n            <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} />\n          ))}\n        </BooksTen>  \n      </UnivesalMainConteainer>\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Add to library\"/>\n      </PortalModal>\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Recomended from \"components/Recomended/Recomended\";\n\nexport default function RecomendedPage() {\n  return (\n    <Recomended />\n  );\n}\n  "],"names":["BookCard","styled","_templateObject","_taggedTemplateLiteral","BookImg","_templateObject2","color","BookDataBlock","_templateObject3","TitleAutorBlock","_templateObject4","_ref","page","BookTitle","_templateObject5","BookAutor","_templateObject6","DellBtn","_templateObject7","CardBook","book","openLoginModal","_ref$currentPage","currentPage","dispatch","useDispatch","imageUrl","Image","src","notFoundImg","window","devicePixelRatio","notFoundImg2x","_jsxs","children","_jsx","alt","onClick","title","author","deleteBook","_id","width","height","href","concat","sprite","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","btnLabel","navigate","useNavigate","ownLibrary","useSelector","selectOwnBooks","useEffect","ownBooks","totalPages","CustomButton","label","undefined","find","item","toast","addBookById","HeaderAndPaginationBlock","PaginationBtn","PaginationSvg","props","stoke","BooksTen","Filters","FormFieldConteiner","FormFields","ButtonConteiner","FormFieldLabel","FormField","Field","paddindleft","StartWorkoutBlock","_templateObject8","StartWorkoutTitle","_templateObject9","Arguments","_templateObject10","maginbottom","SeriaNumber","_templateObject11","TextOne","_templateObject12","TextTwo","_templateObject13","TextSpan","_templateObject14","LinkToLibrary","NavLink","_templateObject15","LinkTextToLibrary","_templateObject16","QuoteBlock","_templateObject17","Quote","_templateObject18","QuoteSpan","_templateObject19","initialValues","schema","Yup","RecomendedDashboard","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","handleSubmit","e","fetchBooks","target","blur","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","resetForm","Form","htmlFor","id","name","type","placeholder","limit","handleReset","to","srcSet","imgBooksDesc2x","media","imgBooksDesc","Recomended","results","selectBookData","selectTotalPage","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","setPage","handlePageChange","newPage","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlockTitle","map","PortalModal","active","setActive","RecomendedPage"],"sourceRoot":""}