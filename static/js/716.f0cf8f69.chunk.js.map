{"version":3,"file":"static/js/716.f0cf8f69.chunk.js","mappings":"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","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/LibraryDashoard/LibraryDashoard.styled.js","components/PortalModal/PortalModal.styled.js","components/PortalModal/PortalModal.jsx","components/MyLibraryBooks/MyLibraryBooks.styled.js","components/EmptyLibraryScreensaver/EmptyLibraryScreensaver.styled.js","components/EmptyLibraryScreensaver/EmptyLibraryScreensaver.jsx","components/MyLibraryBooks/MyLibraryBooks.jsx","components/ModalAddBookSuccessfully/ModalAddBookSuccessfully.styled.js","components/ModalAddBookSuccessfully/ModalAddBookSuccessfully.jsx","components/LibraryDashoard/LibraryDashoard.jsx","components/Library/Library..jsx","pages/LibraryPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n\n  background: transparent;\n  \n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n\n  border-radius: 8px; \n  margin-bottom: 8px;\n  background: ${color.gryeBlack};\n`\n\nexport const BookDataBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const TitleAutorBlock = styled.div`\n  max-width: ${({ page }) => ( page === 'true' ? '89px' : '137px')};\n`\n\nexport const BookTitle = styled.h3`\n\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n  white-space: nowrap;\n`\n///////////////////////////////////////////////////////////\nexport const DellBtn = styled.button`\n  background: transparent;\n`","import { BookAutor, BookCard, BookDataBlock, BookImg, BookTitle, DellBtn, TitleAutorBlock } from \"./CardBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { deleteBook } from \"../../redux/books/operations\";\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function CardBook({book, openLoginModal, currentPage=false}) {\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    // console.log(book._id)\n    dispatch(deleteBook(book._id));\n  };\n\n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n  const imageUrl = book.imageUrl || getImageUrl();\n  return (\n    <BookCard>\n      <BookImg src={imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n      <BookDataBlock>\n        <TitleAutorBlock page={currentPage === \" MyLibrary\" ? 'true' : 'false' }>\n          <BookTitle>{book.title}</BookTitle>\n          <BookAutor>{book.author}</BookAutor>\n        </TitleAutorBlock>\n        \n        {currentPage === \" MyLibrary\" && (\n          <DellBtn onClick={handleDeleteClick} >        \n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg> \n          </DellBtn>\n        )}\n\n      </BookDataBlock>\n    </BookCard>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 500px;\n  height: 483px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 50px ;\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const CoverBook = styled.img`\n  width: 153px;\n  height: 233px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const TitleBook = styled.h2`\n  max-width: 400px;\n  font-size: 20px;\n  margin-bottom: 2px;\n\n     /* Ограничиваем текст одной строкой */\n     white-space: nowrap;\n     overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AuthorBook = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 32px;\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { addBookById } from \"../../redux/books/operations\";\n// import { selectOwnBooks } from \"../../redux/books/selector\";\nimport { useNavigate } from 'react-router-dom';\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function DetailedInformationBook({ closeModals, bookData, btnLabel }) {\n  // const ownLibrary = useSelector(selectOwnBooks); \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // console.log(ownLibrary)\n\n  const handleButtonClick =  () => {   \n    if(btnLabel === \"Add to library\") dispatch(addBookById(bookData._id));  \n    if(btnLabel === \"Start reading\") navigate(`/reading/${bookData._id}`);\n\n    closeModals();\n  }; \n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n\n  const imageUrl = bookData.imageUrl || getImageUrl();\n\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <CoverBook src={imageUrl} alt=\"cover\" />\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label={btnLabel} onClick={handleButtonClick} width=\"162px\" height=\"46px\" />\n    </Conteiner>\n  );\n}\n  ","import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const MainBlockLibraryDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n`\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\n// export const FilterTitle = styled.h3`\n// font-size: 14px;\n// font-weight: 500;\n//   margin-bottom: 8px;\n//   margin-left: 14px;\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -5px; \n  padding:  5px 10px 10px;\n`;\n\n//////////////////////////////////////////////\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 259px;\n  border-radius: 12px;\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n`\nexport const StartWorkoutTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n\n  margin-bottom: 20px;\n`\n/////   \n\nexport const Arguments = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`\nexport const CardRecomended = styled.li`\n  width: 71px;\n  height: 141px;  \n`\n\nexport const CardImg = styled.img`\n  width: 71px;\n  height: 107px;\n  border-radius: 8px;  \n\n  margin-bottom: 8px;\n`\n\nexport const CardTitle = styled.h4`\n  font-size: 10px;\n  font-weight: 700;\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  margin-bottom: 2px;\n`\n\nexport const CardAutor = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n//////////////////////////////////////////////////////////////\n\n\nexport const LinkToHome = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${color.gryeLight}; \n\n  margin: auto 0;\n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\n\n\nexport const LinkTextToHome = styled.p`\n  position: relative; \n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\n\n","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Modal = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;    \n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${color.dimmedBackground};    \n    overflow: auto;\n    z-index:5;\n\n    transform: scale(0);\n    &.active {\n        transform: scale(1);\n    }\n`;","import ReactDOM from 'react-dom';\nimport React, { useEffect } from 'react';\nimport { Modal } from './PortalModal.styled';\n\nexport default function PortalModal({ active, setActive, children }) {\n  useEffect(() => {\n    const closeModal = (e) => {\n      if (e.key === 'Escape') {\n        setActive(false);\n      }\n    };\n\n    const handleBodyScroll = (disableScroll) => {\n      if (disableScroll) {        \n        document.body.classList.add('no-scroll');\n      } else {        \n        document.body.classList.remove('no-scroll');\n      }\n    };\n\n    if (active) {        \n      document.addEventListener('keydown', closeModal);\n      handleBodyScroll(true);\n    } else {        \n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    };\n  }, [active, setActive]);\n\n  return ReactDOM.createPortal(\n    <Modal className={active ? 'active' : ''} onClick={() => setActive(false)}>\n      <div onClick={(e) => e.stopPropagation()}>{children}</div>\n    </Modal>,\n    document.getElementById('modal')\n  );\n};\n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n// export const MyLibraryBlock = styled.div`\n//   width: 847px;\n//   height: 651px;\n//   border-radius: 30px;\n\n//   background: ${color.blackLight};\n//    padding: 40px 40px 28px 40px;\n//  `\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\n// export const MyLibraryTitle = styled.h1`\n//   font-size: 28px;\n//   font-weight: 700;\n//   line-height: 1.14;\n// `\n\n///////////////////////////////////////////////////////////////\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n\n  width: 153px;\n  height: 46px;\n  border-radius: 12px; \n  border: 1px solid ${color.charcoalGray};\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 14px;\n\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 120%; \n  left: 0;\n  color: ${color.gryeLight};\n  background-color: ${color.gryeBlack};\n  border-top: none;\n  display: none;\n\n  list-style: none;\n  padding: 14px;\n  margin: 0;\n\n  width: 100%;\n  border-radius: 12px;\n  display: ${(props) => (props.open ? 'block' : 'none')};\n`;\n\nexport const DropdownItem = styled.li`\n  cursor: pointer;  \n\n  &:not(:last-child) {\n    margin-bottom: 7px;\n  }\n  &:hover {\n    color: ${color.whitePrimary};\n  }\n\n`;\n\n\nexport const BooksTen = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n\n  height: 523px;\n  overflow: hidden;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n\nexport const EmptyLibraryBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  /* width: 247px; */\n  margin-top: 147px;\n`\nexport const EmptyLibraryPicture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* flex-direction: column; */\n  width: 130px;\n  height: 130px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin-bottom: 20px;\n`\n\nexport const EmptyLibraryText = styled.p`\n  text-align: center;\n  width: 274px;\n`\n\nexport const EmptyLibrarySpan = styled.span`\n  color: ${color.gryeLight};\n`","import imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport { EmptyLibraryBlock, EmptyLibraryPicture, EmptyLibrarySpan, EmptyLibraryText } from './EmptyLibraryScreensaver.styled';\n\nexport default function EmptyLibraryScreensaver() {\n  return (\n    <EmptyLibraryBlock>\n      <EmptyLibraryPicture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={70} />\n      </EmptyLibraryPicture> \n      <EmptyLibraryText>To start training, add <EmptyLibrarySpan>some of your books</EmptyLibrarySpan> or from the recommended ones</EmptyLibraryText>\n    </EmptyLibraryBlock>\n  );\n}","import sprite from '../../img/sprite.svg';\nimport { useEffect, useRef, useState } from \"react\";\nimport { BooksTen, Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg, HeaderAndPaginationBlock } from './MyLibraryBooks.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ownBooks } from '../../redux/books/operations';\nimport { selectOwnBooks } from '../../redux/books/selector';\nimport CardBook from 'components/CardBook/CardBook';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport DetailedInformationBook from 'components/DetailedInformationBook/DetailedInformationBook';\nimport UnivesalMainConteainer from 'components/UniversalMainContainer/UniversalMainContainer';\nimport { MainBlockTitle } from 'components/UniversalMainContainer/UniversalMainContainer.styled';\nimport EmptyLibraryScreensaver from 'components/EmptyLibraryScreensaver/EmptyLibraryScreensaver';\n\nconst options = [\"Unread\", \"In progress\", \"Done\", \"All books\" ]\n\nexport default function MyLibraryBooks() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false);\n\n  const [selectedBooks, setSelectedBooks] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const selecctRef = useRef(null);\n\n  const ownLibrary = useSelector(selectOwnBooks);\n  // console.log(ownLibrary)\n  const dispatch = useDispatch();\n  useEffect(()=> {\n    dispatch(ownBooks())\n  }, [dispatch]);\n\n  \n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  useEffect(() => {\n    \n    const handleClickOutside = (event) => {\n        if (selecctRef.current && !selecctRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n        document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n    // console.log(\"selectedBooks\")\n  };\n\n\n  return (\n    <UnivesalMainConteainer>\n        <HeaderAndPaginationBlock>\n          <MainBlockTitle>My library</MainBlockTitle>\n\n          <Dropdown onClick={toggleDropdown} ref={selecctRef}>\n            {!isOpen ? (<DropdownSvg width={16} height={16} >\n              <use href={`${sprite}#icon-chevron-down`}  />\n            </DropdownSvg>) : (\n            <DropdownSvg width={16} height={16} >\n              <use href={`${sprite}#icon-chevron-upp`}  />\n            </DropdownSvg>)}\n            <DropdownButton >{selectedBooks || \"All books\"}</DropdownButton>\n            <DropdownList open={isOpen}>\n              {options.map((book) => (\n                <DropdownItem key={book} value={book} onClick={() => setSelectedBooks(book)}>\n                  {book}\n                </DropdownItem>\n              ))}\n            </DropdownList>                   \n          </Dropdown>\n        </HeaderAndPaginationBlock>\n\n\n\n        {ownLibrary.length === 0 ? ( \n          <EmptyLibraryScreensaver />\n        ) : (\n          <BooksTen>\n            {Array.isArray(ownLibrary) && ownLibrary.map((book) => (  \n              <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} currentPage=\" MyLibrary\"  />\n            ))}\n          </BooksTen> \n        )}\n\n\n\n\n\n\n        <PortalModal active={modalOpen} setActive={setModalOpen}>\n          <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Start reading\" />\n        </PortalModal>\n      </UnivesalMainConteainer>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 342px;\n  height: 290px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 50px ;\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const Img = styled.picture`\n  width: 68px;\n  height: 70px; \n  margin-bottom: 32px;\n`\n\nexport const Title = styled.h3`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 14px;\n`\nexport const Text = styled.p`\n  text-align: center;\n  color: ${color.gryeLight};\n`\nexport const TextSpan = styled.span`  \n  color: ${color.whitePrimary};\n`","import sprite from '../../img/sprite.svg';\nimport { ClosingSymbol, Conteiner, Img, Text, TextSpan, Title } from './ModalAddBookSuccessfully.styled';\nimport like2x from '../../img/stackBooksAndLike/like-desc@2x.png';\nimport like from '../../img/stackBooksAndLike/like-desc.png';\n\nexport default function ModalAddBookSuccessfully({ closeModals}) {\n\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n      <Img>\n        <source srcSet={like2x} media=\"(min-resolution: 192dpi)\" />\n        <img src={like} alt='add book' />\n      </Img>  \n      <Title>Good job</Title>\n      <Text>Your book is now in <TextSpan>the library!</TextSpan> The joy knows no bounds and now you can start your training</Text>\n\n    </Conteiner>\n  );\n}\n  ","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, CardAutor, CardImg, CardRecomended, CardTitle, ErrorMessageStyled, Filters, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTextToHome, LinkToHome, MainBlockLibraryDashboard, StartWorkoutBlock, StartWorkoutTitle } from './LibraryDashoard.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBookData } from '../../redux/books/selector';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle } from 'components/Dashboard/Dashboard.styled';\nimport { addNewBook } from '../../redux/books/operations';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport ModalAddBookSuccessfully from 'components/ModalAddBookSuccessfully/ModalAddBookSuccessfully';\nimport { useState } from 'react';\n\nconst initialValues = {\n  title: '',\n  author: '',\n  page: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string().required('Required'),\n  author: Yup.string().required('Required'),\n  page: Yup.string().required('Required').matches(/^[0-9]+$/, 'Must be only digits')\n  .transform((value, originalValue) => originalValue.replace(/\\s/g, '')),\n});\n\nexport default function LibraryDashboard() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const results = useSelector(selectBookData);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e, { resetForm }) => {  \n    const title= e.title\n    const author= e.author\n    const page= parseInt(e.page)\n\n    if(page) {\n      dispatch(addNewBook({ title, author, totalPages: page }));\n      setModalOpen(true)\n      resetForm();  // Сбрасываем форму после успешного сабмита\n    }\n  }\n  return (\n    <Dashboard>\n    <MainBlockLibraryDashboard>      \n      <Filters>\n        <FilterTitle>Create your library:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({  errors, touched, resetForm  }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"I See You Are...\" error={errors.title && touched.title ? \"true\" : \"false\" } />     \n                  <ErrorMessageStyled name=\"title\" component='div' />           \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Hilarion Pavlyuk\" paddindleft=\"95px\"  error={errors.author && touched.author ? \"true\" : \"false\" } />    \n                  <ErrorMessageStyled name=\"author\" component='div' />            \n                </FormFieldConteiner> \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"page\">Number of pages:</FormFieldLabel>\n                  <FormField id=\"page\" name=\"page\" type=\"page\" placeholder=\"664\" paddindleft=\"135px\" error={errors.page && touched.page ? \"true\" : \"false\" } />             \n                  <ErrorMessageStyled name=\"page\" component='div' />   \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"Add book\" width=\"131px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Recommended books</StartWorkoutTitle>\n\n\n\n        <Arguments >\n          {results?.slice(0, 3).map((book) => (\n            <CardRecomended key={book._id}>\n              <CardImg src={book.imageUrl} alt=\"book title\"  />\n              <CardTitle>{book.title}</CardTitle>\n              <CardAutor>{book.author}</CardAutor>\n            </CardRecomended>\n          ))}     \n        </Arguments>\n\n\n\n        <LinkToHome to=\"/recommended\">\n          <LinkTextToHome>Home </LinkTextToHome>            \n          <svg width={24} height={24}>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </svg>          \n        </LinkToHome>\n      </StartWorkoutBlock>\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <ModalAddBookSuccessfully  closeModals={() => setModalOpen()} />\n      </PortalModal>\n    </MainBlockLibraryDashboard>\n    </Dashboard>\n  );\n}\n  ","import MyLibraryBooks from 'components/MyLibraryBooks/MyLibraryBooks';\nimport LibraryDashboard from \"components/LibraryDashoard/LibraryDashoard\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\n\nexport default function Library() {\n  return (\n    <UnivesalGeneralBlock >\n      \n      <LibraryDashboard />\n   \n      <MyLibraryBooks />\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Library from \"components/Library/Library.\";\n\nexport default function LibraryPage() {\n  return (\n    <Library />\n  );\n}\n  "],"names":["BookCard","styled","_templateObject","_taggedTemplateLiteral","BookImg","_templateObject2","color","BookDataBlock","_templateObject3","TitleAutorBlock","_templateObject4","_ref","page","BookTitle","_templateObject5","BookAutor","_templateObject6","DellBtn","_templateObject7","CardBook","book","openLoginModal","_ref$currentPage","currentPage","dispatch","useDispatch","imageUrl","Image","src","notFoundImg","window","devicePixelRatio","notFoundImg2x","_jsxs","children","_jsx","alt","onClick","title","author","deleteBook","_id","width","height","href","concat","sprite","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","btnLabel","navigate","useNavigate","totalPages","CustomButton","label","addBookById","MainBlockLibraryDashboard","Filters","FormFields","FormFieldConteiner","FormFieldLabel","FormField","Field","props","paddindleft","error","ErrorMessageStyled","ErrorMessage","StartWorkoutBlock","_templateObject8","StartWorkoutTitle","_templateObject9","Arguments","_templateObject10","CardRecomended","_templateObject11","CardImg","_templateObject12","CardTitle","_templateObject13","CardAutor","_templateObject14","LinkToHome","NavLink","_templateObject15","LinkTextToHome","_templateObject16","Modal","PortalModal","active","setActive","useEffect","closeModal","e","key","handleBodyScroll","disableScroll","document","body","classList","add","remove","addEventListener","removeEventListener","ReactDOM","className","stopPropagation","getElementById","HeaderAndPaginationBlock","Dropdown","DropdownSvg","DropdownButton","DropdownList","open","DropdownItem","BooksTen","EmptyLibraryBlock","EmptyLibraryPicture","EmptyLibraryText","EmptyLibrarySpan","EmptyLibraryScreensaver","srcSet","imgBooksDesc2x","media","imgBooksDesc","options","MyLibraryBooks","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","selectedBooks","setSelectedBooks","_useState7","_useState8","isOpen","setIsOpen","selecctRef","useRef","ownLibrary","useSelector","selectOwnBooks","ownBooks","handleClickOutside","event","current","contains","target","UnivesalMainConteainer","MainBlockTitle","ref","map","value","length","Array","isArray","Img","Title","Text","TextSpan","ModalAddBookSuccessfully","like2x","initialValues","schema","Yup","required","matches","transform","originalValue","replace","LibraryDashboard","results","selectBookData","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","resetForm","parseInt","addNewBook","_ref2","errors","touched","Form","htmlFor","id","name","type","placeholder","component","slice","to","Library","UnivesalGeneralBlock","LibraryPage"],"sourceRoot":""}