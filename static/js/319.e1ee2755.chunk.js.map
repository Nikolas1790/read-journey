{"version":3,"file":"static/js/319.e1ee2755.chunk.js","mappings":"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","sources":["components/LibraryDashoard/LibraryDashoard.styled.js","components/Reading/Reading.styled.js","components/ReadingDashboard/ReadingDashboard.styled.js","components/DashboardProgress/DashboardProgress.styled.js","components/DashboardProgress/DashboardProgress.jsx","components/ReadingDashboard/ReadingDashboard.jsx","components/Reading/Reading.jsx","pages/ReadingPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const MainBlockLibraryDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n`\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\n// export const FilterTitle = styled.h3`\n// font-size: 14px;\n// font-weight: 500;\n//   margin-bottom: 8px;\n//   margin-left: 14px;\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -5px; \n  padding:  5px 10px 10px;\n`;\n\n//////////////////////////////////////////////\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 259px;\n  border-radius: 12px;\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n`\nexport const StartWorkoutTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n\n  margin-bottom: 20px;\n`\n/////   \n\nexport const Arguments = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`\nexport const CardRecomended = styled.li`\n  width: 71px;\n  height: 141px;  \n`\n\nexport const CardImg = styled.img`\n  width: 71px;\n  height: 107px;\n  border-radius: 8px;  \n\n  margin-bottom: 8px;\n`\n\nexport const CardTitle = styled.h4`\n  font-size: 10px;\n  font-weight: 700;\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  margin-bottom: 2px;\n`\n\nexport const CardAutor = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n//////////////////////////////////////////////////////////////\n\n\nexport const LinkToHome = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${color.gryeLight}; \n\n  margin: auto 0;\n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\n\n\nexport const LinkTextToHome = styled.p`\n  position: relative; \n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\n\n","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const BasicInfBook = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 44px;\n`\n\nexport const BasicImg = styled.img`\n  width: 224px;\n  height: 340px;\n  border-radius: 8px;\n  margin-bottom: 25px;\n`\n\nexport const TitleBook = styled.h2`\n  font-size: 20px;\n  margin-bottom: 4px;\n\n`;\n\nexport const AuthorBook = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 25px;\n`;","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n\nexport const Forma = styled.div`\n  margin-bottom: 40px;\n`\n\n// export const StarPicture = styled.picture`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 100px;\n//   height: 100px;\n//   border-radius: 50%;\n//   background: ${color.blackWhite};\n//   margin: 0 auto;\n// `\n\n/////////////////////////////////////////////////////////\n\n\n// export const ProgressTitle = styled.h4`\n//   font-size: 20px;\n//   font-weight: 700;\n//   margin-bottom: 14px;\n// `\n\n// export const ProgressText = styled.p`\n//   color: ${color.gryeLight};\n//   margin-bottom: 60px;\n// `\n\nexport const DiaryTitle = styled.h4`\n  font-size: 20px;\n  font-weight: 700;\n`\n////////////////////////////////////////////////////////////////////////////////////\n\nexport const DiaryHeaderConteiner = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\nexport const DiarySvgConteiner = styled.div`\n  display: flex;\n  gap: 8px;\n\n`\nexport const DiaryInfConteiner = styled.div`\n  width: 313px;\n  height: 373px;  \n  background: ${color.gryeBlack};\n  border-radius: 12px;\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const StarPicture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin: 0 auto;\n`\n\nexport const ProgressTitle = styled.h4`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 14px;\n`\n\nexport const ProgressText = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 60px;\n`\n\n\n","import { ProgressText, ProgressTitle, StarPicture } from './DashboardProgress.styled';\nimport star from '../../img/star/star.png';\nimport star2x from '../../img/star/srar@2x.png';\n\nexport default function DashboardProgress() {\n  return (\n    <div>\n      <ProgressTitle>Progress</ProgressTitle>\n      <ProgressText>Here you will see when and how much you read. To record, click on the red button above.</ProgressText>\n      <div>\n        <StarPicture>\n          <source srcSet={star2x} media=\"(min-resolution: 192dpi)\" />        \n          <img src={star} alt=\"stack books\" width={50} />\n        </StarPicture> \n      </div>\n    </div>\n  );\n}\n  ","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { ErrorMessageStyled, FormField, FormFieldConteiner, FormFieldLabel, FormFields} from '../LibraryDashoard/LibraryDashoard.styled';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle } from 'components/Dashboard/Dashboard.styled';\nimport { DiaryHeaderConteiner, DiaryInfConteiner, DiarySvgConteiner, DiaryTitle, Forma } from './ReadingDashboard.styled';\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bookReadingInf, readingStart, readingStop } from '../../redux/books/operations';\nimport { useEffect, useState } from 'react';\nimport DashboardProgress from 'components/DashboardProgress/DashboardProgress';\nimport { selectInfoCurrentBook, selectReadBook } from '../../redux/books/selector';\n\nconst initialValues = {\n  page: '',\n};\n\nconst schema = Yup.object({\n  page: Yup.string().required('Required').matches(/^[0-9]+$/, 'Must be only digits')\n  .transform((value, originalValue) => originalValue.replace(/\\s/g, '')),\n});\n\nexport default function ReadingDashboard(selectedBook) {\n  const [read, setRead] = useState(false);\n  const dispatch = useDispatch();\n  const InfoAboutBook =useSelector(selectInfoCurrentBook)\n\n  const ReadBook =useSelector(selectReadBook)\n\n  console.log(InfoAboutBook)\n    useEffect(() =>{\n      if(selectedBook.selectedBook) dispatch(bookReadingInf(selectedBook.selectedBook))\n    }, [ selectedBook.selectedBook, read, dispatch, ReadBook])\n\n  const handleSubmit = (e) => {   \n    // console.log(e)\n    const requestData = {\n      id: selectedBook.selectedBook,\n      page: e.page \n    }; \n\n    if (e.page) {\n      if(!read){\n        dispatch(readingStart(requestData))\n        setRead(true)\n      }\n      if(read){\n        dispatch(readingStop(requestData))\n        setRead(false)\n      }\n\n    };\n  }\n  return (  \n    <Dashboard> \n      <Forma>\n        <FilterTitle>Start page:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({  errors,touched }) => (\n            <Form>\n              <FormFields>  \n                 <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"page\">Pages number:</FormFieldLabel>\n                  <FormField id=\"page\" name=\"page\" type=\"page\" placeholder=\"0\" paddindleft=\"111px\" error={errors.page && touched.page ? \"true\" : \"false\" } />  \n                    {/* {console.log(errors)}            */}\n                  <ErrorMessageStyled name=\"page\" component='div' />   \n\n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label={read ? \"To stop\" : \"To start\"} onClick={handleSubmit} width=\"114px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Forma>\n      <div>\n      { read && <DashboardProgress />}\n\n      <div>\n        <DiaryHeaderConteiner>\n          <DiaryTitle>Diary</DiaryTitle>\n          \n        <DiarySvgConteiner>\n          <svg width={20} height={20}>\n            <use href={`${sprite}#icon-hourglass`} />\n          </svg>  \n          <svg width={20} height={20}>\n            <use href={`${sprite}#icon-pie-chart`} />\n          </svg>  \n        </DiarySvgConteiner>\n        </DiaryHeaderConteiner>\n        <DiaryInfConteiner>\n          \n        </DiaryInfConteiner>\n      </div>\n\n      </div>\n    </Dashboard> \n  );\n}\n  ","import UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\nimport UnivesalMainConteainer from \"components/UniversalMainContainer/UniversalMainContainer\";\nimport { MainBlockTitle } from \"components/UniversalMainContainer/UniversalMainContainer.styled\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { selectOwnBooks } from \"../../redux/books/selector\";\nimport { AuthorBook, BasicImg, BasicInfBook, TitleBook } from \"./Reading.styled\";\nimport sprite from '../../img/sprite.svg';\nimport ReadingDashboard from \"components/ReadingDashboard/ReadingDashboard\";\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function Reading() {\n  const { bookId } = useParams();\n  const books = useSelector(selectOwnBooks);\n\n  const selectedBook = books.find(book => book._id === bookId);\n\n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n  const imageUrl = selectedBook.imageUrl || getImageUrl();\n  return (\n    <UnivesalGeneralBlock >\n      \n      <ReadingDashboard  selectedBook={selectedBook._id}/>     \n\n\n      <UnivesalMainConteainer>\n        <MainBlockTitle>My reading</MainBlockTitle>\n        <BasicInfBook>\n          <BasicImg src={imageUrl} alt='title'/>\n          <TitleBook>{selectedBook.title}</TitleBook>\n          <AuthorBook>{selectedBook.author}</AuthorBook>\n\n          <svg width={50} height={50}>\n            <use href={`${sprite}#icon-block-pause`} />\n          </svg> \n\n        </BasicInfBook>\n      </UnivesalMainConteainer>\n\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Reading from \"components/Reading/Reading\";\n\nexport default function ReadingPage() {\n  return (\n    <Reading />\n  );\n}\n  "],"names":["MainBlockLibraryDashboard","styled","_templateObject","_taggedTemplateLiteral","Filters","_templateObject2","FormFields","_templateObject3","FormFieldConteiner","_templateObject4","FormFieldLabel","_templateObject5","color","FormField","Field","_templateObject6","props","paddindleft","error","ErrorMessageStyled","ErrorMessage","_templateObject7","StartWorkoutBlock","_templateObject8","StartWorkoutTitle","_templateObject9","Arguments","_templateObject10","CardRecomended","_templateObject11","CardImg","_templateObject12","CardTitle","_templateObject13","CardAutor","_templateObject14","LinkToHome","NavLink","_templateObject15","LinkTextToHome","_templateObject16","BasicInfBook","BasicImg","TitleBook","AuthorBook","Forma","DiaryTitle","DiaryHeaderConteiner","DiarySvgConteiner","DiaryInfConteiner","StarPicture","ProgressTitle","ProgressText","DashboardProgress","_jsxs","children","_jsx","srcSet","star2x","media","src","alt","width","initialValues","page","schema","Yup","required","matches","transform","value","originalValue","replace","ReadingDashboard","selectedBook","_useState","useState","_useState2","_slicedToArray","read","setRead","dispatch","useDispatch","InfoAboutBook","useSelector","selectInfoCurrentBook","ReadBook","selectReadBook","console","log","useEffect","bookReadingInf","handleSubmit","e","requestData","id","readingStart","readingStop","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","_ref","errors","touched","Form","htmlFor","name","type","placeholder","component","CustomButton","label","onClick","height","href","concat","sprite","Reading","bookId","useParams","selectOwnBooks","find","book","_id","imageUrl","Image","notFoundImg","window","devicePixelRatio","notFoundImg2x","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlockTitle","title","author","ReadingPage"],"sourceRoot":""}