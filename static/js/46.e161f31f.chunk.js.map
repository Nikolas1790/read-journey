{"version":3,"file":"static/js/46.e161f31f.chunk.js","mappings":"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","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/ModalBookWindow/ModalBooks.styled.js","components/MyLibraryBooks/MyLibraryBooks.styled.js","components/EmptyLibraryScreensaver/EmptyLibraryScreensaver.styled.js","components/EmptyLibraryScreensaver/EmptyLibraryScreensaver.jsx","components/MyLibraryBooks/MyLibraryBooks.jsx","components/LibraryDashoard/LibraryDashoard.styled.js","components/ModalBookWindow/ModalAddBookSuccessfully.jsx","components/LibraryDashoard/LibraryDashoard.jsx","components/Library/Library..jsx","pages/LibraryPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n  background: transparent;\n  \n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n\n  border-radius: 8px; \n  margin-bottom: 8px;\n  background: ${color.gryeBlack};\n`\n\nexport const BookDataBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const TitleAutorBlock = styled.div`\n  max-width: ${({ page }) => ( page === 'true' ? '89px' : '137px')};\n  /* max-width: 89px; */\n`\n\nexport const BookTitle = styled.h3`\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n  white-space: nowrap;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const DellBtn = styled.button`\n  background: transparent;\n`","import { BookAutor, BookCard, BookDataBlock, BookImg, BookTitle, DellBtn, TitleAutorBlock } from \"./CardBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { deleteBook } from \"../../redux/books/operations\";\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function CardBook({book, openLoginModal, currentPage=false}) {\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    // console.log(book._id)\n    dispatch(deleteBook(book._id));\n  };\n\n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n  const imageUrl = book.imageUrl || getImageUrl();\n  return (\n    <BookCard>\n      <BookImg src={imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n      <BookDataBlock>\n        \n        <TitleAutorBlock page={currentPage === \"MyLibrary\" ? 'true' : '' }>\n          <BookTitle>{book.title}</BookTitle>\n          <BookAutor>{book.author}</BookAutor>\n        </TitleAutorBlock>\n        \n        {currentPage === \"MyLibrary\" && (\n          <DellBtn onClick={handleDeleteClick} >        \n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg> \n          </DellBtn>\n        )}\n\n      </BookDataBlock>\n    </BookCard>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 335px;\n  height: 100%;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 40px ;\n  @media (min-width: 768px) {\n    width: 500px;\n    height: 483px;\n    padding: 50px ;\n  }\n  @media (min-width: 1440px) {\n  }\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const CoverBook = styled.img`\n  width: 140px;\n  height: 213px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  @media (min-width: 768px) {\n    width: 153px;\n   height: 233px;\n  }\n`;\n\nexport const TitleBook = styled.h2`\n  text-align: center;\n  font-size: 18px;\n  line-height: 1;\n  margin-bottom: 2px;\n\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    max-width: 400px;\n      /* Ограничиваем текст одной строкой */\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const AuthorBook = styled.p`\n  font-size: 12px;\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    max-width: 400px;\n      /* Ограничиваем текст одной строкой */\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 20px;\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addBookById, ownBooks } from \"../../redux/books/operations\";\nimport { useNavigate } from 'react-router-dom';\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\nimport { useEffect } from \"react\";\nimport { selectOwnBooks } from \"../../redux/books/selector\";\nimport { toast } from \"react-toastify\";\n\nexport default function DetailedInformationBook({ closeModals, bookData, btnLabel }) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const ownLibrary = useSelector(selectOwnBooks);\n  \n  useEffect(()=> {\n    dispatch(ownBooks())    \n  }, [dispatch]);\n  \n  const handleButtonClick =  () => {  \n    if(btnLabel === \"Add to library\") {\n      const bookExists = ownLibrary.find(item => item.title === bookData.title);\n\n      // Если find возвращает undefined, значит, книга не найдена в библиотеке, и мы можем добавить ее\n      if (bookExists === undefined) {\n        toast.success(\"Книга не найдена в библиотеке. Добавляем...\")\n        dispatch(addBookById(bookData._id));\n      } else {\n        toast.error('Книга уже есть в библиотеке.')\n      }\n    };  \n\n    if(btnLabel === \"Start reading\") navigate(`/reading/${bookData._id}`);\n\n    closeModals();\n  }; \n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n\n  const imageUrl = bookData.imageUrl || getImageUrl();\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <CoverBook src={imageUrl} alt=\"cover\" />\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label={btnLabel} onClick={handleButtonClick} prop=\"true\"/>\n    </Conteiner>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 342px;\n  height: 290px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 60px 46px;\n  \n  @media (min-width: 768px) {\n    padding: 49px ;\n  }\n  @media (min-width: 1440px) {\n  }\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n  @media (min-width: 768px) {\n    right: 16px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 50px;\n  height: 50px; \n  margin-bottom: 20px;\n  @media (min-width: 768px) {\n    width: 68px;\n    height: 70px; \n    margin-bottom: 32px;\n  }\n  /* @media (min-width: 1440px) {\n    margin: 0 auto 163px auto;\n  } */\n`\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  @media (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 14px;\n  }\n  @media (min-width: 1440px) {\n  }\n`\nexport const Text = styled.p`\n  text-align: center;\n  color: ${color.gryeLight};\n`\nexport const TextSpan = styled.span`  \n  color: ${color.whitePrimary};\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\n///////////////////////////////////////////////////////////////\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  width: 153px;\n  height: 46px;\n  border-radius: 12px; \n  border: 1px solid ${color.charcoalGray};\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 14px;\n`;\n\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 120%; \n  left: 0;\n  color: ${color.gryeLight};\n  background-color: ${color.gryeBlack};\n  border-top: none;\n  display: none;\n\n  list-style: none;\n  padding: 14px;\n  margin: 0;\n\n  width: 100%;\n  border-radius: 12px;\n  display: ${(props) => (props.open ? 'block' : 'none')};\n`;\n\nexport const DropdownItem = styled.li`\n  cursor: pointer;  \n\n  &:not(:last-child) {\n    margin-bottom: 7px;\n  }\n  &:hover {\n    color: ${color.whitePrimary};\n  }\n`;\n\nexport const BooksTen = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n\n  height: 260px;\n  overflow: hidden;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media (min-width: 768px) {\n    \n    height: 523px;\n  }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const EmptyLibraryBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-top: 147px;\n`\nexport const EmptyLibraryPicture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 130px;\n  height: 130px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin-bottom: 20px;\n`\n\nexport const EmptyLibraryText = styled.p`\n  text-align: center;\n  width: 274px;\n`\n\nexport const EmptyLibrarySpan = styled.span`\n  color: ${color.gryeLight};\n`","import imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport { EmptyLibraryBlock, EmptyLibraryPicture, EmptyLibrarySpan, EmptyLibraryText } from './EmptyLibraryScreensaver.styled';\n\nexport default function EmptyLibraryScreensaver() {\n  return (\n    <EmptyLibraryBlock>\n      <EmptyLibraryPicture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={70} />\n      </EmptyLibraryPicture> \n      <EmptyLibraryText>To start training, add <EmptyLibrarySpan>some of your books</EmptyLibrarySpan> or from the recommended ones</EmptyLibraryText>\n    </EmptyLibraryBlock>\n  );\n}","import sprite from '../../img/sprite.svg';\nimport { useEffect, useRef, useState } from \"react\";\nimport { BooksTen, Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg, HeaderAndPaginationBlock } from './MyLibraryBooks.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ownBooks } from '../../redux/books/operations';\nimport { selectOwnBooks } from '../../redux/books/selector';\nimport CardBook from 'components/CardBook/CardBook';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport DetailedInformationBook from 'components/DetailedInformationBook/DetailedInformationBook';\nimport UnivesalMainConteainer from 'components/UniversalMainContainer/UniversalMainContainer';\nimport { MainBlockTitle } from 'components/UniversalMainContainer/UniversalMainContainer.styled';\nimport EmptyLibraryScreensaver from 'components/EmptyLibraryScreensaver/EmptyLibraryScreensaver';\n\nconst options = [\"Unread\", \"In progress\", \"Done\", \"All books\" ]\n\nexport default function MyLibraryBooks() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const ownLibrary = useSelector(selectOwnBooks);\n  const [selectedBooks, setSelectedBooks] = useState(\"\");\n  const selecctRef = useRef(null);\n\n  // console.log(ownLibrary)\n  const dispatch = useDispatch();\n  useEffect(()=> {\n    dispatch(ownBooks())    \n  }, [dispatch]);\n\n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  useEffect(() => {    \n    const handleClickOutside = (event) => {\n        if (selecctRef.current && !selecctRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n        document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSelectedBooks = (e) => {\n    setSelectedBooks(e);\n    if(e === \"Done\") dispatch(ownBooks(\"done\"))\n    if(e === \"In progress\") dispatch(ownBooks(\"in-progress\"))\n    if(e === \"All books\") dispatch(ownBooks())\n    if(e === \"Unread\") dispatch(ownBooks(\"unread\"))\n  };\n\n  return (\n    <UnivesalMainConteainer>\n        <HeaderAndPaginationBlock>\n          <MainBlockTitle>My library</MainBlockTitle>\n\n          <Dropdown onClick={toggleDropdown} ref={selecctRef}>\n            {!isOpen ? (\n            <DropdownSvg width={16} height={16} >\n              <use href={`${sprite}#icon-chevron-down`}  />\n            </DropdownSvg>\n            ) : (\n            <DropdownSvg width={16} height={16} >\n              <use href={`${sprite}#icon-chevron-upp`}  />\n            </DropdownSvg>\n            )}\n            <DropdownButton >{selectedBooks || \"All books\"}</DropdownButton>\n            <DropdownList open={isOpen}>\n              {options.map((book) => (\n                <DropdownItem key={book} value={book} onClick={() => handleSelectedBooks(book)}>\n                  {book}\n                </DropdownItem>\n              ))}\n            </DropdownList>                   \n          </Dropdown>\n        </HeaderAndPaginationBlock>\n\n        {ownLibrary.length === 0 ? ( \n          <EmptyLibraryScreensaver />\n        ) : (\n          <BooksTen>\n            {Array.isArray(ownLibrary) && ownLibrary.map((book) => (  \n              <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} currentPage=\"MyLibrary\"  />\n            ))}\n          </BooksTen> \n        )}\n\n        <PortalModal active={modalOpen} setActive={setModalOpen}>\n          <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Start reading\" />\n        </PortalModal>\n    </UnivesalMainConteainer>\n  );\n}\n  ","import color from 'common/GlobalColers'\n// import { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\n// export const MainBlockLibraryDashboard = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   height: 100%;\n\n//   @media (min-width: 768px) {\n//     flex-direction: row;\n//     /* justify-content: center; */\n//   }\n\n//   @media (min-width: 1440px) {\n//     flex-direction: column;\n//   }\n// `\n\nexport const Filters = styled.div`\n  /* margin-bottom: 20px; */\n`\n\nexport const StartWorkoutBlock = styled.div`\n  width: 295px;\n  height: 244px;\n  border-radius: 12px;\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n  margin-top: 20px;\n  @media (min-width: 768px) {\n    width: 313px;\n    height: 272px;\n    padding: 26px 20px;\n    margin-top: 0px;\n  }\n  @media (min-width: 1440px) {\n    height: 259px;\n    padding: 20px;\n    \n  }\n`\nexport const StartWorkoutTitle = styled.h4`\n    font-size: 18px;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n  @media (min-width: 1440px) {\n\n  }\n` \n\n\n\n\n\n\n\n\n\n\n\nexport const Arguments = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`\nexport const CardRecomended = styled.li`\n  width: 71px;\n  height: 141px;  \n`\n\nexport const CardImg = styled.img`\n  width: 71px;\n  height: 107px;\n  border-radius: 8px;  \n  margin-bottom: 8px;\n`\n\nexport const CardTitle = styled.h4`\n  font-size: 10px;\n  font-weight: 700;\n\n  margin-bottom: 2px;\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const CardAutor = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\n// export const LinkToHome = styled(NavLink)`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   color: ${color.gryeLight}; \n//   margin: auto 0;\n  \n//   &:hover::after,\n//   &:focus::after {\n//     color:red; \n//   }\n// `;\n\n// export const LinkTextToHome = styled.p`\n//   position: relative; \n//   transition: color 0.3s linear; \n\n//   &::after {\n//     content: '';\n//     position: absolute;\n//     left: 0;\n//     right: 0;\n//     bottom: 0px; \n//     height: 1px; \n//     background: ${color.gryeLight}; \n//     transition: background 0.3s linear; \n//   }\n\n//   &:hover,\n//   &:focus {\n//     color: ${color.whitePrimary};    \n//     &::after {\n//       background: ${color.whitePrimary};  \n//     }\n//   }\n// `;","import sprite from '../../img/sprite.svg';\nimport { ClosingSymbol, Conteiner, Img, Text, TextSpan, Title } from './ModalBooks.styled';\nimport like2x from '../../img/stackBooksAndLike/like-desc@2x.png';\nimport like from '../../img/stackBooksAndLike/like-desc.png';\nimport mobLike2x from '../../img/stackBooksAndLike/like-mob@2x.png';\nimport mobLike from '../../img/stackBooksAndLike/like-mob.png';\n\nexport default function ModalAddBookSuccessfully({ closeModals}) {\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n      <picture>\n        <source srcSet={`${mobLike} 1x, ${mobLike2x} 2x`} media=\"(max-width: 767px)\" />\n        <source srcSet={`${like} 1x, ${like2x} 2x`} media=\"(min-width: 766px)\" />    \n           \n        <Img src={like} alt=\"add book\" />\n      </picture>  \n      <Title>Good job</Title>\n      <Text>Your book is now in <TextSpan>the library!</TextSpan> The joy knows no bounds and now you can start your training</Text>\n    </Conteiner>\n  );\n}\n  ","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, CardAutor, CardImg, CardRecomended, CardTitle, Filters, StartWorkoutBlock, StartWorkoutTitle } from './LibraryDashoard.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBookData, selectOwnBooks } from '../../redux/books/selector';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { ErrorMessageStyled, FilterTitle, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTitlelTo, LinkTo, LinkToSvg } from 'components/Dashboard/Dashboard.styled';\nimport { addNewBook, fetchBooks, ownBooks } from '../../redux/books/operations';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport ModalAddBookSuccessfully from 'components/ModalBookWindow/ModalAddBookSuccessfully';\nimport { useEffect, useState } from 'react';\nimport DetailedInformationBook from 'components/DetailedInformationBook/DetailedInformationBook';\nimport { toast } from 'react-toastify';\n\nconst initialValues = {\n  title: '',\n  author: '',\n  page: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string().required('Required'),\n  author: Yup.string().required('Required'),\n  page: Yup.string().required('Required').matches(/^[0-9]+$/, 'Must be only digits')\n  .transform((value, originalValue) => originalValue.replace(/\\s/g, '')),\n});\n\nexport default function LibraryDashboard() {\n  const [openModal, setOpenModal] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false); \n  const [bookExists, setBookExists] = useState(false);\n  const results = useSelector(selectBookData);\n  const ownLibrary = useSelector(selectOwnBooks);\n  const dispatch = useDispatch();\n\n  useEffect(()=> {\n    dispatch(ownBooks())  \n    dispatch(fetchBooks({ page: 2, limit: 10  }))\n  }, [dispatch]);\n\n  const handleSubmit = (e, { resetForm }) => {  \n    const title= e.title\n    const author= e.author\n    const page= parseInt(e.page)\n\n    if(page) {\n      const bookExists = ownLibrary.find(item => item.title === title);\n\n      // Если find возвращает undefined, значит, книга не найдена в библиотеке, и мы можем добавить ее\n      if (bookExists === undefined) {\n        dispatch(addNewBook({ title, author, totalPages: page }));\n        setModalOpen(true);\n        setBookExists(false);\n        resetForm();\n      } else {\n        setBookExists(true);\n        toast.error('Книга уже есть в библиотеке.')\n      }\n    }\n    e.target.blur();\n  }\n\n  const openLoginModal = (book) => {\n    setOpenModal(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  \n  return (\n    <Dashboard>\n      <Filters>\n        <FilterTitle>Create your library:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({  errors, touched, resetForm  }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"I See You Are...\" error={errors.title && touched.title ? \"true\" : \"false\"  }  style={bookExists ? { borderColor: 'red' } : {}} />     \n                  <ErrorMessageStyled name=\"title\" component='div' />           \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Hilarion Pavlyuk\" paddindleft=\"95px\"  error={errors.author && touched.author ? \"true\" : \"false\" } />    \n                  <ErrorMessageStyled name=\"author\" component='div' />            \n                </FormFieldConteiner> \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"page\">Number of pages:</FormFieldLabel>\n                  <FormField id=\"page\" name=\"page\" type=\"page\" placeholder=\"664\" paddindleft=\"135px\" error={errors.page && touched.page ? \"true\" : \"false\" } />             \n                  <ErrorMessageStyled name=\"page\" component='div' />   \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"Add book\" />             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Recommended books</StartWorkoutTitle>\n        <Arguments >\n          {results?.slice(3, 6).map((book) => (\n            <CardRecomended key={book._id}>\n              <CardImg src={book.imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n              <CardTitle>{book.title}</CardTitle>\n              <CardAutor>{book.author}</CardAutor>\n            </CardRecomended>\n          ))}     \n        </Arguments>\n        <LinkTo to=\"/recommended\">\n          <LinkTitlelTo>Home </LinkTitlelTo>            \n          <LinkToSvg>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </LinkToSvg>          \n        </LinkTo>\n      </StartWorkoutBlock>\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <ModalAddBookSuccessfully  closeModals={() => setModalOpen()} />\n      </PortalModal>\n      <PortalModal active={openModal} setActive={setOpenModal}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setOpenModal()} btnLabel=\"Add to library\"/>\n      </PortalModal>\n    </Dashboard>\n  );\n}\n  ","import MyLibraryBooks from 'components/MyLibraryBooks/MyLibraryBooks';\nimport LibraryDashboard from \"components/LibraryDashoard/LibraryDashoard\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\n\nexport default function Library() {\n  return (\n    <UnivesalGeneralBlock >      \n      <LibraryDashboard />\n   \n      <MyLibraryBooks />\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Library from \"components/Library/Library.\";\n\nexport default function LibraryPage() {\n  return (\n    <Library />\n  );\n}\n  "],"names":["BookCard","styled","_templateObject","_taggedTemplateLiteral","BookImg","_templateObject2","color","BookDataBlock","_templateObject3","TitleAutorBlock","_templateObject4","_ref","page","BookTitle","_templateObject5","BookAutor","_templateObject6","DellBtn","_templateObject7","CardBook","book","openLoginModal","_ref$currentPage","currentPage","dispatch","useDispatch","imageUrl","Image","src","notFoundImg","window","devicePixelRatio","notFoundImg2x","_jsxs","children","_jsx","alt","onClick","title","author","deleteBook","_id","width","height","href","concat","sprite","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","btnLabel","navigate","useNavigate","ownLibrary","useSelector","selectOwnBooks","useEffect","ownBooks","totalPages","CustomButton","label","undefined","find","item","toast","addBookById","prop","Img","Title","Text","TextSpan","HeaderAndPaginationBlock","Dropdown","DropdownSvg","DropdownButton","DropdownList","props","open","DropdownItem","BooksTen","EmptyLibraryBlock","EmptyLibraryPicture","EmptyLibraryText","EmptyLibrarySpan","EmptyLibraryScreensaver","srcSet","imgBooksDesc2x","media","imgBooksDesc","options","MyLibraryBooks","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","isOpen","setIsOpen","_useState7","_useState8","selectedBooks","setSelectedBooks","selecctRef","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","UnivesalMainConteainer","MainBlockTitle","ref","map","value","e","length","Array","isArray","PortalModal","active","setActive","Filters","StartWorkoutBlock","StartWorkoutTitle","Arguments","CardRecomended","CardImg","CardTitle","CardAutor","_templateObject8","ModalAddBookSuccessfully","like","like2x","initialValues","schema","Yup","required","matches","transform","originalValue","replace","LibraryDashboard","openModal","setOpenModal","bookExists","setBookExists","results","selectBookData","fetchBooks","limit","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","resetForm","parseInt","addNewBook","blur","_ref2","errors","touched","Form","FormFields","FormFieldConteiner","FormFieldLabel","htmlFor","FormField","id","name","type","placeholder","error","style","borderColor","ErrorMessageStyled","component","paddindleft","slice","LinkTo","to","LinkTitlelTo","LinkToSvg","Library","UnivesalGeneralBlock","LibraryPage"],"sourceRoot":""}