{"version":3,"file":"static/js/406.70f8248a.chunk.js","mappings":"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","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/EmptyScreensaver/EmptyScreensaver.styled.js","components/EmptyScreensaver/EmptyScreensaver.jsx","components/Recomended/Recomended.styled.js","components/RecomendedDashboard/RecomendedDashboard.styled.js","components/RecomendedDashboard/RecomendedDashboard.jsx","components/Recomended/Recomended.jsx","pages/RecomendedPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n  background: transparent;\n  \n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n\n  border-radius: 8px; \n  margin-bottom: 8px;\n  background: ${color.gryeBlack};\n`\n\nexport const BookDataBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const TitleAutorBlock = styled.div`\n  max-width: ${({ page }) => ( page === 'true' ? '89px' : '137px')};\n  /* max-width: 89px; */\n`\n\nexport const BookTitle = styled.h3`\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n  white-space: nowrap;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const DellBtn = styled.button`\n  background: transparent;\n`","import { BookAutor, BookCard, BookDataBlock, BookImg, BookTitle, DellBtn, TitleAutorBlock } from \"./CardBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { deleteBook } from \"../../redux/books/operations\";\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function CardBook({book, openLoginModal, currentPage=false}) {\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    // console.log(book._id)\n    dispatch(deleteBook(book._id));\n  };\n\n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n  const imageUrl = book.imageUrl || getImageUrl();\n  return (\n    <BookCard>\n      <BookImg src={imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n      <BookDataBlock>\n        \n        <TitleAutorBlock page={currentPage === \"MyLibrary\" ? 'true' : '' }>\n          <BookTitle>{book.title}</BookTitle>\n          <BookAutor>{book.author}</BookAutor>\n        </TitleAutorBlock>\n        \n        {currentPage === \"MyLibrary\" && (\n          <DellBtn onClick={handleDeleteClick} >        \n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg> \n          </DellBtn>\n        )}\n\n      </BookDataBlock>\n    </BookCard>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 335px;\n  height: 100%;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 40px ;\n  @media (min-width: 768px) {\n    width: 500px;\n    height: 483px;\n    padding: 50px ;\n  }\n  @media (min-width: 1440px) {\n  }\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const CoverBook = styled.img`\n  width: 140px;\n  height: 213px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  @media (min-width: 768px) {\n    width: 153px;\n   height: 233px;\n  }\n`;\n\nexport const TitleBook = styled.h2`\n  text-align: center;\n  font-size: 18px;\n  line-height: 1;\n  margin-bottom: 2px;\n\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    max-width: 400px;\n      /* Ограничиваем текст одной строкой */\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const AuthorBook = styled.p`\n  font-size: 12px;\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    max-width: 400px;\n      /* Ограничиваем текст одной строкой */\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 20px;\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addBookById, ownBooks } from \"../../redux/books/operations\";\nimport { useNavigate } from 'react-router-dom';\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\nimport { useEffect } from \"react\";\nimport { selectOwnBooks } from \"../../redux/books/selector\";\nimport { toast } from \"react-toastify\";\n\nexport default function DetailedInformationBook({ closeModals, bookData, btnLabel }) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const ownLibrary = useSelector(selectOwnBooks);\n  \n  useEffect(()=> {\n    dispatch(ownBooks())    \n  }, [dispatch]);\n  \n  const handleButtonClick =  () => {  \n    if(btnLabel === \"Add to library\") {\n      const bookExists = ownLibrary.find(item => item.title === bookData.title);\n\n      // Если find возвращает undefined, значит, книга не найдена в библиотеке, и мы можем добавить ее\n      if (bookExists === undefined) {\n        toast.success(\"Книга не найдена в библиотеке. Добавляем...\")\n        dispatch(addBookById(bookData._id));\n      } else {\n        toast.error('Книга уже есть в библиотеке.')\n      }\n    };  \n\n    if(btnLabel === \"Start reading\") navigate(`/reading/${bookData._id}`);\n\n    closeModals();\n  }; \n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n\n  const imageUrl = bookData.imageUrl || getImageUrl();\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <CoverBook src={imageUrl} alt=\"cover\" />\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label={btnLabel} onClick={handleButtonClick} prop=\"true\"/>\n    </Conteiner>\n  );\n}\n  ","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const EmptyScreensaverBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-top: 63px;\n  margin: 63px 0;\n  @media (min-width: 768px) {\n    margin: 86px 0 120px 0;\n  }\n  @media (min-width: 1440px) {\n    margin: 147px  0 0;\n  }\n`\nexport const EmptyScreensaverPicture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin-bottom: 10px;\n  @media (min-width: 768px) {\n    width: 130px;\n    height: 130px;\n    margin-bottom: 20px;\n  }\n`\nexport const Img = styled.img`\n  width: 50px;\n  \n  @media (min-width: 768px) {\n    width: 70px;\n  }\n`\n\nexport const EmptyScreensaverText = styled.p`\n  text-align: center;\n  width: 274px;  \n`\n\nexport const EmptyScreensaverSpan = styled.span`\n  color: ${color.gryeLight};\n`","import imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport imgBooksMob from '../../img/stackBooksAndLike/books-mob.png';\nimport imgBooksMob2x from '../../img/stackBooksAndLike/books-mob@2x.png';\nimport { EmptyScreensaverBlock, EmptyScreensaverPicture, EmptyScreensaverSpan, EmptyScreensaverText, Img } from './EmptyScreensaver.styled';\n\nexport default function EmptyScreensaver({purt}) {\n  return (\n    <EmptyScreensaverBlock>\n      <EmptyScreensaverPicture>\n        <source srcSet={`${imgBooksMob} 1x, ${imgBooksMob2x} 2x`} media=\"(max-width: 767px)\" />\n        <source srcSet={`${imgBooksDesc} 1x, ${imgBooksDesc2x} 2x`} media=\"(min-width: 766px)\" />\n        <Img src={imgBooksDesc} alt=\"stack books\" />\n      </EmptyScreensaverPicture> \n\n       {purt===\"Recomended\" && <EmptyScreensaverText>Oops <EmptyScreensaverSpan>unfortunately</EmptyScreensaverSpan> nothing was found</EmptyScreensaverText>}\n      {purt === \"MyLibraryBooks\" && <EmptyScreensaverText>To start training, add <EmptyScreensaverSpan>some of your books</EmptyScreensaverSpan> or from the recommended ones</EmptyScreensaverText>}\n    </EmptyScreensaverBlock>\n  );\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n  @media (min-width: 768px) {\n    margin-bottom: 20px;\n  }\n`\n\nexport const PaginationBtn = styled.button`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  background: transparent;\n  border-radius: 50%; \n  border: 1px solid ${color.whiteLightTranslucent};\n\n  &:last-child {\n    margin-right: 0; \n  }\n\n  @media (min-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n  @media (min-width: 1440px) {\n \n  }\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${(props) => (props.stoke === \"true\" ? color.whiteLightTranslucent : color.whitePrimary)};\n  @media (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`\n\n///////////////////////////////////////////////////////////////////////////\nexport const BooksTen = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n`","import color from 'common/GlobalColers'\n// import { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n    @media (min-width: 768px) {\n    margin-bottom: 0px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 20px;\n  }\n`\n\nexport const FilterTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n`\n\nexport const ButtonConteiner = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StartWorkoutBlock = styled.div`\n  width: 295px;\n  height: 244px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n  padding: 20px;\n\n  @media (min-width: 768px) {\n    width: 313px;\n    height: 272px;\n  }\n  @media (min-width: 1440px) {\n  margin-bottom: 20px;\n  }\n`\nexport const StartWorkoutTitle = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 40px;\n  }\n  @media (min-width: 1440px) {\n  }\n`\nexport const ArgumentsBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  \n  margin-bottom: 20px;\n  @media (min-width: 768px) {\n    margin-bottom: 26px;\n  }\n`\nexport const Arguments = styled.div`\n  display: flex;\n  gap: 12px;\n`\nexport const SeriaNumber = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  font-size: 18px;\n  font-weight: 700;  \n  color: ${color.blackLight};\n  background: ${color.whitePrimary};  \n  @media (min-width: 768px) {\n    width: 44px;\n    height: 44px;\n    font-size: 20px;\n  }\n`\nexport const TextOne = styled.p`\n  width: 190px;  \n`\nexport const TextTwo = styled.p`\n  width: 200px;  \n`\n\nexport const TextSpan = styled.span`\n color: ${color.gryeLight};  \n`\n\n// export const LinkToLibrary = styled(NavLink)`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   color: ${color.gryeLight};   \n  \n//   &:hover::after,\n//   &:focus::after {\n//     color:red; \n//   }\n// `;\n// export const LinkTextToLibrary = styled.p`\n//   position: relative; \n//   transition: color 0.3s linear; \n\n//   &::after {\n//     content: '';\n//     position: absolute;\n//     left: 0;\n//     right: 0;\n//     bottom: 0px; \n//     height: 1px; \n//     background: ${color.gryeLight}; \n//     transition: background 0.3s linear; \n//   }\n//   &:hover,\n//   &:focus {\n//     color: ${color.whitePrimary};\n    \n//     &::after {\n//       background: ${color.whitePrimary};  \n//     }\n//   }\n// `;\n\nexport const QuoteBlock = styled.div`\n  display: none;\n\n  @media (min-width: 768px) {  \n  }\n  @media (min-width: 1440px) {\n    display: flex;\n    align-items: center;\n    gap: 14px;\n    width: 313px;\n    height: 83px;\n    border-radius: 12px;\n\n    background: ${color.gryeBlack};\n    padding: 14px 20PX;\n  }\n`\nexport const Quote = styled.p`\n  width: 219px;\n  color: ${color.gryeLight}; \n`\n\nexport const QuoteSpan = styled.span`  \n  color: ${color.whitePrimary}; \n`","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, ArgumentsBlock, ButtonConteiner, Filters, Quote, QuoteBlock, QuoteSpan, SeriaNumber, StartWorkoutBlock, StartWorkoutTitle, TextOne, TextSpan, TextTwo } from './RecomendedDashboard.styled';\nimport imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTitlelTo, LinkTo, LinkToSvg } from 'components/Dashboard/Dashboard.styled';\nimport { fetchBooks } from '../../redux/books/operations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nconst initialValues = {\n  title: '',\n  author: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string(),\n  author: Yup.string(),\n});\n\nexport default function RecomendedDashboard() {\n  const [isRestButtonVisible, setIsRestButtonVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {  \n    const { title, author } = e;\n    if(title === undefined) return;\n    if(title) {\n      setIsRestButtonVisible(true);\n      dispatch(fetchBooks({ title, author  }))\n    } else{\n      toast.warn('Please fill out the form')\n    }\n \n    e.target.blur();\n  }\n\n  const handleReset = (resetForm) => {\n    setIsRestButtonVisible(false);\n    resetForm();\n    dispatch(fetchBooks({ page: 1, limit: 10  }))\n  };\n  return (\n    <Dashboard>      \n      <Filters>\n        <FilterTitle>Filters:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ resetForm }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"Enter text\" />                \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Enter text\" paddindleft=\"95px\" />                \n                </FormFieldConteiner>            \n              </FormFields>  \n              <ButtonConteiner>\n                <CustomButton label=\"To apply\" onClick={handleSubmit} />\n                {isRestButtonVisible && (\n                  <CustomButton label=\"Rest\" onClick={() => handleReset(resetForm)}/>\n                )}\n              </ButtonConteiner>                             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Start your workout</StartWorkoutTitle>\n        <ArgumentsBlock>\n        <Arguments>\n          <SeriaNumber>1</SeriaNumber>\n          <TextOne>Create a personal library: <TextSpan>add the books you intend to read to it.</TextSpan></TextOne>\n        </Arguments>\n        <Arguments>\n          <SeriaNumber>2</SeriaNumber>\n          <TextTwo>Create your first workout: <TextSpan>define a goal, choose a period, start training.</TextSpan></TextTwo>\n        </Arguments>\n        </ArgumentsBlock>\n\n        <LinkTo to=\"/library\">\n          <LinkTitlelTo>My library </LinkTitlelTo>            \n          <LinkToSvg>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </LinkToSvg>          \n        </LinkTo>\n      </StartWorkoutBlock>\n\n      <QuoteBlock>        \n      <picture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={40} />\n      </picture>          \n        <Quote>\"Books are <QuoteSpan>windows</QuoteSpan> to the world, and reading is a journey into the unknown.\"</Quote>\n      </QuoteBlock>\n    </Dashboard>\n  );\n}  ","import { BooksTen, HeaderAndPaginationBlock, PaginationBtn,PaginationSvg} from \"./Recomended.styled\"\nimport sprite from '../../img/sprite.svg';\nimport RecomendedDashboard from \"components/RecomendedDashboard/RecomendedDashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchBooks } from \"../../redux/books/operations\";\nimport { selectBookData, selectTotalPage } from \"../../redux/books/selector\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport DetailedInformationBook from \"components/DetailedInformationBook/DetailedInformationBook\";\nimport CardBook from \"components/CardBook/CardBook\";\nimport UnivesalMainConteainer from \"components/UniversalMainContainer/UniversalMainContainer\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\nimport { MainBlockTitle } from \"components/UniversalMainContainer/UniversalMainContainer.styled\";\nimport EmptyScreensaver from \"components/EmptyScreensaver/EmptyScreensaver\";\n\nconst calculateLimit = (width) => {\n  if (width < 768) {\n    return 2;\n  } else if (width >= 768 && width < 1440) {\n    return 8;\n  } else {\n    return 10;\n  }\n};\n\nexport default function Recomended() {\n  const dispatch = useDispatch();\n  const results = useSelector(selectBookData)\n  const totalPages = useSelector(selectTotalPage);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false); \n  const [page, setPage] = useState(1);\n  \n  const [limit, setLimit] = useState(calculateLimit(window.innerWidth));\n\n  useEffect(() => {\n    const handleResize = () => {\n      const newWidth = window.innerWidth;\n      const newLimit = calculateLimit(newWidth);\n      setLimit(newLimit); \n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchBooks({ page, limit }));\n  }, [dispatch, page, limit]);\n  \n\n  const handlePageChange = (newPage) => { \n    if (newPage >= 1 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n  \n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  return (\n    <UnivesalGeneralBlock >      \n      <RecomendedDashboard />      \n\n      <UnivesalMainConteainer >\n        <HeaderAndPaginationBlock>\n          <MainBlockTitle>Recommended</MainBlockTitle>\n          <div>\n            <PaginationBtn onClick={() => handlePageChange(page - 1)} >\n              <PaginationSvg stoke={page === 1 ? \"true\" : ''}>\n                <use href={`${sprite}#icon-chevron-left`} />\n              </PaginationSvg>\n            </PaginationBtn>\n            <PaginationBtn onClick={() => handlePageChange(page + 1)}>\n              <PaginationSvg stoke={page === totalPages ? \"true\" : ''} >\n                <use href={`${sprite}#icon-chevron-right`} />\n              </PaginationSvg>\n            </PaginationBtn>\n          </div>\n        </HeaderAndPaginationBlock>\n\n        <BooksTen>\n          {results?.map((book) => (\n            <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} />\n          ))}\n        </BooksTen>  \n        <EmptyScreensaver purt=\"Recomended\" />\n      </UnivesalMainConteainer>\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Add to library\"/>\n      </PortalModal>\n    </UnivesalGeneralBlock>\n  );\n}  ","import Recomended from \"components/Recomended/Recomended\";\n\nexport default function RecomendedPage() {\n  return (\n    <Recomended />\n  );\n}\n  "],"names":["BookCard","styled","_templateObject","_taggedTemplateLiteral","BookImg","_templateObject2","color","BookDataBlock","_templateObject3","TitleAutorBlock","_templateObject4","_ref","page","BookTitle","_templateObject5","BookAutor","_templateObject6","DellBtn","_templateObject7","CardBook","book","openLoginModal","_ref$currentPage","currentPage","dispatch","useDispatch","imageUrl","Image","src","notFoundImg","window","devicePixelRatio","notFoundImg2x","_jsxs","children","_jsx","alt","onClick","title","author","deleteBook","_id","width","height","href","concat","sprite","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","btnLabel","navigate","useNavigate","ownLibrary","useSelector","selectOwnBooks","useEffect","ownBooks","totalPages","CustomButton","label","undefined","find","item","toast","addBookById","prop","EmptyScreensaverBlock","EmptyScreensaverPicture","Img","EmptyScreensaverText","EmptyScreensaverSpan","EmptyScreensaver","purt","srcSet","imgBooksMob","imgBooksMob2x","media","imgBooksDesc","imgBooksDesc2x","HeaderAndPaginationBlock","PaginationBtn","PaginationSvg","props","stoke","BooksTen","Filters","ButtonConteiner","StartWorkoutBlock","StartWorkoutTitle","ArgumentsBlock","Arguments","SeriaNumber","_templateObject8","TextOne","_templateObject9","TextTwo","_templateObject10","TextSpan","_templateObject11","QuoteBlock","_templateObject12","Quote","_templateObject13","QuoteSpan","_templateObject14","initialValues","schema","Yup","RecomendedDashboard","_useState","useState","_useState2","_slicedToArray","isRestButtonVisible","setIsRestButtonVisible","handleSubmit","e","fetchBooks","target","blur","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","resetForm","Form","FormFields","FormFieldConteiner","FormFieldLabel","htmlFor","FormField","id","name","type","placeholder","paddindleft","limit","handleReset","LinkTo","to","LinkTitlelTo","LinkToSvg","calculateLimit","Recomended","results","selectBookData","selectTotalPage","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","setPage","_useState7","innerWidth","_useState8","setLimit","handleResize","newWidth","newLimit","addEventListener","removeEventListener","handlePageChange","newPage","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlockTitle","map","PortalModal","active","setActive","RecomendedPage"],"sourceRoot":""}