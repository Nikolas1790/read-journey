{"version":3,"file":"static/js/609.a3a5787e.chunk.js","mappings":"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","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/EmptyScreensaver/EmptyScreensaver.styled.js","components/EmptyScreensaver/EmptyScreensaver.jsx","components/ModalBookWindow/ModalBooks.styled.js","components/MyLibraryBooks/MyLibraryBooks.styled.js","components/DropdownComponent/DropdownComponent.styled.js","components/DropdownComponent/DropdownComponent.jsx","components/MyLibraryBooks/MyLibraryBooks.jsx","components/ModalBookWindow/ModalAddBookSuccessfully.jsx","components/RecommendedBooks/RecommendedBooks.styled.js","components/RecommendedBooks/RecommendedBooks.jsx","components/LibraryDashoard/LibraryDashoard.jsx","components/Library/Library..jsx","pages/LibraryPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n  background: transparent;\n  \n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n  border-radius: 8px; \n  margin-bottom: 8px;\n  background: ${color.gryeBlack};\n  cursor: pointer;\n`\n\nexport const BookDataBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const TitleAutorBlock = styled.div`\n  max-width: ${({ page }) => ( page === 'true' ? '89px' : '137px')};\n`\n\nexport const BookTitle = styled.h3`\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n  white-space: nowrap;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const DellBtn = styled.button`\n  background: transparent;\n  transition: transform 0.25s linear; \n\n&:hover,\n&:focus {\n  transform: scale(1.1);\n}\n`","import { BookAutor, BookCard, BookDataBlock, BookImg, BookTitle, DellBtn, TitleAutorBlock } from \"./CardBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { deleteBook } from \"../../redux/books/operations\";\nimport notFoundImgMobile2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImgMobile from '../../img/notFoundImg/open-book.jpg';\nimport notFoundImg2x from '../../img/notFoundImg/open-book-desct@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book-desct.jpg';\n\nexport default function CardBook({book, openLoginModal, currentPage=false}) {\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    dispatch(deleteBook(book._id));\n  };\n\n  return (\n    <BookCard>      \n      {book.imageUrl ? (\n        <BookImg src={book.imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n      ) : (\n        <picture>\n          <source srcSet={`${notFoundImgMobile} 1x, ${notFoundImgMobile2x} 2x`} media=\"(max-width: 767px)\" />\n          <source srcSet={`${notFoundImg} 1x, ${notFoundImg2x} 2x`} media=\"(min-width: 768px)\" />\n          <BookImg src={notFoundImg} alt=\"book title\" onClick={() => openLoginModal(book)} /> \n        </picture>\n      )}\n      <BookDataBlock>        \n        <TitleAutorBlock page={currentPage === \"MyLibrary\" ? 'true' : '' }>\n          <BookTitle>{book.title}</BookTitle>\n          <BookAutor>{book.author}</BookAutor>\n        </TitleAutorBlock>\n        \n        {currentPage === \"MyLibrary\" && (\n          <DellBtn onClick={handleDeleteClick} >        \n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg> \n          </DellBtn>\n        )}\n      </BookDataBlock>\n    </BookCard>\n  );\n}  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 335px;\n  height: 100%;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 40px ;\n\n  @media (min-width: 768px) {\n    width: 500px;\n    height: 483px;\n    padding: 50px ;\n  }\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n  transition: transform 0.25s linear; \n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const CoverBook = styled.img`\n  width: 140px;\n  height: 213px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n\n  @media (min-width: 768px) {\n    width: 153px;\n   height: 233px;\n  }\n`;\n\nexport const TitleBook = styled.h2`\n  text-align: center;\n  font-size: 18px;\n  line-height: 1;\n  margin-bottom: 2px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    max-width: 400px;\n    \n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const AuthorBook = styled.p`\n  font-size: 12px;\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    max-width: 400px;\n    \n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 20px;\n  \n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addBookById, ownBooks } from \"../../redux/books/operations\";\nimport { useNavigate } from 'react-router-dom';\nimport notFoundImgMobile2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImgMobile from '../../img/notFoundImg/open-book.jpg';\nimport notFoundImg2x from '../../img/notFoundImg/open-book-desct@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book-desct.jpg';\nimport { useEffect } from \"react\";\nimport { selectOwnBooks } from \"../../redux/books/selector\";\nimport { toast } from \"react-toastify\";\n\nexport default function DetailedInformationBook({ closeModals, bookData, btnLabel }) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const ownLibrary = useSelector(selectOwnBooks);\n  \n  useEffect(()=> {\n    dispatch(ownBooks())    \n  }, [dispatch]);\n  \n  const handleButtonClick =  () => {  \n    if(btnLabel === \"Add to library\") {\n      const bookExists = ownLibrary.find(item => item.title === bookData.title);\n\n      if (bookExists === undefined) {\n        toast.success(\"The book was added successfully\")\n        dispatch(addBookById(bookData._id));\n      } else {\n        toast.error('The book is already in the library.')\n      }\n    };  \n\n    if(btnLabel === \"Start reading\") navigate(`/reading/${bookData._id}`);\n\n    closeModals();\n  }; \n\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      {bookData.imageUrl ? (\n        <CoverBook src={bookData.imageUrl} alt=\"cover\" />\n      ) : (\n        <picture>\n          <source srcSet={`${notFoundImgMobile} 1x, ${notFoundImgMobile2x} 2x`} media=\"(max-width: 767px)\" />\n          <source srcSet={`${notFoundImg} 1x, ${notFoundImg2x} 2x`} media=\"(min-width: 768px)\" />\n          <CoverBook src={notFoundImg} alt=\"cover fallback\" />\n        </picture>\n      )}\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label={btnLabel} onClick={handleButtonClick} prop=\"true\"/>\n    </Conteiner>\n  );\n}  ","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const EmptyScreensaverBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-top: 63px;\n  margin: 63px 0;\n\n  @media (min-width: 768px) {\n    margin: 86px 0 120px 0;\n  }\n  @media (min-width: 1440px) {\n    margin: 147px  0 0;\n  }\n`\nexport const EmptyScreensaverPicture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin-bottom: 10px;\n  \n  @media (min-width: 768px) {\n    width: 130px;\n    height: 130px;\n    margin-bottom: 20px;\n  }\n`\nexport const Img = styled.img`\n  width: 50px;\n  \n  @media (min-width: 768px) {\n    width: 70px;\n  }\n`\n\nexport const EmptyScreensaverText = styled.p`\n  text-align: center;\n  width: 274px;  \n`\n\nexport const EmptyScreensaverSpan = styled.span`\n  color: ${color.gryeLight};\n`","import imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport imgBooksMob from '../../img/stackBooksAndLike/books-mob.png';\nimport imgBooksMob2x from '../../img/stackBooksAndLike/books-mob@2x.png';\nimport { EmptyScreensaverBlock, EmptyScreensaverPicture, EmptyScreensaverSpan, EmptyScreensaverText, Img } from './EmptyScreensaver.styled';\n\nexport default function EmptyScreensaver({purt}) {\n  return (\n    <EmptyScreensaverBlock>\n      <EmptyScreensaverPicture>\n        <source srcSet={`${imgBooksMob} 1x, ${imgBooksMob2x} 2x`} media=\"(max-width: 767px)\" />\n        <source srcSet={`${imgBooksDesc} 1x, ${imgBooksDesc2x} 2x`} media=\"(min-width: 766px)\" />\n        <Img src={imgBooksDesc} alt=\"stack books\" />\n      </EmptyScreensaverPicture> \n\n      {purt===\"Recomended\" && <EmptyScreensaverText>Oops <EmptyScreensaverSpan>unfortunately</EmptyScreensaverSpan> nothing was found</EmptyScreensaverText>}\n      {purt === \"MyLibraryBooks\" && <EmptyScreensaverText>To start training, add <EmptyScreensaverSpan>some of your books</EmptyScreensaverSpan> or from the recommended ones</EmptyScreensaverText>}\n    </EmptyScreensaverBlock>\n  );\n}","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 342px;\n  height: 290px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 60px 46px;\n  \n  @media (min-width: 768px) {\n    padding: 49px ;\n  }\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n  transition: transform 0.25s linear; \n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media (min-width: 768px) {\n    right: 16px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 50px;\n  height: 50px; \n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    width: 68px;\n    height: 70px; \n    margin-bottom: 32px;\n  }\n`\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 14px;\n  }\n`\nexport const Text = styled.p`\n  text-align: center;\n  color: ${color.gryeLight};\n`\nexport const TextSpan = styled.span`  \n  color: ${color.whitePrimary};\n`","import styled from 'styled-components'\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nexport const BooksTen = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n\n  height: 260px;\n  overflow: hidden;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media (min-width: 768px) {    \n    height: 523px;\n  }\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n\nexport const Dropdown = styled.div`\n  position: relative;\n`;\n\nexport const DropdownSvg = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n`;\n\nexport const DropdownButton = styled.button`\n  display: flex;\n  width: 120px;\n  height: 40px;\n  border-radius: 12px; \n  border: 1px solid ${color.charcoalGray};\n  outline: none;\n  cursor: pointer;\n  font-size: 12px;\n  background: transparent;\n  padding: 12px 14px;\n\n  @media (min-width: 768px) {\n    width: 153px;\n    height: 46px;\n    padding: 14px;\n    font-size: 14px;\n  }\n`\nexport const DropdownList = styled.ul`\n  position: absolute;\n  z-index: 1;\n  top: 120%; \n  left: 0;\n  color: ${color.gryeLight};\n  background-color: ${color.gryeBlack};\n  border-top: none;\n  display: none;\n\n  list-style: none;\n  padding: 14px;\n  margin: 0;\n\n  width: 100%;\n  border-radius: 12px;\n  display: ${(props) => (props.open ? 'block' : 'none')};\n`;\n\nexport const DropdownItem = styled.li`\n  cursor: pointer;  \n  font-size: 12px;\n  \n  &:not(:last-child) {\n    margin-bottom: 7px;\n  }\n  &:hover {\n    color: ${color.whitePrimary};\n  }\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n`;","import { useEffect, useRef } from 'react';\nimport sprite from '../../img/sprite.svg';\nimport { Dropdown, DropdownButton, DropdownItem, DropdownList, DropdownSvg } from './DropdownComponent.styled';\n\nconst options = [\"Unread\", \"In progress\", \"Done\", \"All books\" ]\n\nexport default function DropdownComponent({ selectedBooks, handleSelectedBooks, isOpen, setIsOpen }) {\n  const selecctRef = useRef(null);\n  useEffect(() => {    \n    const handleClickOutside = (event) => {\n        if (selecctRef.current && !selecctRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n        document.removeEventListener('click', handleClickOutside);\n    };\n  }, [setIsOpen]);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n\n  return (\n    <Dropdown onClick={toggleDropdown} ref={selecctRef}>\n      <DropdownSvg width={16} height={16}>\n        <use href={`${sprite}#icon-chevron-${isOpen ? 'upp' : 'down'}`} />\n      </DropdownSvg>\n      <DropdownButton >{selectedBooks || \"All books\"}</DropdownButton>\n      <DropdownList open={isOpen}>\n        {options.map((book) => (\n          <DropdownItem key={book} value={book} onClick={() => handleSelectedBooks(book)}>\n            {book}\n          </DropdownItem>\n        ))}\n      </DropdownList>                   \n    </Dropdown>       \n  );\n}  ","import { useEffect, useState } from \"react\";\nimport { BooksTen, HeaderAndPaginationBlock } from './MyLibraryBooks.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ownBooks } from '../../redux/books/operations';\nimport { selectOwnBooks } from '../../redux/books/selector';\nimport CardBook from 'components/CardBook/CardBook';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport DetailedInformationBook from 'components/DetailedInformationBook/DetailedInformationBook';\nimport UnivesalMainConteainer from 'components/UniversalMainContainer/UniversalMainContainer';\nimport { MainBlockTitle } from 'components/UniversalMainContainer/UniversalMainContainer.styled';\nimport EmptyScreensaver from 'components/EmptyScreensaver/EmptyScreensaver';\nimport DropdownComponent from 'components/DropdownComponent/DropdownComponent';\n\nexport default function MyLibraryBooks() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const ownLibrary = useSelector(selectOwnBooks);\n  const [selectedBooks, setSelectedBooks] = useState(\"\");\n\n  const dispatch = useDispatch();\n  useEffect(()=> {\n    dispatch(ownBooks())    \n  }, [dispatch]);\n\n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); \n  };\n\n  const handleSelectedBooks = (e) => {\n    setSelectedBooks(e);\n    if(e === \"Done\") dispatch(ownBooks(\"done\"))\n    if(e === \"In progress\") dispatch(ownBooks(\"in-progress\"))\n    if(e === \"All books\") dispatch(ownBooks())\n    if(e === \"Unread\") dispatch(ownBooks(\"unread\"))\n  };\n\n  return (\n    <UnivesalMainConteainer>\n      <HeaderAndPaginationBlock>\n        <MainBlockTitle>My library</MainBlockTitle>\n        <DropdownComponent selectedBooks={selectedBooks} handleSelectedBooks={handleSelectedBooks} isOpen={isOpen} setIsOpen={setIsOpen} />\n      </HeaderAndPaginationBlock>\n\n      {ownLibrary.length === 0 ? ( \n        <EmptyScreensaver purt=\"MyLibraryBooks\" />\n      ) : (\n        <BooksTen>\n          {Array.isArray(ownLibrary) && ownLibrary.map((book) => (  \n            <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} currentPage=\"MyLibrary\"  />\n          ))}\n        </BooksTen> \n      )}\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Start reading\" />\n      </PortalModal>\n    </UnivesalMainConteainer>\n  );\n}  ","import sprite from '../../img/sprite.svg';\nimport { ClosingSymbol, Conteiner, Img, Text, TextSpan, Title } from './ModalBooks.styled';\nimport like2x from '../../img/stackBooksAndLike/like-desc@2x.png';\nimport like from '../../img/stackBooksAndLike/like-desc.png';\nimport mobLike2x from '../../img/stackBooksAndLike/like-mob@2x.png';\nimport mobLike from '../../img/stackBooksAndLike/like-mob.png';\n\nexport default function ModalAddBookSuccessfully({ closeModals}) {\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n      <picture>\n        <source srcSet={`${mobLike} 1x, ${mobLike2x} 2x`} media=\"(max-width: 767px)\" />\n        <source srcSet={`${like} 1x, ${like2x} 2x`} media=\"(min-width: 766px)\" />    \n           \n        <Img src={like} alt=\"add book\" />\n      </picture>  \n      <Title>Good job</Title>\n      <Text>Your book is now in <TextSpan>the library!</TextSpan> The joy knows no bounds and now you can start your training</Text>\n    </Conteiner>\n  );\n}\n  ","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const Filters = styled.div`  \n`\nexport const StartWorkoutBlock = styled.div`\n  width: 100%;\n  max-width: 295px;\n  height: 244px;\n  border-radius: 12px;\n  background: ${color.gryeBlack};\n  padding: 20px;\n  margin-top: 20px;\n\n  @media (min-width: 768px) {\n    max-width: 313px;\n    height: 272px;\n    padding: 26px 20px;\n    margin-top: 0px;\n  }\n  @media (min-width: 1440px) {\n    height: 259px;\n    padding: 20px;\n    \n  }\n`\nexport const StartWorkoutTitle = styled.h4`\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n` \n\nexport const Arguments = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n\n  @media (max-width: 385px) {\n    gap: 4px; \n  }\n`\nexport const CardRecomended = styled.li`\n  width: 71px;\n  height: 141px;  \n`\n\nexport const CardImg = styled.img`\n  width: 71px;\n  height: 107px;\n  border-radius: 8px;  \n  margin-bottom: 8px;\n  cursor: pointer;\n`\n\nexport const CardTitle = styled.h4`\n  font-size: 10px;\n  font-weight: 700;\n  margin-bottom: 2px;\n  \n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const CardAutor = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`","import sprite from '../../img/sprite.svg';\nimport { Arguments, CardAutor, CardImg, CardRecomended, CardTitle, StartWorkoutBlock, StartWorkoutTitle } from './RecommendedBooks.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBookData } from '../../redux/books/selector';\nimport {  LinkTitlelTo, LinkTo, LinkToSvg } from 'components/Dashboard/Dashboard.styled';\nimport { fetchBooks } from '../../redux/books/operations';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport { useEffect, useState } from 'react';\nimport DetailedInformationBook from 'components/DetailedInformationBook/DetailedInformationBook';\n\nexport default function RecommendedBooks() {\n  const [openModal, setOpenModal] = useState(false);\n  const [bookData, setBookData] = useState(false); \n  const results = useSelector(selectBookData);\n  const dispatch = useDispatch();\n\n  useEffect(()=> {\n    dispatch(fetchBooks({ page: 1, limit: 10  }))\n  }, [dispatch]);\n\n  const openLoginModal = (book) => {\n    setOpenModal(true);\n    setBookData(book); \n  };\n  \n  return (\n    <div>\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Recommended books</StartWorkoutTitle>\n        <Arguments >\n          {results?.slice(3, 6).map((book) => (\n            <CardRecomended key={book._id}>\n              <CardImg src={book.imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n              <CardTitle>{book.title}</CardTitle>\n              <CardAutor>{book.author}</CardAutor>\n            </CardRecomended>\n          ))}     \n        </Arguments>\n        <LinkTo to=\"/recommended\">\n          <LinkTitlelTo>Home </LinkTitlelTo>            \n          <LinkToSvg>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </LinkToSvg>          \n        </LinkTo>\n      </StartWorkoutBlock>\n\n      <PortalModal active={openModal} setActive={setOpenModal}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setOpenModal()} btnLabel=\"Add to library\"/>\n      </PortalModal>\n    </div>\n  );\n}  ","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectOwnBooks } from '../../redux/books/selector';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { ErrorMessageStyled, FilterTitle, FormField, FormFieldConteiner, FormFieldLabel, FormFields } from 'components/Dashboard/Dashboard.styled';\nimport { addNewBook, ownBooks } from '../../redux/books/operations';\nimport PortalModal from 'components/PortalModal/PortalModal';\nimport ModalAddBookSuccessfully from 'components/ModalBookWindow/ModalAddBookSuccessfully';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport RecommendedBooks from 'components/RecommendedBooks/RecommendedBooks';\n\nconst initialValues = {\n  title: '',\n  author: '',\n  page: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string().required('Required'),\n  author: Yup.string().required('Required'),\n  page: Yup.string().required('Required').matches(/^[0-9]+$/, 'Must be only digits')\n  .transform((value, originalValue) => originalValue.replace(/\\s/g, '')),\n});\n\nexport default function LibraryDashboard() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookExists, setBookExists] = useState(false);\n  const ownLibrary = useSelector(selectOwnBooks);\n  const dispatch = useDispatch();\n\n  useEffect(()=> {\n    dispatch(ownBooks())  \n  }, [dispatch]);\n\n  const handleSubmit = (e, { resetForm }) => {  \n    const title= e.title\n    const author= e.author\n    const page= parseInt(e.page)\n\n    if(page) {\n      const bookExists = ownLibrary.find(item => item.title === title);\n\n      if (bookExists === undefined) {\n        dispatch(addNewBook({ title, author, totalPages: page }));\n        setModalOpen(true);\n        setBookExists(false);\n        resetForm();\n      } else {\n        setBookExists(true);\n        toast.error('Книга уже есть в библиотеке.')\n      }\n    }\n    e.target.blur();\n  }\n  \n  return (\n    <Dashboard>\n      <div>\n        <FilterTitle>Create your library:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({  errors, touched, resetForm  }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"I See You Are...\" error={errors.title && touched.title ? \"true\" : \"false\"  }  style={bookExists ? { borderColor: 'red' } : {}} />     \n                  <ErrorMessageStyled name=\"title\" component='div' />           \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Hilarion Pavlyuk\" paddindleft=\"95px\"  error={errors.author && touched.author ? \"true\" : \"false\" } />    \n                  <ErrorMessageStyled name=\"author\" component='div' />            \n                </FormFieldConteiner> \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"page\">Number of pages:</FormFieldLabel>\n                  <FormField id=\"page\" name=\"page\" type=\"page\" placeholder=\"664\" paddindleft=\"135px\" error={errors.page && touched.page ? \"true\" : \"false\" } />             \n                  <ErrorMessageStyled name=\"page\" component='div' />   \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"Add book\" />             \n            </Form>\n          )}\n        </Formik>\n      </div>\n\n      <RecommendedBooks />\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <ModalAddBookSuccessfully  closeModals={() => setModalOpen()} />\n      </PortalModal>\n    </Dashboard>\n  );\n}  ","import MyLibraryBooks from 'components/MyLibraryBooks/MyLibraryBooks';\nimport LibraryDashboard from \"components/LibraryDashoard/LibraryDashoard\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\n\nexport default function Library() {\n  return (\n    <UnivesalGeneralBlock >      \n      <LibraryDashboard />\n   \n      <MyLibraryBooks />\n    </UnivesalGeneralBlock>\n  );\n}  ","import Library from \"components/Library/Library.\";\n\nexport default function LibraryPage() {\n  return (\n    <Library />\n  );\n}  "],"names":["BookCard","styled","_templateObject","_taggedTemplateLiteral","BookImg","_templateObject2","color","BookDataBlock","_templateObject3","TitleAutorBlock","_templateObject4","_ref","page","BookTitle","_templateObject5","BookAutor","_templateObject6","DellBtn","_templateObject7","CardBook","book","openLoginModal","_ref$currentPage","currentPage","dispatch","useDispatch","_jsxs","children","imageUrl","_jsx","src","alt","onClick","srcSet","concat","notFoundImgMobile","notFoundImgMobile2x","media","notFoundImg","notFoundImg2x","title","author","deleteBook","_id","width","height","href","sprite","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","btnLabel","navigate","useNavigate","ownLibrary","useSelector","selectOwnBooks","useEffect","ownBooks","totalPages","CustomButton","label","undefined","find","item","toast","addBookById","prop","EmptyScreensaverBlock","EmptyScreensaverPicture","Img","EmptyScreensaverText","EmptyScreensaverSpan","EmptyScreensaver","purt","imgBooksMob","imgBooksMob2x","imgBooksDesc","imgBooksDesc2x","Title","Text","TextSpan","HeaderAndPaginationBlock","BooksTen","Dropdown","DropdownSvg","DropdownButton","DropdownList","props","open","DropdownItem","options","DropdownComponent","selectedBooks","handleSelectedBooks","isOpen","setIsOpen","selecctRef","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","map","value","MyLibraryBooks","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","_useState7","_useState8","setSelectedBooks","UnivesalMainConteainer","MainBlockTitle","e","length","Array","isArray","PortalModal","active","setActive","ModalAddBookSuccessfully","like","like2x","StartWorkoutBlock","StartWorkoutTitle","Arguments","CardRecomended","CardImg","CardTitle","CardAutor","_templateObject8","RecommendedBooks","openModal","setOpenModal","results","selectBookData","fetchBooks","limit","slice","LinkTo","to","LinkTitlelTo","LinkToSvg","initialValues","schema","Yup","required","matches","transform","originalValue","replace","LibraryDashboard","bookExists","setBookExists","Dashboard","FilterTitle","Formik","validationSchema","onSubmit","resetForm","parseInt","addNewBook","blur","_ref2","errors","touched","Form","FormFields","FormFieldConteiner","FormFieldLabel","htmlFor","FormField","id","name","type","placeholder","error","style","borderColor","ErrorMessageStyled","component","paddindleft","Library","UnivesalGeneralBlock","LibraryPage"],"sourceRoot":""}