{"version":3,"file":"static/js/165.567f124a.chunk.js","mappings":"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","sources":["components/ImgAuthorization/ImgAuthorization.styled.js","components/ImgAuthorization/ImgAuthorization.jsx","components/LogoTitleBlock/LogoTitleBlock.styled.js","components/LogoTitleBlock/LogoTitleBlock.jsx","components/RegisterAndLogin/RegisterAndLogin.styled.js","components/SubmitBlockAutorization/SubmitBlockAutorization.styled.js","components/SubmitBlockAutorization/SubmitBlockRegister.jsx","components/RegisterAndLogin/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\n\nexport const Img = styled.img`\n  max-width: 100%;\n  height: 736px; \n  border-radius: 30px;\n`\n","import desctopImg from '../../img/fon/desctop-block.jpg';\nimport desctopImg2x from '../../img/fon/desctop-block@2x.jpg';\nimport { Img } from './ImgAuthorization.styled';\n\nexport default function ImgAutorization() {\n  return (    \n      <picture>\n        <source srcSet={desctopImg2x} media=\"(min-resolution: 192dpi)\" />\n        <Img src={desctopImg} alt=\"register img\" />\n      </picture>  \n  );\n}\n","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const LogoTitleConteiner = styled.div`\nmargin-bottom: 40px;\n`\n\nexport const LogoConteiner = styled.div`\nmargin-bottom: 108px;\n`\n\nexport const Title = styled.h2`\n  font-size: 64px;\n  font-weight: 700;  \n  line-height: 0.94;\n`;\n\nexport const TitleSpan = styled.span`\n  color: ${color.whiteTranslucent};\n`;\n","import Logo from \"components/Logo/Logo\";\nimport { LogoConteiner, LogoTitleConteiner, Title, TitleSpan } from \"./LogoTitleBlock.styled\";\n\nexport default function LogoTitleBlock() {\n  return (\n    <LogoTitleConteiner>\n      <LogoConteiner>\n        <Logo />\n      </LogoConteiner>\n      <Title>Expand your mind, reading <TitleSpan>a book</TitleSpan></Title>\n    </LogoTitleConteiner>\n  );\n};\n","import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik';\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 16px;\n  justify-content: center ;\n  padding: 32px;\n`\nexport const FormBlock = styled.div`\n  width:600px;\n  height: 736px; \n  background: ${color.blackLight};\n  border-radius: 30px;\n  padding: 40px 64px;\n`\n\n///////////////////////////////////////////////////////////\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 308px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n  border-radius: 12px;\n  margin-bottom: 14px;\n  padding: 16px 14px 16px 65px;\n  padding-left: ${(props) => (props.email ? '53px' : '65px')};\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n`;\n\nexport const FormFieldPassvordConteiner = styled.div`\n  position: relative;  \n`;\n\nexport const FormFieldPassvord = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n  border-radius: 12px;\n  padding:  16px 14px 16px 86px;\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 17px;\n  right: 17px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\n//////////////////////////////////////////////////////////////////////\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -20px; \n  padding:  5px 10px 10px;\n`;\n\nexport const ErrorMessagePassword = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -5px; \n  padding:  5px 10px 10px;\n`;\n","import color from 'common/GlobalColers'\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components'\n\nexport const SubmitBlock = styled.div`\n  /* margin-top: auto; */\n`;\n\nexport const FormBtn = styled.button`\n  border-radius: 30px;\n  color: ${color.blackLight};\n  background: ${color.darkGgeen};\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n  margin-right: 20px;\n  padding: 16px 54px;\n\n  transition: color 0.3s linear, background 0.3s linear; \n\n&:hover,\n&:focus {\n  color: ${color.whitePrimary};\n  background: ${color.blackLight};\n  box-shadow: 0 0 0 2px ${color.whiteLightTranslucent};\n}\n\n`;\n\nexport const LinkTo = styled(NavLink)`\n  position: relative;\n  color: ${color.gryeLight}; \n  font-weight: 500;\n\n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -3px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n  \n`;\n","import { FormBtn, LinkTo, SubmitBlock } from \"./SubmitBlockAutorization.styled\";\n\nexport default function SubmitBlockRegister() {\n  return (    \n    <SubmitBlock>\n      <FormBtn type=\"submit\">Registration</FormBtn>\n      <LinkTo to=\"/login\" >\n        Already have an account?\n      </LinkTo>\n    </SubmitBlock>\n  );\n}\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport sprite from '../../img/sprite.svg';\nimport { Container, ErrorMessagePassword, ErrorMessageStyled, EyeSvg, FormBlock, FormField, FormFieldConteiner, FormFieldLabel, FormFieldPassvord, FormFieldPassvordConteiner, FormFields} from \"./RegisterAndLogin.styled\";\nimport ImgAutorization from 'components/ImgAuthorization/ImgAuthorization';\nimport LogoTitleBlock from 'components/LogoTitleBlock/LogoTitleBlock';\nimport SubmitBlockRegister from 'components/SubmitBlockAutorization/SubmitBlockRegister';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  name: Yup.string().required('Required').min(2, \"The name must have at least 2 letters\"),\n  email: Yup.string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);\n  // const [emailError, setEmailError] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  \n  const handleSubmit = async (values) => {\n    try {\n      await dispatch(register(values)).unwrap();\n      navigate('/recommended');\n    } catch (error) {\n      if (error === \"Request failed with status code 409\") {\n        toast.error(\"User with this email already exists.\");\n      } else {\n        toast.error(\"Registration failed. Please try again later.\");\n      }\n    }\n  }\n  return (\n    <Container>\n      <FormBlock>        \n        <LogoTitleBlock />\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ errors, touched }) => (\n            <Form>\n              <FormFields>  \n                <div>  \n\n                  <FormFieldConteiner>\n                    <FormFieldLabel htmlFor=\"name\">Name:</FormFieldLabel>\n                    <FormField \n                      id=\"name\" \n                      name=\"name\" \n                      type=\"name\" \n                      placeholder=\"Nik Ovson\" \n                      error={errors.name && touched.name ? \"true\" : \"false\" } />\n                    <ErrorMessageStyled name=\"name\" component='div' />\n                  </FormFieldConteiner>\n                    \n                  <FormFieldConteiner>\n                    <FormFieldLabel htmlFor=\"email\">Mail:</FormFieldLabel>\n                    <FormField \n                      id=\"email\" \n                      name=\"email\" \n                      type=\"email\" \n                      placeholder=\"nik@google.com\" \n                      error={errors.email && touched.email ? \"true\" : \"false\" } \n                      email=\"true\" \n                    />\n                    <ErrorMessageStyled name=\"email\" component='div' />\n                  </FormFieldConteiner>\n          \n                  <FormFieldPassvordConteiner>\n                    <FormFieldLabel htmlFor=\"password\">Password:</FormFieldLabel>\n                    <FormFieldPassvord \n                      id=\"password\" \n                      name=\"password\" \n                      type={showPassword ? \"text\" : \"password\"} \n                      placeholder=\"********\" \n                      error={errors.password && touched.password ? \"true\" : \"false\"}  \n                    />\n\n                      \n  {errors.password && touched.password ? (\n    <EyeSvg width={20} height={20}>\n      <use href={`${sprite}#icon-pajamas_error`} />\n    </EyeSvg>\n  ) : !errors.password && touched.password ? (\n    <EyeSvg width={20} height={20}>\n      <use href={`${sprite}#icon-check-ok`} />\n    </EyeSvg>\n  ) : showPassword ? (\n    <EyeSvg width={20} height={20} onClick={togglePasswordVisibility}>\n      <use href={`${sprite}#icon-eye`} />\n    </EyeSvg>\n  ) : (\n    <EyeSvg width={20} height={20} onClick={togglePasswordVisibility}>\n      <use href={`${sprite}#icon-eye-off`} />\n    </EyeSvg>\n  )}\n  \n  <ErrorMessagePassword name=\"password\" component='div' />\n          \n                   {/* {showPassword ? (\n                    <EyeSvg\n                      width={20}\n                      height={20}\n                     onClick={togglePasswordVisibility}\n                    >\n                      <use href={`${sprite}#icon-eye`} />\n                    </EyeSvg>\n                      ) : (\n                    <EyeSvg\n                      width={20}\n                      height={20}\n                      onClick={togglePasswordVisibility}\n                    >\n                      <use href={`${sprite}#icon-eye-off`} />\n                    </EyeSvg>\n                    )}\n\n                   <ErrorMessagePassword name=\"password\" component='div' />\n                    {errors.password && touched.password && <EyeSvg\n                      width={20}\n                      height={20}\n                    >\n                      <use href={`${sprite}#icon-pajamas_error`} />\n                    </EyeSvg> }\n\n                    {!errors.password && touched.password && <EyeSvg\n                      width={20}\n                      height={20}\n                    >\n                      <use href={`${sprite}#icon-check-ok`} />\n                    </EyeSvg> } */}\n                  </FormFieldPassvordConteiner>\n\n                </div>     \n   \n                <SubmitBlockRegister />\n              </FormFields>                    \n            </Form>\n          )}\n        </Formik>\n      </FormBlock>\n      <ImgAutorization />\n    </Container>\n  );\n}\n","import Register from \"components/RegisterAndLogin/Register\";\n\nexport default function LoginPage() {  \n  return (\n    <Register />\n  );\n}"],"names":["Img","styled","_templateObject","_taggedTemplateLiteral","ImgAutorization","_jsxs","children","_jsx","srcSet","desctopImg2x","media","src","desctopImg","alt","LogoTitleConteiner","LogoConteiner","_templateObject2","Title","_templateObject3","TitleSpan","_templateObject4","color","LogoTitleBlock","Logo","Container","FormBlock","FormFields","FormFieldConteiner","FormFieldLabel","_templateObject5","FormField","Field","_templateObject6","props","error","email","FormFieldPassvordConteiner","_templateObject7","FormFieldPassvord","_templateObject8","EyeSvg","_templateObject9","ErrorMessageStyled","ErrorMessage","_templateObject10","ErrorMessagePassword","_templateObject11","SubmitBlock","FormBtn","LinkTo","NavLink","SubmitBlockRegister","type","to","initialValues","name","password","schema","Yup","required","min","matches","Register","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","togglePasswordVisibility","prevShowPassword","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","values","_context","prev","next","register","unwrap","t0","toast","stop","_x","apply","arguments","Formik","validationSchema","onSubmit","_ref2","errors","touched","Form","htmlFor","id","placeholder","component","width","height","href","concat","sprite","onClick","LoginPage"],"sourceRoot":""}