{"version":3,"file":"static/js/915.54e0e7b0.chunk.js","mappings":"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","sources":["components/SubmitBlockAutorization/SubmitBlockRegister.jsx","components/RegisterAndLogin/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { FormBtn, LinkTo, SubmitBlock } from \"./SubmitBlockAutorization.styled\";\n\nexport default function SubmitBlockRegister() {\n  return (    \n    <SubmitBlock>\n      <FormBtn type=\"submit\">Registration</FormBtn>\n      <LinkTo to=\"/login\" >\n        Already have an account?\n      </LinkTo>\n    </SubmitBlock>\n  );\n}\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport sprite from '../../img/sprite.svg';\nimport { Container, ErrorMessagePassword, ErrorMessageStyled, EyeSvg, FormBlock, FormField, FormFieldConteiner, FormFieldLabel, FormFieldPassvord, FormFieldPassvordConteiner, FormFields} from \"./RegisterAndLogin.styled\";\n\nimport ImgAutorization from 'components/ImgAuthorization/ImgAuthorization';\nimport LogoTitleBlock from 'components/LogoTitleBlock/LogoTitleBlock';\nimport SubmitBlockRegister from 'components/SubmitBlockAutorization/SubmitBlockRegister';\n\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  name: Yup.string().required('Required').min(2, \"The name must have at least 2 letters\"),\n  email: Yup.string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);\n  // const [emailError, setEmailError] = useState('');\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const handleSubmit = () => {\n    \nconsole.log(\"submit\")\n  }\n  return (\n    <Container>\n      <FormBlock>        \n        <LogoTitleBlock />\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ errors, touched }) => (\n            <Form>\n              <FormFields>  \n                <div>  \n\n          <FormFieldConteiner>\n                <FormFieldLabel htmlFor=\"name\">Name:</FormFieldLabel>\n                <FormField id=\"name\" name=\"name\" type=\"name\" placeholder=\"Nik Ovson\" error={errors.name && touched.name ? \"true\" : \"false\" } />\n                <ErrorMessageStyled name=\"name\" component='div' />\n          </FormFieldConteiner>\n          \n          \n          <FormFieldConteiner>\n                <FormFieldLabel htmlFor=\"email\">Mail:</FormFieldLabel>\n                <FormField id=\"email\" name=\"email\" type=\"email\" placeholder=\"nik@google.com\" error={errors.email && touched.email ? \"true\" : \"false\" } email=\"true\" />\n                <ErrorMessageStyled name=\"email\" component='div' />\n          </FormFieldConteiner>\n                {/* {emailError && <EmailErrorMessage >{emailError}</EmailErrorMessage> } */}\n          \n                <FormFieldPassvordConteiner>\n                  <FormFieldLabel htmlFor=\"password\">Password:</FormFieldLabel>\n                  <FormFieldPassvord id=\"password\" name=\"password\" type={showPassword ? \"text\" : \"password\"} placeholder=\"********\" error={errors.password && touched.password ? \"true\" : \"false\"}  />\n          \n                  {showPassword ? (\n                  <EyeSvg\n                    width={20}\n                    height={20}\n                    onClick={togglePasswordVisibility}\n                  >\n                    <use href={`${sprite}#icon-eye`} />\n                  </EyeSvg>\n                    ) : (\n                  <EyeSvg\n                    width={20}\n                    height={20}\n                    onClick={togglePasswordVisibility}\n                  >\n                    <use href={`${sprite}#icon-eye-off`} />\n                  </EyeSvg>\n                  )}\n                <ErrorMessagePassword name=\"password\" component='div' />\n                </FormFieldPassvordConteiner>\n              </div>     \n   \n                <SubmitBlockRegister />\n              </FormFields>                    \n            </Form>\n          )}\n        </Formik>\n      </FormBlock>\n      <ImgAutorization />\n    </Container>\n  );\n}\n","import Register from \"components/RegisterAndLogin/Register\";\n\nexport default function LoginPage() {  \n  return (\n    <Register />\n  );\n}"],"names":["SubmitBlockRegister","_jsxs","SubmitBlock","children","_jsx","FormBtn","type","LinkTo","to","initialValues","name","email","password","schema","Yup","required","min","matches","Register","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","togglePasswordVisibility","prevShowPassword","Container","FormBlock","LogoTitleBlock","Formik","validationSchema","onSubmit","console","log","_ref","errors","touched","Form","FormFields","FormFieldConteiner","FormFieldLabel","htmlFor","FormField","id","placeholder","error","ErrorMessageStyled","component","FormFieldPassvordConteiner","FormFieldPassvord","EyeSvg","width","height","onClick","href","concat","sprite","ErrorMessagePassword","ImgAutorization","LoginPage"],"sourceRoot":""}