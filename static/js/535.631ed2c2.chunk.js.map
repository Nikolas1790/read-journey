{"version":3,"file":"static/js/535.631ed2c2.chunk.js","mappings":"2RAEe,SAASA,IACtB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAW,CAAAC,SAAA,EACVC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,KAAK,SAAQH,SAAC,YACvBC,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACC,GAAG,YAAWL,SAAE,kCAK9B,CCAA,IAAMM,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,GAAW,CACxBH,MAAOG,EAAAA,KAAaC,QAAQ,mCAAoC,yBAAyBC,SAAS,YAClGJ,SAAUE,EAAAA,KAAaE,SAAS,YAAYC,IAAI,EAAG,4CAGtC,SAASC,IACtB,IAAAC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAG9BI,EAA2B,WAC/BD,GAAgB,SAACE,GAAgB,OAAMA,CAAgB,GACzD,EAKA,OACExB,EAAAA,EAAAA,MAACyB,EAAAA,GAAS,CAAAvB,SAAA,EACRF,EAAAA,EAAAA,MAAC0B,EAAAA,GAAS,CAAAxB,SAAA,EACRC,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,KAEfxB,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CAAEpB,cAAiBA,EAAeqB,iBAAkBlB,EAAQmB,SATpD,WAEvBC,QAAQC,IAAI,SACV,EAMgG9B,SAEvF,SAAA+B,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAO,OACjBhC,EAAAA,EAAAA,KAACiC,EAAAA,GAAI,CAAAlC,UACHF,EAAAA,EAAAA,MAACqC,EAAAA,GAAU,CAAAnC,SAAA,EACTF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAEEF,EAAAA,EAAAA,MAACsC,EAAAA,GAAkB,CAAApC,SAAA,EACbC,EAAAA,EAAAA,KAACoC,EAAAA,GAAc,CAACC,QAAQ,QAAOtC,SAAC,WAChCC,EAAAA,EAAAA,KAACsC,EAAAA,GAAS,CAACC,GAAG,QAAQC,KAAK,QAAQtC,KAAK,QAAQuC,YAAY,iBAAiBC,MAAOX,EAAOzB,OAAS0B,EAAQ1B,MAAQ,OAAS,QAAUA,MAAM,UAC7IN,EAAAA,EAAAA,KAAC2C,EAAAA,GAAkB,CAACH,KAAK,QAAQI,UAAU,YAIjD/C,EAAAA,EAAAA,MAACgD,EAAAA,GAA0B,CAAA9C,SAAA,EACzBC,EAAAA,EAAAA,KAACoC,EAAAA,GAAc,CAACC,QAAQ,WAAUtC,SAAC,eACnCC,EAAAA,EAAAA,KAAC8C,EAAAA,GAAiB,CAACP,GAAG,WAAWC,KAAK,WAAWtC,KAAMgB,EAAe,OAAS,WAAYuB,YAAY,WAAWC,MAAOX,EAAOxB,UAAYyB,EAAQzB,SAAW,OAAS,UAEvKW,GACDlB,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CACLC,MAAO,GACPC,OAAQ,GACRC,QAAS9B,EAAyBrB,UAElCC,EAAAA,EAAAA,KAAA,OAAKmD,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAGtBrD,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,CACLC,MAAO,GACPC,OAAQ,GACRC,QAAS9B,EAAyBrB,UAElCC,EAAAA,EAAAA,KAAA,OAAKmD,KAAI,GAAAC,OAAKC,EAAAA,EAAM,sBAGtBrD,EAAAA,EAAAA,KAACsD,EAAAA,GAAoB,CAACd,KAAK,WAAWI,UAAU,eAIpD5C,EAAAA,EAAAA,KAACJ,EAAgB,QAEd,QAIbI,EAAAA,EAAAA,KAACuD,EAAAA,EAAe,MAGtB,CCnFe,SAASC,IACtB,OACExD,EAAAA,EAAAA,KAACa,EAAK,GAEV,C","sources":["components/SubmitBlockAutorization/SubmitBlockLogin.jsx","components/RegisterAndLogin/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { FormBtn, LinkTo, SubmitBlock } from \"./SubmitBlockAutorization.styled\";\n\nexport default function SubmitBlockLogin() {\n  return (    \n    <SubmitBlock>\n      <FormBtn type=\"submit\">Log In</FormBtn>\n      <LinkTo to=\"/register\" >\n        Donâ€™t have an account?  \n      </LinkTo>\n    </SubmitBlock>\n  );\n}\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport sprite from '../../img/sprite.svg';\nimport { Container, ErrorMessagePassword, ErrorMessageStyled, EyeSvg, FormBlock, FormField, FormFieldConteiner, FormFieldLabel, FormFieldPassvord, FormFieldPassvordConteiner, FormFields} from \"./RegisterAndLogin.styled\";\n\nimport ImgAutorization from 'components/ImgAuthorization/ImgAuthorization';\nimport LogoTitleBlock from 'components/LogoTitleBlock/LogoTitleBlock';\nimport SubmitBlockLogin from 'components/SubmitBlockAutorization/SubmitBlockLogin';\n\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  email: Yup.string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Login() {\n  const [showPassword, setShowPassword] = useState(false);\n  // const [emailError, setEmailError] = useState('');\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const handleSubmit = () => {\n    \nconsole.log(\"submit\")\n  }\n  return (\n    <Container>\n      <FormBlock>        \n        <LogoTitleBlock />\n\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ errors, touched }) => (\n            <Form>\n              <FormFields>  \n                <div>            \n          \n                  <FormFieldConteiner>\n                        <FormFieldLabel htmlFor=\"email\">Mail:</FormFieldLabel>\n                        <FormField id=\"email\" name=\"email\" type=\"email\" placeholder=\"nik@google.com\" error={errors.email && touched.email ? \"true\" : \"false\" } email=\"true\" />\n                        <ErrorMessageStyled name=\"email\" component='div' />\n                  </FormFieldConteiner>\n                        {/* {emailError && <EmailErrorMessage >{emailError}</EmailErrorMessage> } */}\n          \n                  <FormFieldPassvordConteiner>\n                    <FormFieldLabel htmlFor=\"password\">Password:</FormFieldLabel>\n                    <FormFieldPassvord id=\"password\" name=\"password\" type={showPassword ? \"text\" : \"password\"} placeholder=\"********\" error={errors.password && touched.password ? \"true\" : \"false\"}  />\n          \n                    {showPassword ? (\n                    <EyeSvg\n                      width={20}\n                      height={20}\n                      onClick={togglePasswordVisibility}\n                    >\n                      <use href={`${sprite}#icon-eye`} />\n                    </EyeSvg>\n                      ) : (\n                    <EyeSvg\n                      width={20}\n                      height={20}\n                      onClick={togglePasswordVisibility}\n                    >\n                      <use href={`${sprite}#icon-eye-off`} />\n                    </EyeSvg>\n                    )}\n                    <ErrorMessagePassword name=\"password\" component='div' />\n                  </FormFieldPassvordConteiner>\n                </div>     \n\n                <SubmitBlockLogin />                    \n              </FormFields>                    \n            </Form>\n          )}\n        </Formik>\n      </FormBlock>\n      <ImgAutorization />\n    </Container>\n  );\n}\n","import Login from \"components/RegisterAndLogin/Login\";\n\nexport default function LoginPage() {\n  return (\n    <Login />\n  );\n}\n  "],"names":["SubmitBlockLogin","_jsxs","SubmitBlock","children","_jsx","FormBtn","type","LinkTo","to","initialValues","email","password","schema","Yup","matches","required","min","Login","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","togglePasswordVisibility","prevShowPassword","Container","FormBlock","LogoTitleBlock","Formik","validationSchema","onSubmit","console","log","_ref","errors","touched","Form","FormFields","FormFieldConteiner","FormFieldLabel","htmlFor","FormField","id","name","placeholder","error","ErrorMessageStyled","component","FormFieldPassvordConteiner","FormFieldPassvord","EyeSvg","width","height","onClick","href","concat","sprite","ErrorMessagePassword","ImgAutorization","LoginPage"],"sourceRoot":""}