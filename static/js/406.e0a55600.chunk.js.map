{"version":3,"file":"static/js/406.e0a55600.chunk.js","mappings":"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","sources":["components/Recomended/Recomended.styled.js","components/RecomendedDashboard/RecomendedDashboard.styled.js","components/RecomendedDashboard/RecomendedDashboard.jsx","components/Recomended/Recomended.jsx","pages/RecomendedPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n// export const RecomendedBlock = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: 16px;\n\n//   padding:  16px 0;\n// `\n\n//////////////////////////////////////////\n\n\n// export const RecommendedBooksBlock = styled.div`\n//   width: 847px;\n//   height: 651px;\n//   border-radius: 30px;\n\n//   background: ${color.blackLight};\n//   padding: 40px 40px 28px 40px;\n// `\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\n// export const RecommendedTitle = styled.h1`\n//   font-size: 28px;\n//   font-weight: 700;\n//   line-height: 1.14;\n// `\nexport const PaginationBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n\n  background: transparent;\n  border-radius: 50%; \n  border: 1px solid ${color.whiteLightTranslucent};\n\n  &:last-child {\n    margin-right: 0; \n  }\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${(props) => (props.stoke === \"true\" ? color.whiteLightTranslucent : color.whitePrimary)};\n`\n\n///////////////////////////////////////////////////////////////////////////\n\nexport const BooksTen = styled.ul`\n  /* width: 137px;\n  height: 248px; */\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n`\n\n// export const BookCard = styled.li`\n//   width: 137px;\n//   height: 248px;\n//   /* margin-righ+t: 8px; */\n\n//   background: transparent;\n//   /* border-radius: 50%;  */\n//   /* border: 1px solid ${color.whiteLightTranslucent}; */\n\n//   &:last-child {\n//     margin-right: 0; \n//   }\n// `\n// export const BookImg = styled.img`\n//   width: 137px;\n//   height: 208px;\n\n//   border-radius: 8px; \n//   margin-bottom: 8px;\n// `\n\n// export const BookTitle = styled.h3`\n//   font-size: 14px ;\n//   font-weight: 700;\n//   margin-bottom: 2px;\n\n//    /* Ограничиваем текст одной строкой */\n//    white-space: nowrap;\n\n//      /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n// `\n\n// export const BookAutor = styled.p`\n//   font-size: 10px ;\n//   color: ${color.gryeLight};\n// `","import color from 'common/GlobalColers'\nimport { Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const FilterTitle = styled.h3`\nfont-size: 14px;\nfont-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n`;\n\n\n\n\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 272px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport const StartWorkoutTitle = styled.p`\n  font-size: 20px;\nfont-weight: 700;\nline-height: 1;\n\nmargin-bottom: 40px;\n`\nexport const Arguments = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: ${(props) => props.maginbottom || 'auto'};\n`\nexport const SeriaNumber = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  font-size: 20px;\n  font-weight: 700;  \n  color: ${color.blackLight};\n  background: ${color.whitePrimary};\n  \n`\nexport const TextOne = styled.p`\n  width: 190px;  \n`\nexport const TextTwo = styled.p`\n  width: 200px;  \n`\n\nexport const TextSpan = styled.span`\n color: ${color.gryeLight};\n  \n`\n\nexport const LinkToLibrary = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;  color: ${color.gryeLight}; \n  \n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\nexport const LinkTextToLibrary = styled.p`\n  position: relative; \n\n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\nexport const QuoteBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 313px;\n  height: 83px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 14px 20PX;\n`\n// export const BlackBlock = styled.div`\n//   width: 40px;\n//   height: 40px;\n//   background: ${color.black};\n// `\n\nexport const Quote = styled.p`\n  width: 219px;\n  color: ${color.gryeLight};\n \n`\n\nexport const QuoteSpan = styled.span`  \n  color: ${color.whitePrimary};\n \n`\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, Filters, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTextToLibrary, LinkToLibrary, Quote, QuoteBlock, QuoteSpan, SeriaNumber, StartWorkoutBlock, StartWorkoutTitle, TextOne, TextSpan, TextTwo } from './RecomendedDashboard.styled';\n\nimport imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle } from 'components/Dashboard/Dashboard.styled';\n\nconst initialValues = {\n  title: '',\n  author: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string(),\n  author: Yup.string(),\n});\n\nexport default function RecomendedDashboard() {\n  const handleSubmit = () => {    \n    console.log(\"submit\")\n  }\n  return (\n    <Dashboard>\n      \n      <Filters>\n        <FilterTitle>Filters:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ touched }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"Enter text\" />                \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Enter text\" paddindleft=\"95px\" />                \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"To apply\" onClick={handleSubmit} width=\"122px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Start your workout</StartWorkoutTitle>\n        <Arguments maginbottom=\"20px\" >\n          <SeriaNumber>1</SeriaNumber>\n          <TextOne>Create a personal library: <TextSpan>add the books you intend to read to it.</TextSpan></TextOne>\n        </Arguments>\n        <Arguments maginbottom=\"26px\">\n          <SeriaNumber>2</SeriaNumber>\n          <TextTwo>Create your first workout: <TextSpan>define a goal, choose a period, start training.</TextSpan></TextTwo>\n        </Arguments>\n\n        <LinkToLibrary to=\"/library\">\n          <LinkTextToLibrary>My library </LinkTextToLibrary>\n            \n          <svg width={24} height={24}>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </svg>          \n        </LinkToLibrary>\n      </StartWorkoutBlock>\n\n      <QuoteBlock>\n        \n      <picture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={40} />\n      </picture>  \n        \n        <Quote>\"Books are <QuoteSpan>windows</QuoteSpan> to the world, and reading is a journey into the unknown.\"</Quote>\n      </QuoteBlock>\n\n    </Dashboard>\n  );\n}\n  ","import { BooksTen, HeaderAndPaginationBlock, PaginationBtn,PaginationSvg} from \"./Recomended.styled\"\nimport sprite from '../../img/sprite.svg';\nimport RecomendedDashboard from \"components/RecomendedDashboard/RecomendedDashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchBooks } from \"../../redux/books/operations\";\nimport { selectBookData, selectTotalPage } from \"../../redux/books/selector\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport DetailedInformationBook from \"components/DetailedInformationBook/DetailedInformationBook\";\nimport CardBook from \"components/CardBook/CardBook\";\nimport UnivesalMainConteainer from \"components/UniversalMainContainer/UniversalMainContainer\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\nimport { MainBlockTitle } from \"components/UniversalMainContainer/UniversalMainContainer.styled\";\n\nexport default function Recomended() {\n  const dispatch = useDispatch();\n  const results = useSelector(selectBookData)\n  const totalPages = useSelector(selectTotalPage);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false); \n  const [page, setPage] = useState(1);\n  // const ownLibrary = useSelector(selectOwnBooks); \n\n  useEffect(()=> {\n    dispatch(fetchBooks({ page, limit: 10  }))\n  }, [dispatch, page]);\n\n  const handlePageChange = (newPage) => { \n    if (newPage >= 1 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n  // console.log(ownLibrary)\n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  return (\n    <UnivesalGeneralBlock >\n      \n        <RecomendedDashboard/>\n      \n\n      <UnivesalMainConteainer >\n        <HeaderAndPaginationBlock>\n          <MainBlockTitle>Recommended</MainBlockTitle>\n          <div>\n            <PaginationBtn onClick={() => handlePageChange(page - 1)} >\n              <PaginationSvg stoke={page === 1 ? \"true\" : ''}>\n                <use href={`${sprite}#icon-chevron-left`} />\n              </PaginationSvg>\n            </PaginationBtn>\n            <PaginationBtn onClick={() => handlePageChange(page + 1)}>\n              <PaginationSvg stoke={page === totalPages ? \"true\" : ''} >\n                <use href={`${sprite}#icon-chevron-right`} />\n              </PaginationSvg>\n            </PaginationBtn>\n          </div>\n        </HeaderAndPaginationBlock>\n\n\n\n        <BooksTen>\n          {results?.map((book) => (\n            <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} />\n          ))}\n        </BooksTen>   \n\n      </UnivesalMainConteainer>\n\n\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Add to library\"/>\n      </PortalModal>\n\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Recomended from \"components/Recomended/Recomended\";\n\nexport default function RecomendedPage() {\n  return (\n    <Recomended />\n  );\n}\n  "],"names":["HeaderAndPaginationBlock","styled","_templateObject","_taggedTemplateLiteral","PaginationBtn","_templateObject2","color","PaginationSvg","_templateObject3","props","stoke","BooksTen","_templateObject4","Filters","FormFields","FormFieldConteiner","FormFieldLabel","_templateObject5","FormField","Field","_templateObject6","paddindleft","StartWorkoutBlock","_templateObject7","StartWorkoutTitle","_templateObject8","Arguments","_templateObject9","maginbottom","SeriaNumber","_templateObject10","TextOne","_templateObject11","TextTwo","_templateObject12","TextSpan","_templateObject13","LinkToLibrary","NavLink","_templateObject14","LinkTextToLibrary","_templateObject15","QuoteBlock","_templateObject16","Quote","_templateObject17","QuoteSpan","_templateObject18","initialValues","title","author","schema","Yup","RecomendedDashboard","handleSubmit","console","log","_jsxs","Dashboard","children","_jsx","FilterTitle","Formik","validationSchema","onSubmit","_ref","touched","Form","htmlFor","id","name","type","placeholder","CustomButton","label","onClick","width","to","height","href","concat","sprite","srcSet","imgBooksDesc2x","media","src","imgBooksDesc","alt","Recomended","dispatch","useDispatch","results","useSelector","selectBookData","totalPages","selectTotalPage","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","bookData","setBookData","_useState5","_useState6","page","setPage","useEffect","fetchBooks","limit","handlePageChange","newPage","openLoginModal","book","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlockTitle","map","CardBook","_id","PortalModal","active","setActive","DetailedInformationBook","closeModals","btnLabel","RecomendedPage"],"sourceRoot":""}