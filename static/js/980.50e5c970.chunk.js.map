{"version":3,"file":"static/js/980.50e5c970.chunk.js","mappings":"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","sources":["components/LibraryDashoard/LibraryDashoard.styled.js","components/Reading/Reading.styled.js","components/ReadingDashboard/ReadingDashboard.styled.js","components/ReadingDashboard/ReadingDashboard.jsx","components/Reading/Reading.jsx","pages/ReadingPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nexport const MainBlockLibraryDashboard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n`\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\n// export const FilterTitle = styled.h3`\n// font-size: 14px;\n// font-weight: 500;\n//   margin-bottom: 8px;\n//   margin-left: 14px;\n// `\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -5px; \n  padding:  5px 10px 10px;\n`;\n\n//////////////////////////////////////////////\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 259px;\n  border-radius: 12px;\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n`\nexport const StartWorkoutTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1;\n\n  margin-bottom: 20px;\n`\n/////   \n\nexport const Arguments = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`\nexport const CardRecomended = styled.li`\n  width: 71px;\n  height: 141px;  \n`\n\nexport const CardImg = styled.img`\n  width: 71px;\n  height: 107px;\n  border-radius: 8px;  \n\n  margin-bottom: 8px;\n`\n\nexport const CardTitle = styled.h4`\n  font-size: 10px;\n  font-weight: 700;\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  margin-bottom: 2px;\n`\n\nexport const CardAutor = styled.p`\n  font-size: 10px;\n  color: ${color.gryeLight};\n\n   /* Ограничиваем текст одной строкой */\n   white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n//////////////////////////////////////////////////////////////\n\n\nexport const LinkToHome = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${color.gryeLight}; \n\n  margin: auto 0;\n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\n\n\nexport const LinkTextToHome = styled.p`\n  position: relative; \n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\n\n","import color from 'common/GlobalColers';\nimport styled from 'styled-components'\n\nexport const BasicInfBook = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 44px;\n`\n\nexport const BasicImg = styled.img`\n  width: 224px;\n  height: 340px;\n  border-radius: 8px;\n  margin-bottom: 25px;\n`\n\nexport const TitleBook = styled.h2`\n  font-size: 20px;\n  margin-bottom: 4px;\n\n`;\n\nexport const AuthorBook = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 25px;\n`;","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n\nexport const Forma = styled.div`\n  margin-bottom: 40px;\n`\n\nexport const StarPicture = styled.picture`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: ${color.blackWhite};\n  margin: 0 auto;\n`\n\n/////////////////////////////////////////////////////////\n\n\nexport const ProgressTitle = styled.h4`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 14px;\n`\n\nexport const ProgressText = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 60px;\n`\n\n\n\n\n\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport { ErrorMessageStyled, FormField, FormFieldConteiner, FormFieldLabel, FormFields} from '../LibraryDashoard/LibraryDashoard.styled';\nimport Dashboard from 'components/Dashboard/Dashboard';\nimport { FilterTitle } from 'components/Dashboard/Dashboard.styled';\nimport { Forma, ProgressText, ProgressTitle, StarPicture } from './ReadingDashboard.styled';\n\nimport star from '../../img/star/star.png';\nimport star2x from '../../img/star/srar@2x.png';\nimport { useDispatch } from 'react-redux';\nimport { readingStart } from '../../redux/books/operations';\n\n\n\nconst initialValues = {\n  page: '1',\n};\n\nconst schema = Yup.object({\n  page: Yup.string().required('Required').matches(/^[0-9]+$/, 'Must be only digits')\n  .transform((value, originalValue) => originalValue.replace(/\\s/g, '')),\n});\n\nexport default function ReadingDashboard(selectedBook) {\n\n  const dispatch = useDispatch();\n\n\n  const handleSubmit = (e) => {   \n    // console.log(e)\n    const requestData = {\n      id: selectedBook.selectedBook,\n      page: e.page\n    }; \n\n    if (e.page) {\n      dispatch(readingStart(requestData))\n    };\n      \n\n  }\n  return (  \n    <Dashboard> \n      <Forma>\n        <FilterTitle>Start page:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({  errors,touched }) => (\n            <Form>\n              <FormFields>  \n                 <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"page\">Pages number:</FormFieldLabel>\n                  <FormField id=\"page\" name=\"page\" type=\"page\" placeholder=\"1\" paddindleft=\"111px\" error={errors.page && touched.page ? \"true\" : \"false\" } />  \n                    {/* {console.log(errors)}            */}\n                  <ErrorMessageStyled name=\"page\" component='div' />   \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"To start\" onClick={handleSubmit} width=\"114px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Forma>\n\n      <div>\n        <ProgressTitle>Progress</ProgressTitle>\n        <ProgressText>Here you will see when and how much you read. To record, click on the red button above.</ProgressText>\n        <div>\n          <StarPicture>\n            <source srcSet={star2x} media=\"(min-resolution: 192dpi)\" />        \n            <img src={star} alt=\"stack books\" width={50} />\n          </StarPicture> \n        </div>\n      </div>\n\n\n    </Dashboard> \n  );\n}\n  ","import UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\nimport UnivesalMainConteainer from \"components/UniversalMainContainer/UniversalMainContainer\";\nimport { MainBlockTitle } from \"components/UniversalMainContainer/UniversalMainContainer.styled\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { selectOwnBooks } from \"../../redux/books/selector\";\nimport { AuthorBook, BasicImg, BasicInfBook, TitleBook } from \"./Reading.styled\";\nimport sprite from '../../img/sprite.svg';\nimport ReadingDashboard from \"components/ReadingDashboard/ReadingDashboard\";\nimport notFoundImg2x from '../../img/notFoundImg/open-book@2x.jpg';\nimport notFoundImg from '../../img/notFoundImg/open-book.jpg';\n\nexport default function Reading() {\n  const { bookId } = useParams();\n  const books = useSelector(selectOwnBooks);\n\n  const selectedBook = books.find(book => book._id === bookId);\n\n  const getImageUrl = () => {\n    const img = new Image();\n    img.src = notFoundImg;\n\n    // Check if the device has a higher pixel density (retina display)\n    if (window.devicePixelRatio && window.devicePixelRatio > 1) {\n      return notFoundImg2x;\n    } else {\n      return notFoundImg;\n    }\n  };\n  const imageUrl = selectedBook.imageUrl || getImageUrl();\n  return (\n    <UnivesalGeneralBlock >\n      \n      <ReadingDashboard  selectedBook={selectedBook._id}/>     \n\n\n      <UnivesalMainConteainer>\n        <MainBlockTitle>My reading</MainBlockTitle>\n        <BasicInfBook>\n          <BasicImg src={imageUrl} alt='title'/>\n          <TitleBook>{selectedBook.title}</TitleBook>\n          <AuthorBook>{selectedBook.author}</AuthorBook>\n\n          <svg width={50} height={50}>\n            <use href={`${sprite}#icon-block-pause`} />\n          </svg> \n\n        </BasicInfBook>\n      </UnivesalMainConteainer>\n\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Reading from \"components/Reading/Reading\";\n\nexport default function ReadingPage() {\n  return (\n    <Reading />\n  );\n}\n  "],"names":["MainBlockLibraryDashboard","styled","_templateObject","_taggedTemplateLiteral","Filters","_templateObject2","FormFields","_templateObject3","FormFieldConteiner","_templateObject4","FormFieldLabel","_templateObject5","color","FormField","Field","_templateObject6","props","paddindleft","error","ErrorMessageStyled","ErrorMessage","_templateObject7","StartWorkoutBlock","_templateObject8","StartWorkoutTitle","_templateObject9","Arguments","_templateObject10","CardRecomended","_templateObject11","CardImg","_templateObject12","CardTitle","_templateObject13","CardAutor","_templateObject14","LinkToHome","NavLink","_templateObject15","LinkTextToHome","_templateObject16","BasicInfBook","BasicImg","TitleBook","AuthorBook","Forma","StarPicture","ProgressTitle","ProgressText","initialValues","page","schema","Yup","required","matches","transform","value","originalValue","replace","ReadingDashboard","selectedBook","dispatch","useDispatch","handleSubmit","e","requestData","id","readingStart","_jsxs","Dashboard","children","_jsx","FilterTitle","Formik","validationSchema","onSubmit","_ref","errors","touched","Form","htmlFor","name","type","placeholder","component","CustomButton","label","onClick","width","srcSet","star2x","media","src","alt","Reading","bookId","useParams","useSelector","selectOwnBooks","find","book","_id","imageUrl","Image","notFoundImg","window","devicePixelRatio","notFoundImg2x","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlockTitle","title","author","height","href","concat","sprite","ReadingPage"],"sourceRoot":""}