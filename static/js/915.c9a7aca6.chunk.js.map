{"version":3,"file":"static/js/915.c9a7aca6.chunk.js","mappings":"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","sources":["components/CardBook/CardBook.styled.js","components/CardBook/CardBook.jsx","components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","components/DetailedInformationBook/DetailedInformationBook.styled.js","components/DetailedInformationBook/DetailedInformationBook.jsx","components/PortalModal/PortalModal.styled.js","components/PortalModal/PortalModal.jsx","components/UniversalGeneralBlock/UniversalGeneralBlock.styled.js","components/UniversalGeneralBlock/UniversalGeneralBlock.jsx","components/UniversalMainContainer/UniversalMainContainer.jsx","components/UniversalMainContainer/UniversalMainContainer.styled.js","components/Recomended/Recomended.styled.js","components/RecomendedDashboard/RecomendedDashboard.styled.js","components/RecomendedDashboard/RecomendedDashboard.jsx","components/Recomended/Recomended.jsx","pages/RecomendedPage.jsx","redux/books/selector.js"],"sourcesContent":["import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const BookCard = styled.li`\n  width: 137px;\n  height: 248px;\n\n  background: transparent;\n  \n  &:last-child {\n    margin-right: 0; \n  }\n`\nexport const BookImg = styled.img`\n  width: 137px;\n  height: 208px;\n\n  border-radius: 8px; \n  margin-bottom: 8px;\n`\n\nexport const BookDataBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\nexport const TitleAutorBlock = styled.div`\n  max-width: ${({ page }) => ( page === 'true' ? '89px' : '137px')};\n`\n\nexport const BookTitle = styled.h3`\n\n  font-size: 14px ;\n  font-weight: 700;\n  margin-bottom: 2px;\n\n  /* Ограничиваем текст одной строкой */\n  white-space: nowrap;\n\n  /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const BookAutor = styled.p`\n  font-size: 10px ;\n  color: ${color.gryeLight};\n  white-space: nowrap;\n`\n///////////////////////////////////////////////////////////\nexport const DellBtn = styled.button`\n  background: transparent;\n`","import { BookAutor, BookCard, BookDataBlock, BookImg, BookTitle, DellBtn, TitleAutorBlock } from \"./CardBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { deleteBook } from \"../../redux/books/operations\";\n\n\nexport default function CardBook({book, openLoginModal, currentPage=false}) {\n  const dispatch = useDispatch();\n\n  const handleDeleteClick = () => {\n    // console.log(book._id)\n    dispatch(deleteBook(book._id));\n  };\n  return (\n    <BookCard>\n      <BookImg src={book.imageUrl} alt=\"book title\"  onClick={() => openLoginModal(book)} />\n      <BookDataBlock>\n        <TitleAutorBlock page={currentPage === \" MyLibrary\" ? 'true' : 'false' }>\n          <BookTitle>{book.title}</BookTitle>\n          <BookAutor>{book.author}</BookAutor>\n        </TitleAutorBlock>\n        \n        {currentPage === \" MyLibrary\" && (\n          <DellBtn onClick={handleDeleteClick} >        \n            <svg width={28} height={28}>\n              <use href={`${sprite}#icon-dell`} />\n            </svg> \n          </DellBtn>\n        )}\n\n      </BookDataBlock>\n    </BookCard>\n  );\n}\n  ","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const DashboardBlock = styled.div`\n  width: 353px;\n  height: 651px;\n  border-radius: 30px;\n\n  background: ${color.blackLight};\n  padding: 40px 20px 20px 20px;\n;`","import { DashboardBlock} from './Dashboard.styled';\n\nexport default function Dashboard({ children }) {\n  return (\n    <DashboardBlock>\n      {children}\n    </DashboardBlock>\n  );\n}","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Conteiner = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 500px;\n  height: 483px;\n  background: ${color.blackLight};\n  border-radius: 12px;\n  padding: 50px ;\n`;\n\nexport const ClosingSymbol = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  stroke: ${color.blackPrimary};\n  background: transparent;\n`;\n\nexport const CoverBook = styled.img`\n  width: 153px;\n  height: 233px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n`;\n\nexport const TitleBook = styled.h2`\n  max-width: 400px;\n  font-size: 20px;\n  margin-bottom: 2px;\n\n     /* Ограничиваем текст одной строкой */\n     white-space: nowrap;\n     overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const AuthorBook = styled.p`\n  color: ${color.gryeLight};\n  margin-bottom: 4px;\n`;\n\nexport const PagesBook = styled.p`\n  font-size: 10px;\n  margin-bottom: 32px;\n`;","import CustomButton from \"components/CustomButton/CustomButton\";\nimport { AuthorBook, ClosingSymbol, Conteiner, CoverBook, PagesBook, TitleBook } from \"./DetailedInformationBook.styled\";\nimport sprite from '../../img/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { addBookById } from \"../../redux/books/operations\";\n// import { selectOwnBooks } from \"../../redux/books/selector\";\nimport { useNavigate } from 'react-router-dom';\n\nexport default function DetailedInformationBook({ closeModals, bookData, btnLabel }) {\n  // const ownLibrary = useSelector(selectOwnBooks); \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // console.log(ownLibrary)\n\n  const handleButtonClick =  () => {   \n    if(btnLabel === \"Add to library\") dispatch(addBookById(bookData._id));  \n    if(btnLabel === \"Start reading\") navigate(`/reading/${bookData._id}`);\n\n    closeModals();\n  }; \n\n\n  return (\n    <Conteiner>\n      <ClosingSymbol onClick={closeModals}>\n        <svg width={22} height={22}>\n          <use href={`${sprite}#icon-x`} />\n        </svg>   \n      </ClosingSymbol>\n\n      <CoverBook src={bookData.imageUrl} alt=\"cover\" />\n      <TitleBook>{bookData.title}</TitleBook>\n      <AuthorBook>{bookData.author}</AuthorBook>\n      <PagesBook>{bookData.totalPages} pages</PagesBook>\n      <CustomButton label={btnLabel} onClick={handleButtonClick} width=\"162px\" height=\"46px\" />\n    </Conteiner>\n  );\n}\n  ","import color from \"common/GlobalColers\";\nimport styled from \"styled-components\";\n\nexport const Modal = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;    \n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${color.dimmedBackground};    \n    overflow: auto;\n    z-index:5;\n\n    transform: scale(0);\n    &.active {\n        transform: scale(1);\n    }\n`;","import ReactDOM from 'react-dom';\nimport React, { useEffect } from 'react';\nimport { Modal } from './PortalModal.styled';\n\nexport default function PortalModal({ active, setActive, children }) {\n  useEffect(() => {\n    const closeModal = (e) => {\n      if (e.key === 'Escape') {\n        setActive(false);\n      }\n    };\n\n    const handleBodyScroll = (disableScroll) => {\n      if (disableScroll) {        \n        document.body.classList.add('no-scroll');\n      } else {        \n        document.body.classList.remove('no-scroll');\n      }\n    };\n\n    if (active) {        \n      document.addEventListener('keydown', closeModal);\n      handleBodyScroll(true);\n    } else {        \n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', closeModal);\n      handleBodyScroll(false);\n    };\n  }, [active, setActive]);\n\n  return ReactDOM.createPortal(\n    <Modal className={active ? 'active' : ''} onClick={() => setActive(false)}>\n      <div onClick={(e) => e.stopPropagation()}>{children}</div>\n    </Modal>,\n    document.getElementById('modal')\n  );\n};\n","import styled from 'styled-components'\n\nexport const GeneralBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n\n  padding:  16px 0;\n;`","import { GeneralBlock } from \"./UniversalGeneralBlock.styled\";\n\nexport default function UnivesalGeneralBlock({ children }) {\n  return (\n    <GeneralBlock>\n      {children}\n    </GeneralBlock>\n  );\n}","import { MainBlock } from \"./UniversalMainContainer.styled\";\n\nexport default function UnivesalMainConteainer({ children }) {\n  return (\n    <MainBlock>\n      {children}\n    </MainBlock>\n  );\n}","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\nexport const MainBlock = styled.div`\n  width: 847px;\n  height: 651px;\n  border-radius: 30px;\n\n  background: ${color.blackLight};\n  padding: 40px 40px 28px 40px;\n`\n\nexport const MainBlockTitle = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.14;\n`","import color from 'common/GlobalColers'\nimport styled from 'styled-components'\n\n// export const RecomendedBlock = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   gap: 16px;\n\n//   padding:  16px 0;\n// `\n\n//////////////////////////////////////////\n\n\n// export const RecommendedBooksBlock = styled.div`\n//   width: 847px;\n//   height: 651px;\n//   border-radius: 30px;\n\n//   background: ${color.blackLight};\n//   padding: 40px 40px 28px 40px;\n// `\n\nexport const HeaderAndPaginationBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\n// export const RecommendedTitle = styled.h1`\n//   font-size: 28px;\n//   font-weight: 700;\n//   line-height: 1.14;\n// `\nexport const PaginationBtn = styled.button`\n  width: 40px;\n  height: 40px;\n  margin-right: 8px;\n\n  background: transparent;\n  border-radius: 50%; \n  border: 1px solid ${color.whiteLightTranslucent};\n\n  &:last-child {\n    margin-right: 0; \n  }\n`\n\nexport const PaginationSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${(props) => (props.stoke === \"true\" ? color.whiteLightTranslucent : color.whitePrimary)};\n`\n\n///////////////////////////////////////////////////////////////////////////\n\nexport const BooksTen = styled.ul`\n  /* width: 137px;\n  height: 248px; */\n  display: flex;\n  flex-wrap: wrap;\n  gap: 27px 20px;\n`\n\n// export const BookCard = styled.li`\n//   width: 137px;\n//   height: 248px;\n//   /* margin-righ+t: 8px; */\n\n//   background: transparent;\n//   /* border-radius: 50%;  */\n//   /* border: 1px solid ${color.whiteLightTranslucent}; */\n\n//   &:last-child {\n//     margin-right: 0; \n//   }\n// `\n// export const BookImg = styled.img`\n//   width: 137px;\n//   height: 208px;\n\n//   border-radius: 8px; \n//   margin-bottom: 8px;\n// `\n\n// export const BookTitle = styled.h3`\n//   font-size: 14px ;\n//   font-weight: 700;\n//   margin-bottom: 2px;\n\n//    /* Ограничиваем текст одной строкой */\n//    white-space: nowrap;\n\n//      /* Если текст не помещается, обрезаем его и добавляем три точки в конце */\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n// `\n\n// export const BookAutor = styled.p`\n//   font-size: 10px ;\n//   color: ${color.gryeLight};\n// `","import color from 'common/GlobalColers'\nimport { Field } from 'formik'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nexport const Filters = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const FilterTitle = styled.h3`\nfont-size: 14px;\nfont-weight: 500;\n  margin-bottom: 8px;\n  margin-left: 14px;\n`\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  gap: 8px;\n  margin-bottom: 20px;  \n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: none;\n  border-radius: 12px;\n  padding: 16px 14px 16px 65px;\n  \n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n  padding-left: ${(props) => props.paddindleft || '86px'};\n`;\n\n\n\n\n\nexport const StartWorkoutBlock = styled.div`\n  width: 313px;\n  height: 272px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 20px;\n  margin-bottom: 20px;\n`\nexport const StartWorkoutTitle = styled.p`\n  font-size: 20px;\nfont-weight: 700;\nline-height: 1;\n\nmargin-bottom: 40px;\n`\nexport const Arguments = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-bottom: ${(props) => props.maginbottom || 'auto'};\n`\nexport const SeriaNumber = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  font-size: 20px;\n  font-weight: 700;  \n  color: ${color.blackLight};\n  background: ${color.whitePrimary};\n  \n`\nexport const TextOne = styled.p`\n  width: 190px;  \n`\nexport const TextTwo = styled.p`\n  width: 200px;  \n`\n\nexport const TextSpan = styled.span`\n color: ${color.gryeLight};\n  \n`\n\nexport const LinkToLibrary = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;  color: ${color.gryeLight}; \n  \n  \n  &:hover::after,\n  &:focus::after {\n    color:red; \n  }\n`;\nexport const LinkTextToLibrary = styled.p`\n  position: relative; \n\n  transition: color 0.3s linear; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transition: background 0.3s linear; \n  }\n\n  &:hover,\n  &:focus {\n    color: ${color.whitePrimary};\n    \n    &::after {\n      background: ${color.whitePrimary};  \n    }\n  }\n`;\n\n\nexport const QuoteBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: 313px;\n  height: 83px;\n  border-radius: 12px;\n\n  background: ${color.gryeBlack};\n\n  padding: 14px 20PX;\n`\n// export const BlackBlock = styled.div`\n//   width: 40px;\n//   height: 40px;\n//   background: ${color.black};\n// `\n\nexport const Quote = styled.p`\n  width: 219px;\n  color: ${color.gryeLight};\n \n`\n\nexport const QuoteSpan = styled.span`  \n  color: ${color.whitePrimary};\n \n`\n","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport CustomButton from \"components/CustomButton/CustomButton\";\nimport sprite from '../../img/sprite.svg';\nimport { Arguments, FilterTitle, Filters, FormField, FormFieldConteiner, FormFieldLabel, FormFields, LinkTextToLibrary, LinkToLibrary, Quote, QuoteBlock, QuoteSpan, SeriaNumber, StartWorkoutBlock, StartWorkoutTitle, TextOne, TextSpan, TextTwo } from './RecomendedDashboard.styled';\n\nimport imgBooksDesc from '../../img/stackBooksAndLike/books-desc.png';\nimport imgBooksDesc2x from '../../img/stackBooksAndLike/books-desc@2.png';\n\nconst initialValues = {\n  title: '',\n  author: '',\n};\n\nconst schema = Yup.object({\n  title: Yup.string(),\n  author: Yup.string(),\n});\n\nexport default function RecomendedDashboard() {\n  const handleSubmit = () => {    \n    console.log(\"submit\")\n  }\n  return (\n    <>\n      \n      <Filters>\n        <FilterTitle>Filters:</FilterTitle>\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n          {({ touched }) => (\n            <Form>\n              <FormFields>  \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"title\">Book title:</FormFieldLabel>\n                  <FormField id=\"title\" name=\"title\" type=\"title\" placeholder=\"Enter text\" />                \n                </FormFieldConteiner>                \n                <FormFieldConteiner>\n                  <FormFieldLabel htmlFor=\"author\">The author:</FormFieldLabel>\n                  <FormField id=\"author\" name=\"author\" type=\"author\" placeholder=\"Enter text\" paddindleft=\"95px\" />                \n                </FormFieldConteiner>            \n              </FormFields>       \n              <CustomButton label=\"To apply\" onClick={handleSubmit} width=\"122px\" />             \n            </Form>\n          )}\n        </Formik>\n      </Filters>\n\n      <StartWorkoutBlock>\n        <StartWorkoutTitle>Start your workout</StartWorkoutTitle>\n        <Arguments maginbottom=\"20px\" >\n          <SeriaNumber>1</SeriaNumber>\n          <TextOne>Create a personal library: <TextSpan>add the books you intend to read to it.</TextSpan></TextOne>\n        </Arguments>\n        <Arguments maginbottom=\"26px\">\n          <SeriaNumber>2</SeriaNumber>\n          <TextTwo>Create your first workout: <TextSpan>define a goal, choose a period, start training.</TextSpan></TextTwo>\n        </Arguments>\n\n        <LinkToLibrary to=\"/library\">\n          <LinkTextToLibrary>My library </LinkTextToLibrary>\n            \n          <svg width={24} height={24}>\n            <use href={`${sprite}#icon-arrow-right`} />\n          </svg>          \n        </LinkToLibrary>\n      </StartWorkoutBlock>\n\n      <QuoteBlock>\n        \n      <picture>\n        <source srcSet={imgBooksDesc2x} media=\"(min-resolution: 192dpi)\" />        \n        <img src={imgBooksDesc} alt=\"stack books\" width={40} />\n      </picture>  \n        \n        <Quote>\"Books are <QuoteSpan>windows</QuoteSpan> to the world, and reading is a journey into the unknown.\"</Quote>\n      </QuoteBlock>\n\n    </>\n  );\n}\n  ","import { BooksTen, HeaderAndPaginationBlock, PaginationBtn,PaginationSvg} from \"./Recomended.styled\"\nimport sprite from '../../img/sprite.svg';\nimport RecomendedDashboard from \"components/RecomendedDashboard/RecomendedDashboard\";\nimport Dashboard from \"components/Dashboard/Dashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchBooks } from \"../../redux/books/operations\";\nimport { selectBookData, selectTotalPage } from \"../../redux/books/selector\";\nimport PortalModal from \"components/PortalModal/PortalModal\";\nimport DetailedInformationBook from \"components/DetailedInformationBook/DetailedInformationBook\";\nimport CardBook from \"components/CardBook/CardBook\";\nimport UnivesalMainConteainer from \"components/UniversalMainContainer/UniversalMainContainer\";\nimport UnivesalGeneralBlock from \"components/UniversalGeneralBlock/UniversalGeneralBlock\";\nimport { MainBlockTitle } from \"components/UniversalMainContainer/UniversalMainContainer.styled\";\n\nexport default function Recomended() {\n  const dispatch = useDispatch();\n  const results = useSelector(selectBookData)\n  const totalPages = useSelector(selectTotalPage);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [bookData, setBookData] = useState(false); \n  const [page, setPage] = useState(1);\n  // const ownLibrary = useSelector(selectOwnBooks); \n\n  useEffect(()=> {\n    dispatch(fetchBooks({ page, limit: 10  }))\n  }, [dispatch, page]);\n\n  const handlePageChange = (newPage) => { \n    if (newPage >= 1 && newPage <= totalPages) {\n      setPage(newPage);\n    }\n  };\n  // console.log(ownLibrary)\n  const openLoginModal = (book) => {\n    setModalOpen(true);\n    setBookData(book); // Передаем данные о книге\n  };\n  return (\n    <UnivesalGeneralBlock >\n      <Dashboard>\n        <RecomendedDashboard/>\n      </Dashboard>\n\n      <UnivesalMainConteainer >\n        <HeaderAndPaginationBlock>\n          <MainBlockTitle>Recommended</MainBlockTitle>\n          <div>\n            <PaginationBtn onClick={() => handlePageChange(page - 1)} >\n              <PaginationSvg stoke={page === 1 ? \"true\" : ''}>\n                <use href={`${sprite}#icon-chevron-left`} />\n              </PaginationSvg>\n            </PaginationBtn>\n            <PaginationBtn onClick={() => handlePageChange(page + 1)}>\n              <PaginationSvg stoke={page === totalPages ? \"true\" : ''} >\n                <use href={`${sprite}#icon-chevron-right`} />\n              </PaginationSvg>\n            </PaginationBtn>\n          </div>\n        </HeaderAndPaginationBlock>\n\n\n\n        <BooksTen>\n          {results?.map((book) => (\n            <CardBook  key={book._id} book={book} openLoginModal={openLoginModal} />\n          ))}\n        </BooksTen>   \n\n      </UnivesalMainConteainer>\n\n\n\n      <PortalModal active={modalOpen} setActive={setModalOpen}>\n        <DetailedInformationBook bookData={bookData} closeModals={() => setModalOpen()} btnLabel=\"Add to library\"/>\n      </PortalModal>\n\n    </UnivesalGeneralBlock>\n  );\n}\n  ","import Recomended from \"components/Recomended/Recomended\";\n\nexport default function RecomendedPage() {\n  return (\n    <Recomended />\n  );\n}\n  ","export const selectBookData = (state) => state.book.data;\n\nexport const selectTotalPage = (state) => state.book.totalPages;\n\nexport const selectOwnBooks = (state) => state.book.myBooks;\n\n// export const selectMounthWater = (state) => state.water.mounthHistory;\n\n// export const selectStatusOperation = (state) => state.water.statusOperation;\n"],"names":["BookCard","styled","_templateObject","_taggedTemplateLiteral","BookImg","_templateObject2","BookDataBlock","_templateObject3","TitleAutorBlock","_templateObject4","_ref","page","BookTitle","_templateObject5","BookAutor","_templateObject6","color","DellBtn","_templateObject7","CardBook","book","openLoginModal","_ref$currentPage","currentPage","dispatch","useDispatch","_jsxs","children","_jsx","src","imageUrl","alt","onClick","title","author","deleteBook","_id","width","height","href","concat","sprite","DashboardBlock","Dashboard","Conteiner","ClosingSymbol","CoverBook","TitleBook","AuthorBook","PagesBook","DetailedInformationBook","closeModals","bookData","btnLabel","navigate","useNavigate","totalPages","CustomButton","label","addBookById","Modal","PortalModal","active","setActive","useEffect","closeModal","e","key","handleBodyScroll","disableScroll","document","body","classList","add","remove","addEventListener","removeEventListener","ReactDOM","className","stopPropagation","getElementById","GeneralBlock","UnivesalGeneralBlock","UnivesalMainConteainer","MainBlock","MainBlockTitle","HeaderAndPaginationBlock","PaginationBtn","PaginationSvg","props","stoke","BooksTen","Filters","FilterTitle","FormFields","FormFieldConteiner","FormFieldLabel","FormField","Field","paddindleft","StartWorkoutBlock","StartWorkoutTitle","_templateObject8","Arguments","_templateObject9","maginbottom","SeriaNumber","_templateObject10","TextOne","_templateObject11","TextTwo","_templateObject12","TextSpan","_templateObject13","LinkToLibrary","NavLink","_templateObject14","LinkTextToLibrary","_templateObject15","QuoteBlock","_templateObject16","Quote","_templateObject17","QuoteSpan","_templateObject18","initialValues","schema","Yup","RecomendedDashboard","handleSubmit","console","log","_Fragment","Formik","validationSchema","onSubmit","touched","Form","htmlFor","id","name","type","placeholder","to","srcSet","imgBooksDesc2x","media","Recomended","results","useSelector","selectBookData","selectTotalPage","_useState","useState","_useState2","_slicedToArray","modalOpen","setModalOpen","_useState3","_useState4","setBookData","_useState5","_useState6","setPage","fetchBooks","limit","handlePageChange","newPage","map","RecomendedPage","state","data","selectOwnBooks","myBooks"],"sourceRoot":""}