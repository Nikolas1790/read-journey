{"version":3,"file":"static/js/299.1f65fc59.chunk.js","mappings":"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","sources":["components/RegisterAndLogin/RegisterAndLogin.styled.js","components/RegisterAndLogin/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import color from 'common/GlobalColers'\nimport { ErrorMessage, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 16px;\n  justify-content: center ;\n  padding: 32px;\n`\nexport const FormBlock = styled.div`\n  width:600px;\n  height: 736px; \n  background: ${color.blackLight};\n  border-radius: 30px;\n  padding: 40px 64px;\n`\n\nexport const LogoConteiner = styled.div`\nmargin-bottom: 108px;\n`\n\nexport const Title = styled.h2`\n  font-size: 64px;\n  font-weight: 700;  \n  line-height: 0.94;\n  margin-bottom: 40px;\n`;\n\nexport const TitleSpan = styled.span`\n  color: ${color.whiteTranslucent};\n`;\n\n////////////////////////////////////////////////////////////////////////////////////////\nexport const Img = styled.img`\n  width:600px;\n  height: 736px; \n  background: green;\n  border-radius: 30px;\n`\n///////////////////////////////////////////////////////////\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 308px;\n`;\n\nexport const FormFieldConteiner = styled.div`\n  position:relative;\n`;\n\nexport const FormFieldLabel = styled.label`\n  position:absolute;\n  top: 16px;\n  left: 14px;\n  color: ${color.gryeLight};\n`;\n\nexport const FormField = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n  border-radius: 12px;\n  margin-bottom: 14px;\n  padding: 16px 14px 16px 65px;\n  padding-left: ${(props) => (props.email ? '53px' : '65px')};\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n`;\n\nexport const FormFieldPassvordConteiner = styled.div`\n  position: relative;\n  \n`;\n\nexport const FormFieldPassvord = styled(Field)`\n  width: 100%;\n  height: 50px;\n  border: 1px solid\t${(props) => (props.error === \"true\" ? \"red\" : \"rgba(18, 20, 23, 0.1)\")};\n  border-radius: 12px;\n  padding:  16px 14px 16px 86px;\n  outline: none;\n  color: ${color.whitePrimary};\n  background: ${color.gryeBlack};\n`;\n\nexport const EyeSvg = styled.svg`\n  position: absolute;\n  top: 17px;\n  right: 17px;\n  cursor: pointer;\n  stroke: ${color.blackPrimary};\n  fill: none;\n`;\n\nexport const SubmitBlock = styled.div`\n  /* margin-top: auto; */\n`;\n\n\nexport const FormBtn = styled.button`\n  width: 225px;\n  height: 52px;\n  border-radius: 30px;\n  background: ${color.darkGgeen};\n  color: ${color.blackLight};\n  font-size: 20px;\n  font-weight: 700;\n\n  margin-right: 20px;\n\n  transition: background 0.25s linear;\n  &:hover,\n  &:focus {    \n    background: ${color.whitePrimary}; \n  }\n`;\n\nexport const LinkTo = styled(NavLink)`\n  color: ${color.gryeLight}; \n  font-weight: 500;\n\n  position: relative; \n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -3px; \n    height: 1px; \n    background: ${color.gryeLight}; \n    transform: scaleX(1); \n    transition: transform 0.25s ease-in-out; \n  }\n\n  &:hover::after,\n  &:focus::after {\n    transform: scaleX(0); \n  }\n`;\n\n\n\n//////////////////////////////////////////////////////////////////////\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -20px; \n  padding:  5px 10px 10px;\n`;\n\nexport const ErrorMessagePassword = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: -5px; \n  padding:  5px 10px 10px;\n`;\n\n// export const EmailErrorMessage = styled.div`\n//   color: red;\n//   font-size: 14px;\n//   margin-top: -20px  ; \n//   padding:  5px 10px 10px;\n// `;","import {  Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport sprite from '../../img/sprite.svg';\nimport { Container, ErrorMessagePassword, ErrorMessageStyled, EyeSvg, FormBlock, FormBtn, FormField, FormFieldConteiner, FormFieldLabel, FormFieldPassvord, FormFieldPassvordConteiner, FormFields, Img, LinkTo, LogoConteiner, SubmitBlock, Title, TitleSpan } from \"./RegisterAndLogin.styled\";\nimport desctopImg from '../../img/fon/desctop-block.jpg';\nimport Logo from \"components/Logo/Logo\";\n\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n  \nconst schema = Yup.object({\n  name: Yup.string().required('Required').min(2, \"The name must have at least 2 letters\"),\n  email: Yup.string().matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Invalid email address').required('Required'),\n  password: Yup.string().required('Required').min(7, \"Password must be at least 7 characters\"),\n});\n\nexport default function Register() {\n  const [showPassword, setShowPassword] = useState(false);\n  // const [emailError, setEmailError] = useState('');\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };  \n  const handleSubmit = () => {\n    \nconsole.log(\"submit\")\n  }\n  return (\n    <Container>\n\n      <FormBlock>\n        <LogoConteiner>\n          <Logo />\n        </LogoConteiner>\n\n        <Title>Expand your mind, reading <TitleSpan>a book</TitleSpan></Title>\n\n\n\n        <Formik  initialValues = {initialValues} validationSchema={schema} onSubmit={handleSubmit} >\n\n{({ errors, touched }) => (\n  <Form>\n    <FormFields>  \n      <div>  \n\n\n<FormFieldConteiner>\n      <FormFieldLabel htmlFor=\"name\">Name:</FormFieldLabel>\n      <FormField name=\"name\" type=\"name\" placeholder=\"Nik Ovson\" error={errors.name && touched.name ? \"true\" : \"false\" } />\n      <ErrorMessageStyled name=\"name\" component='div' />\n</FormFieldConteiner>\n\n\n<FormFieldConteiner>\n      <FormFieldLabel htmlFor=\"email\">Mail:</FormFieldLabel>\n      <FormField name=\"email\" type=\"email\" placeholder=\"nik@google.com\" error={errors.email && touched.email ? \"true\" : \"false\" } email=\"true\" />\n      <ErrorMessageStyled name=\"email\" component='div' />\n</FormFieldConteiner>\n      {/* {emailError && <EmailErrorMessage >{emailError}</EmailErrorMessage> } */}\n\n      <FormFieldPassvordConteiner>\n        <FormFieldLabel htmlFor=\"password\">Password:</FormFieldLabel>\n        <FormFieldPassvord  name=\"password\" type={showPassword ? \"text\" : \"password\"} placeholder=\"********\" error={errors.password && touched.password ? \"true\" : \"false\"}  />\n\n        {showPassword ? (\n        <EyeSvg\n          width={20}\n          height={20}\n          onClick={togglePasswordVisibility}\n        >\n          <use href={`${sprite}#icon-eye`} />\n        </EyeSvg>\n          ) : (\n        <EyeSvg\n          width={20}\n          height={20}\n          onClick={togglePasswordVisibility}\n        >\n          <use href={`${sprite}#icon-eye-off`} />\n        </EyeSvg>\n        )}\n      <ErrorMessagePassword name=\"password\" component='div' />\n      </FormFieldPassvordConteiner>\n    </div>     \n      <SubmitBlock>\n        <FormBtn type=\"submit\">Registration</FormBtn>\n        <LinkTo to=\"/login\" >\n          Already have an account?\n        </LinkTo>\n      </SubmitBlock>\n\n    </FormFields>\n\n  </Form>\n)}\n</Formik>\n      </FormBlock>\n      \n\n\n\n      <Img src={desctopImg} alt=\"register img\" />\n    </Container>\n  );\n}\n","import Register from \"components/RegisterAndLogin/Register\";\n\nexport default function LoginPage() {  \n  return (\n    <Register />\n  );\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","FormBlock","_templateObject2","color","LogoConteiner","_templateObject3","Title","_templateObject4","TitleSpan","_templateObject5","Img","_templateObject6","FormFields","_templateObject7","FormFieldConteiner","_templateObject8","FormFieldLabel","_templateObject9","FormField","Field","_templateObject10","props","error","email","FormFieldPassvordConteiner","_templateObject11","FormFieldPassvord","_templateObject12","EyeSvg","_templateObject13","SubmitBlock","_templateObject14","FormBtn","_templateObject15","LinkTo","NavLink","_templateObject16","ErrorMessageStyled","ErrorMessage","_templateObject17","ErrorMessagePassword","_templateObject18","initialValues","name","password","schema","Yup","required","min","matches","Register","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","togglePasswordVisibility","prevShowPassword","_jsxs","children","_jsx","Logo","Formik","validationSchema","onSubmit","console","log","_ref","errors","touched","Form","htmlFor","type","placeholder","component","width","height","onClick","href","concat","sprite","to","src","desctopImg","alt","LoginPage"],"sourceRoot":""}